2024-03-31 17:35:03|   0.0|  0.0|INFORM|Current FME version: FME 2022.2.0.0 (20221103 - Build 22765 - WIN64)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME_HOME is 'C:\Program Files\FME\'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME for June (node locked-crc)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Serial Number: 0
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Temporary License: 93 days left.
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Machine host name is: Strombird
2024-03-31 17:35:03|   0.0|  0.0|INFORM|OS Locale Name     : en_CA
2024-03-31 17:35:03|   0.0|  0.0|INFORM|OS Locale Encoding : windows-1252
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Process Encoding   : UTF-8
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME API version: '4.0 20220615'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: FME_BASE is 'no'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: FME_MF_DIR is 'C:\Users\aayus\OneDrive\Desktop\TL16\data-consolidation/'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: FME_MF_NAME is 'weather.fmw'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: FME_PRODUCT_NAME is 'FME(R) 2022.2.0.0'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Operating System: Microsoft Windows 11 64-bit  (Build 22631)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Platform: WIN64
2024-03-31 17:35:03|   0.0|  0.0|INFORM|System Status: 728.75 GB of disk space available in the FME temporary folder (C:\Users\aayus\AppData\Local\Temp\wbrun_1711929650910_30752\fmetmp_8)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|System Status: 15.74 GB of physical memory available
2024-03-31 17:35:03|   0.0|  0.0|INFORM|System Status: 62.98 GB of virtual memory available
2024-03-31 17:35:03|   0.0|  0.0|INFORM|START - ProcessID: 10740, peak process memory usage: 72260 kB, current process memory usage: 72260 kB
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Command line arguments are `C:\Program Files\FME\fme.exe' `C:/Users/aayus/OneDrive/Desktop/TL16/data-consolidation\wb-xlate-1711931701501_30752' `LOG_STANDARDOUT' `YES' `LOG_TIMINGS' `YES' `LogCountServerName' `57823' `LOG_STANDARDOUT' `No' `WORKBENCH_LOG_SERVER' `54875'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Connection Storage: 'C:\Users\aayus\AppData\Roaming\Safe Software\FME\'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Shared folders for formats are : C:\Program Files\FME\datasources;C:\Users\aayus\OneDrive\Documents\FME\Formats
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Shared folders for transformers are : C:\Users\aayus\AppData\Roaming\Safe Software\FME\Packages\22765-win64\transformers;C:\Program Files\FME\transformers
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Shared folders for coordinate systems are : C:\Users\aayus\OneDrive\Documents\FME\CoordinateSystems
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Shared folders for coordinate system exceptions are : C:\Users\aayus\OneDrive\Documents\FME\CoordinateSystemExceptions
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Shared folders for coordinate system grid overrides are : C:\Users\aayus\OneDrive\Documents\FME\CoordinateSystemGridOverrides
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Shared folders for CS-MAP transformation exceptions are : C:\Users\aayus\OneDrive\Documents\FME\CsmapTransformationExceptions
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Shared folders for transformer categories are : C:\Users\aayus\OneDrive\Documents\FME\TransformerCategories
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Reader Keyword is `MULTI_READER'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Writer Keyword is `NULL_DEST'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Writer Group Definition Keyword is `NULL_DEST_DEF'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Reader type is `MULTI_READER'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Writer type is `NULL'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: No destination coordinate system set
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Current working folder is `C:\Users\aayus\OneDrive\Desktop\TL16\data-consolidation'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Temporary folder is `C:\Users\aayus\AppData\Local\Temp\wbrun_1711929650910_30752\fmetmp_8', set from environment variable `FME_TEMP'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Cache folder is 'C:\Users\aayus\AppData\Local\Temp'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: FME_HOME is `C:\Program Files\FME\'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Start freeing memory when the process exceeds 47.23 GB
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Stop freeing memory when the process is below 35.43 GB
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Creating writer for format: NULL (Nothing)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for writer named `NULL'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Loaded module 'NULL' from file 'C:\Program Files\FME\plugins/NULL.dll'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME API version of module 'NULL' matches current internal version (4.0 20220615)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Creating reader for format: 
2024-03-31 17:35:03|   0.0|  0.0|INFORM|MULTI_READER(MULTI_READER): Will fail with first member reader failure
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Using Multi Reader with keyword `MULTI_READER' to read multiple datasets
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Loaded module 'Geometry_func' from file 'C:\Program Files\FME\plugins/Geometry_func.dll'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME API version of module 'Geometry_func' matches current internal version (4.0 20220615)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Loaded module 'LogCount_func' from file 'C:\Program Files\FME\plugins/LogCount_func.dll'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME API version of module 'LogCount_func' matches current internal version (4.0 20220615)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Loaded module 'QueryFactory' from file 'C:\Program Files\FME\plugins/QueryFactory.dll'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME API version of module 'QueryFactory' matches current internal version (4.0 20220615)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Loaded module 'HTTPFactory' from file 'C:\Program Files\FME\plugins/HTTPFactory.dll'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME API version of module 'HTTPFactory' matches current internal version (4.0 20220615)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Loaded module 'PythonFactory' from file 'C:\Program Files\FME\plugins/PythonFactory.dll'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME API version of module 'PythonFactory' matches current internal version (4.0 20220615)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Using Python interpreter from `C:\Program Files\FME\fmepython310\python310.dll' with PYTHONHOME `C:\Program Files\FME\fmepython310'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Python version 3.10 loaded successfully
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Adding folder `C:\Users\aayus\OneDrive\Desktop\TL16\data-consolidation\' to the python path
2024-03-31 17:35:03|   0.0|  0.0|INFORM|... Last line repeated 2 times ...
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Emptying factory pipeline
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME Configuration: Using connection values from 'testdb' for R_1
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Loaded module 'MSSQL_ADO' from file 'C:\Program Files\FME\plugins/FME_ADO.dll'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|FME API version of module 'FME_ADO' matches current internal version (4.0 20220615)
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Performing query against MSSQL_ADO dataset `testdb'
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `master' for read operation
2024-03-31 17:35:03|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Trying to connect using Microsoft OLE DB Driver for SQL Server...
2024-03-31 17:35:04|   0.0|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'forecasted')
BEGIN
    CREATE TABLE forecasted (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      pop INT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:04|   0.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'forecasted')
BEGIN
    CREATE TABLE forecasted (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      pop INT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:04|   0.0|  0.0|INFORM|FME Configuration: Using connection values from 'testdb' for R_2
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Performing query against MSSQL_ADO dataset `testdb'
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `master' for read operation
2024-03-31 17:35:04|   0.0|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'actual_weather')
BEGIN
    CREATE TABLE actual_weather (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:04|   0.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'actual_weather')
BEGIN
    CREATE TABLE actual_weather (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:04|   0.0|  0.0|INFORM|FME Configuration: Using connection values from 'testdb' for R_3
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Performing query against MSSQL_ADO dataset `testdb'
2024-03-31 17:35:04|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `master' for read operation
2024-03-31 17:35:04|   0.0|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-03-31 17:35:04|   0.1|  0.1|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 1 feature(s)
2024-03-31 17:35:04|   0.1|  0.0|INFORM|GetLastTimestamp: Splitting bulk features into individual features
2024-03-31 17:35:04|   0.1|  0.0|INFORM|True
2024-03-31 17:35:04|   0.1|  0.0|INFORM|False
2024-03-31 17:35:04|   0.1|  0.0|INFORM|1711929600
2024-03-31 17:35:04|   0.1|  0.0|INFORM|Getting schema from query 'SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:04|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 1 feature(s)
2024-03-31 17:35:04|   0.1|  0.0|STATS |Creator_XML_Creator (CreationFactory): Created 1 features
2024-03-31 17:35:04|   0.1|  0.0|STATS |Creator_Cloner (TeeFactory): Cloned 1 input feature(s) into 1 output feature(s)
2024-03-31 17:35:04|   0.1|  0.0|STATS |Creator CREATED Splitter (TeeFactory): Cloned 1 input feature(s) into 2 output feature(s)
2024-03-31 17:35:04|   0.1|  0.0|STATS |Creator_CREATED_0_GJAgmIF9G6c= Brancher -1 10 (BranchingFactory): Branched 1 input feature -- 1 feature routed to the target factory, and 0 features routed to the fallback factory.
2024-03-31 17:35:04|   0.1|  0.0|STATS |Creator_CREATED_1_Exx7idfjvCA= Brancher -1 15 (BranchingFactory): Branched 1 input feature -- 1 feature routed to the target factory, and 0 features routed to the fallback factory.
2024-03-31 17:35:04|   0.1|  0.0|STATS |_CREATOR_BRANCH_TARGET (TeeFactory): Cloned 2 input feature(s) into 2 output feature(s)
2024-03-31 17:35:04|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `master' . Read operation complete
2024-03-31 17:35:05|   0.4|  0.3|INFORM|CallWeatherForecast (HTTPFactory): [1]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 13638 bytes
2024-03-31 17:35:05|   0.4|  0.0|INFORM|CallWeatherForecast (HTTPFactory): [1]: HTTP Download: received 13638 bytes
2024-03-31 17:35:05|   0.4|  0.0|INFORM|CallWeatherForecast (HTTPFactory): [1]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 13638 bytes, DNS lookup time: 2 ms, total transfer time: 1614 ms
2024-03-31 17:35:05|   0.5|  0.1|INFORM|FME Configuration: Using connection values from 'testdb' for R_4
2024-03-31 17:35:05|   0.5|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-03-31 17:35:05|   0.5|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-03-31 17:35:05|   0.5|  0.0|INFORM|Performing query against MSSQL_ADO dataset `testdb'
2024-03-31 17:35:05|   0.5|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `master' for read operation
2024-03-31 17:35:05|   0.5|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-03-31 17:35:05|   0.5|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-31 17:35:05|   0.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711929600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.99,
    10000,
    274,
    1.87,
    1.92,
    284.43,
    1015,
    0,
    283.39,
    278.75,
    71,
    1711929600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.99, visibility = 10000,
        wind_deg = 274, wind_gust = 1.87,
        wind_speed = 1.92, temp = 284.43,
        pressure = 1015, pop = 0,
        feels_like = 283.39, dew_point = 278.75,
        clouds = 71, dt = 1711929600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1711929600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:05|   0.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711929600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.99,
    10000,
    274,
    1.87,
    1.92,
    284.43,
    1015,
    0,
    283.39,
    278.75,
    71,
    1711929600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.99, visibility = 10000,
        wind_deg = 274, wind_gust = 1.87,
        wind_speed = 1.92, temp = 284.43,
        pressure = 1015, pop = 0,
        feels_like = 283.39, dew_point = 278.75,
        clouds = 71, dt = 1711929600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1711929600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.1|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711933200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.43,
    10000,
    265,
    1.51,
    1.41,
    285.06,
    1015,
    0,
    284.11,
    279.56,
    75,
    1711933200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.43, visibility = 10000,
        wind_deg = 265, wind_gust = 1.51,
        wind_speed = 1.41, temp = 285.06,
        pressure = 1015, pop = 0,
        feels_like = 284.11, dew_point = 279.56,
        clouds = 75, dt = 1711933200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1711933200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711933200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.43,
    10000,
    265,
    1.51,
    1.41,
    285.06,
    1015,
    0,
    284.11,
    279.56,
    75,
    1711933200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.43, visibility = 10000,
        wind_deg = 265, wind_gust = 1.51,
        wind_speed = 1.41, temp = 285.06,
        pressure = 1015, pop = 0,
        feels_like = 284.11, dew_point = 279.56,
        clouds = 75, dt = 1711933200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1711933200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Logging limit reached for the preceding message. Further instances of this message will not be logged
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711936800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.11,
    10000,
    226,
    1.1,
    1.17,
    284.4,
    1015,
    0,
    283.36,
    278.72,
    80,
    1711936800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.11, visibility = 10000,
        wind_deg = 226, wind_gust = 1.1,
        wind_speed = 1.17, temp = 284.4,
        pressure = 1015, pop = 0,
        feels_like = 283.36, dew_point = 278.72,
        clouds = 80, dt = 1711936800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1711936800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711936800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.11,
    10000,
    226,
    1.1,
    1.17,
    284.4,
    1015,
    0,
    283.36,
    278.72,
    80,
    1711936800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.11, visibility = 10000,
        wind_deg = 226, wind_gust = 1.1,
        wind_speed = 1.17, temp = 284.4,
        pressure = 1015, pop = 0,
        feels_like = 283.36, dew_point = 278.72,
        clouds = 80, dt = 1711936800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1711936800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711940400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    205,
    0.73,
    0.65,
    283.7,
    1015,
    0,
    282.61,
    278.26,
    85,
    1711940400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 205, wind_gust = 0.73,
        wind_speed = 0.65, temp = 283.7,
        pressure = 1015, pop = 0,
        feels_like = 282.61, dew_point = 278.26,
        clouds = 85, dt = 1711940400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711940400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711940400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    205,
    0.73,
    0.65,
    283.7,
    1015,
    0,
    282.61,
    278.26,
    85,
    1711940400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 205, wind_gust = 0.73,
        wind_speed = 0.65, temp = 283.7,
        pressure = 1015, pop = 0,
        feels_like = 282.61, dew_point = 278.26,
        clouds = 85, dt = 1711940400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711940400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711944000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    86,
    0.71,
    0.72,
    283.05,
    1015,
    0,
    283.05,
    277.84,
    90,
    1711944000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 86, wind_gust = 0.71,
        wind_speed = 0.72, temp = 283.05,
        pressure = 1015, pop = 0,
        feels_like = 283.05, dew_point = 277.84,
        clouds = 90, dt = 1711944000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711944000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711944000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    86,
    0.71,
    0.72,
    283.05,
    1015,
    0,
    283.05,
    277.84,
    90,
    1711944000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 86, wind_gust = 0.71,
        wind_speed = 0.72, temp = 283.05,
        pressure = 1015, pop = 0,
        feels_like = 283.05, dew_point = 277.84,
        clouds = 90, dt = 1711944000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711944000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711947600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    82,
    1.58,
    1.51,
    282.52,
    1015,
    0,
    282.07,
    277.33,
    95,
    1711947600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 82, wind_gust = 1.58,
        wind_speed = 1.51, temp = 282.52,
        pressure = 1015, pop = 0,
        feels_like = 282.07, dew_point = 277.33,
        clouds = 95, dt = 1711947600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711947600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711947600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    82,
    1.58,
    1.51,
    282.52,
    1015,
    0,
    282.07,
    277.33,
    95,
    1711947600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 82, wind_gust = 1.58,
        wind_speed = 1.51, temp = 282.52,
        pressure = 1015, pop = 0,
        feels_like = 282.07, dew_point = 277.33,
        clouds = 95, dt = 1711947600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711947600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711951200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    93,
    2.36,
    2.14,
    281.78,
    1016,
    0,
    280.63,
    276.76,
    97,
    1711951200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 93, wind_gust = 2.36,
        wind_speed = 2.14, temp = 281.78,
        pressure = 1016, pop = 0,
        feels_like = 280.63, dew_point = 276.76,
        clouds = 97, dt = 1711951200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711951200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711951200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    93,
    2.36,
    2.14,
    281.78,
    1016,
    0,
    280.63,
    276.76,
    97,
    1711951200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 93, wind_gust = 2.36,
        wind_speed = 2.14, temp = 281.78,
        pressure = 1016, pop = 0,
        feels_like = 280.63, dew_point = 276.76,
        clouds = 97, dt = 1711951200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711951200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711954800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    3.7,
    2.89,
    281.4,
    1016,
    0,
    279.63,
    276.77,
    89,
    1711954800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 3.7,
        wind_speed = 2.89, temp = 281.4,
        pressure = 1016, pop = 0,
        feels_like = 279.63, dew_point = 276.77,
        clouds = 89, dt = 1711954800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711954800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711954800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    3.7,
    2.89,
    281.4,
    1016,
    0,
    279.63,
    276.77,
    89,
    1711954800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 3.7,
        wind_speed = 2.89, temp = 281.4,
        pressure = 1016, pop = 0,
        feels_like = 279.63, dew_point = 276.77,
        clouds = 89, dt = 1711954800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711954800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711958400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    99,
    4.38,
    3.3,
    280.99,
    1016,
    0,
    278.88,
    276.6,
    89,
    1711958400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 99, wind_gust = 4.38,
        wind_speed = 3.3, temp = 280.99,
        pressure = 1016, pop = 0,
        feels_like = 278.88, dew_point = 276.6,
        clouds = 89, dt = 1711958400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711958400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711958400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    99,
    4.38,
    3.3,
    280.99,
    1016,
    0,
    278.88,
    276.6,
    89,
    1711958400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 99, wind_gust = 4.38,
        wind_speed = 3.3, temp = 280.99,
        pressure = 1016, pop = 0,
        feels_like = 278.88, dew_point = 276.6,
        clouds = 89, dt = 1711958400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711958400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711962000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    96,
    3.99,
    3.09,
    281.04,
    1016,
    0,
    279.07,
    276.55,
    93,
    1711962000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 96, wind_gust = 3.99,
        wind_speed = 3.09, temp = 281.04,
        pressure = 1016, pop = 0,
        feels_like = 279.07, dew_point = 276.55,
        clouds = 93, dt = 1711962000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711962000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711962000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    96,
    3.99,
    3.09,
    281.04,
    1016,
    0,
    279.07,
    276.55,
    93,
    1711962000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 96, wind_gust = 3.99,
        wind_speed = 3.09, temp = 281.04,
        pressure = 1016, pop = 0,
        feels_like = 279.07, dew_point = 276.55,
        clouds = 93, dt = 1711962000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711962000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711965600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    92,
    3.32,
    2.58,
    281.13,
    1017,
    0,
    279.52,
    276.41,
    94,
    1711965600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 92, wind_gust = 3.32,
        wind_speed = 2.58, temp = 281.13,
        pressure = 1017, pop = 0,
        feels_like = 279.52, dew_point = 276.41,
        clouds = 94, dt = 1711965600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711965600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711965600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    92,
    3.32,
    2.58,
    281.13,
    1017,
    0,
    279.52,
    276.41,
    94,
    1711965600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 92, wind_gust = 3.32,
        wind_speed = 2.58, temp = 281.13,
        pressure = 1017, pop = 0,
        feels_like = 279.52, dew_point = 276.41,
        clouds = 94, dt = 1711965600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711965600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711969200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    88,
    3.03,
    2.34,
    281.1,
    1017,
    0,
    279.67,
    276.36,
    96,
    1711969200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 88, wind_gust = 3.03,
        wind_speed = 2.34, temp = 281.1,
        pressure = 1017, pop = 0,
        feels_like = 279.67, dew_point = 276.36,
        clouds = 96, dt = 1711969200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711969200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711969200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    88,
    3.03,
    2.34,
    281.1,
    1017,
    0,
    279.67,
    276.36,
    96,
    1711969200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 88, wind_gust = 3.03,
        wind_speed = 2.34, temp = 281.1,
        pressure = 1017, pop = 0,
        feels_like = 279.67, dew_point = 276.36,
        clouds = 96, dt = 1711969200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711969200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711972800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    77,
    2.46,
    1.95,
    281.21,
    1018,
    0,
    280.13,
    276.21,
    96,
    1711972800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 77, wind_gust = 2.46,
        wind_speed = 1.95, temp = 281.21,
        pressure = 1018, pop = 0,
        feels_like = 280.13, dew_point = 276.21,
        clouds = 96, dt = 1711972800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711972800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711972800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    77,
    2.46,
    1.95,
    281.21,
    1018,
    0,
    280.13,
    276.21,
    96,
    1711972800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 77, wind_gust = 2.46,
        wind_speed = 1.95, temp = 281.21,
        pressure = 1018, pop = 0,
        feels_like = 280.13, dew_point = 276.21,
        clouds = 96, dt = 1711972800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711972800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711976400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    75,
    2.38,
    1.9,
    281.26,
    1018,
    0,
    280.23,
    276.26,
    100,
    1711976400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 75, wind_gust = 2.38,
        wind_speed = 1.9, temp = 281.26,
        pressure = 1018, pop = 0,
        feels_like = 280.23, dew_point = 276.26,
        clouds = 100, dt = 1711976400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711976400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711976400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    75,
    2.38,
    1.9,
    281.26,
    1018,
    0,
    280.23,
    276.26,
    100,
    1711976400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 75, wind_gust = 2.38,
        wind_speed = 1.9, temp = 281.26,
        pressure = 1018, pop = 0,
        feels_like = 280.23, dew_point = 276.26,
        clouds = 100, dt = 1711976400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711976400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711980000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    85,
    1.86,
    1.46,
    281.27,
    1019,
    0,
    280.7,
    276.16,
    100,
    1711980000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 85, wind_gust = 1.86,
        wind_speed = 1.46, temp = 281.27,
        pressure = 1019, pop = 0,
        feels_like = 280.7, dew_point = 276.16,
        clouds = 100, dt = 1711980000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711980000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711980000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    85,
    1.86,
    1.46,
    281.27,
    1019,
    0,
    280.7,
    276.16,
    100,
    1711980000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 85, wind_gust = 1.86,
        wind_speed = 1.46, temp = 281.27,
        pressure = 1019, pop = 0,
        feels_like = 280.7, dew_point = 276.16,
        clouds = 100, dt = 1711980000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711980000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711983600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.22,
    10000,
    89,
    2.93,
    2.03,
    281.34,
    1019,
    0,
    280.21,
    276.18,
    100,
    1711983600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.22, visibility = 10000,
        wind_deg = 89, wind_gust = 2.93,
        wind_speed = 2.03, temp = 281.34,
        pressure = 1019, pop = 0,
        feels_like = 280.21, dew_point = 276.18,
        clouds = 100, dt = 1711983600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711983600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711983600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.22,
    10000,
    89,
    2.93,
    2.03,
    281.34,
    1019,
    0,
    280.21,
    276.18,
    100,
    1711983600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.22, visibility = 10000,
        wind_deg = 89, wind_gust = 2.93,
        wind_speed = 2.03, temp = 281.34,
        pressure = 1019, pop = 0,
        feels_like = 280.21, dew_point = 276.18,
        clouds = 100, dt = 1711983600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711983600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711987200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.7,
    10000,
    91,
    3.12,
    2.25,
    281.75,
    1019,
    0,
    280.5,
    276.57,
    100,
    1711987200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.7, visibility = 10000,
        wind_deg = 91, wind_gust = 3.12,
        wind_speed = 2.25, temp = 281.75,
        pressure = 1019, pop = 0,
        feels_like = 280.5, dew_point = 276.57,
        clouds = 100, dt = 1711987200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711987200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711987200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.7,
    10000,
    91,
    3.12,
    2.25,
    281.75,
    1019,
    0,
    280.5,
    276.57,
    100,
    1711987200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.7, visibility = 10000,
        wind_deg = 91, wind_gust = 3.12,
        wind_speed = 2.25, temp = 281.75,
        pressure = 1019, pop = 0,
        feels_like = 280.5, dew_point = 276.57,
        clouds = 100, dt = 1711987200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711987200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711990800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.54,
    10000,
    101,
    3.22,
    2.26,
    282.45,
    1020,
    0,
    281.32,
    277.24,
    100,
    1711990800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.54, visibility = 10000,
        wind_deg = 101, wind_gust = 3.22,
        wind_speed = 2.26, temp = 282.45,
        pressure = 1020, pop = 0,
        feels_like = 281.32, dew_point = 277.24,
        clouds = 100, dt = 1711990800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711990800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711990800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.54,
    10000,
    101,
    3.22,
    2.26,
    282.45,
    1020,
    0,
    281.32,
    277.24,
    100,
    1711990800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.54, visibility = 10000,
        wind_deg = 101, wind_gust = 3.22,
        wind_speed = 2.26, temp = 282.45,
        pressure = 1020, pop = 0,
        feels_like = 281.32, dew_point = 277.24,
        clouds = 100, dt = 1711990800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711990800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711994400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.28,
    10000,
    127,
    2.48,
    1.78,
    283.02,
    1021,
    0,
    282.38,
    277.83,
    100,
    1711994400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.28, visibility = 10000,
        wind_deg = 127, wind_gust = 2.48,
        wind_speed = 1.78, temp = 283.02,
        pressure = 1021, pop = 0,
        feels_like = 282.38, dew_point = 277.83,
        clouds = 100, dt = 1711994400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711994400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711994400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.28,
    10000,
    127,
    2.48,
    1.78,
    283.02,
    1021,
    0,
    282.38,
    277.83,
    100,
    1711994400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.28, visibility = 10000,
        wind_deg = 127, wind_gust = 2.48,
        wind_speed = 1.78, temp = 283.02,
        pressure = 1021, pop = 0,
        feels_like = 282.38, dew_point = 277.83,
        clouds = 100, dt = 1711994400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711994400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711998000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.62,
    10000,
    142,
    2.74,
    2.08,
    283.45,
    1021,
    0,
    282.39,
    278.45,
    100,
    1711998000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.62, visibility = 10000,
        wind_deg = 142, wind_gust = 2.74,
        wind_speed = 2.08, temp = 283.45,
        pressure = 1021, pop = 0,
        feels_like = 282.39, dew_point = 278.45,
        clouds = 100, dt = 1711998000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711998000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711998000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.62,
    10000,
    142,
    2.74,
    2.08,
    283.45,
    1021,
    0,
    282.39,
    278.45,
    100,
    1711998000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.62, visibility = 10000,
        wind_deg = 142, wind_gust = 2.74,
        wind_speed = 2.08, temp = 283.45,
        pressure = 1021, pop = 0,
        feels_like = 282.39, dew_point = 278.45,
        clouds = 100, dt = 1711998000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711998000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712001600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.81,
    10000,
    170,
    3.04,
    2.75,
    283.76,
    1021,
    0,
    282.76,
    278.93,
    99,
    1712001600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.81, visibility = 10000,
        wind_deg = 170, wind_gust = 3.04,
        wind_speed = 2.75, temp = 283.76,
        pressure = 1021, pop = 0,
        feels_like = 282.76, dew_point = 278.93,
        clouds = 99, dt = 1712001600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712001600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712001600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.81,
    10000,
    170,
    3.04,
    2.75,
    283.76,
    1021,
    0,
    282.76,
    278.93,
    99,
    1712001600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.81, visibility = 10000,
        wind_deg = 170, wind_gust = 3.04,
        wind_speed = 2.75, temp = 283.76,
        pressure = 1021, pop = 0,
        feels_like = 282.76, dew_point = 278.93,
        clouds = 99, dt = 1712001600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712001600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712005200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.38,
    10000,
    188,
    3.05,
    3.07,
    283.27,
    1022,
    0,
    282.3,
    279.04,
    99,
    1712005200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.38, visibility = 10000,
        wind_deg = 188, wind_gust = 3.05,
        wind_speed = 3.07, temp = 283.27,
        pressure = 1022, pop = 0,
        feels_like = 282.3, dew_point = 279.04,
        clouds = 99, dt = 1712005200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712005200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712005200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.38,
    10000,
    188,
    3.05,
    3.07,
    283.27,
    1022,
    0,
    282.3,
    279.04,
    99,
    1712005200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.38, visibility = 10000,
        wind_deg = 188, wind_gust = 3.05,
        wind_speed = 3.07, temp = 283.27,
        pressure = 1022, pop = 0,
        feels_like = 282.3, dew_point = 279.04,
        clouds = 99, dt = 1712005200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712005200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712008800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.9,
    10000,
    168,
    2.99,
    2.55,
    282.89,
    1022,
    0,
    281.63,
    278.87,
    99,
    1712008800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.9, visibility = 10000,
        wind_deg = 168, wind_gust = 2.99,
        wind_speed = 2.55, temp = 282.89,
        pressure = 1022, pop = 0,
        feels_like = 281.63, dew_point = 278.87,
        clouds = 99, dt = 1712008800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712008800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712008800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.9,
    10000,
    168,
    2.99,
    2.55,
    282.89,
    1022,
    0,
    281.63,
    278.87,
    99,
    1712008800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.9, visibility = 10000,
        wind_deg = 168, wind_gust = 2.99,
        wind_speed = 2.55, temp = 282.89,
        pressure = 1022, pop = 0,
        feels_like = 281.63, dew_point = 278.87,
        clouds = 99, dt = 1712008800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712008800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712012400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.96,
    10000,
    152,
    2.78,
    1.96,
    283.49,
    1021,
    0,
    282.46,
    278.71,
    93,
    1712012400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.96, visibility = 10000,
        wind_deg = 152, wind_gust = 2.78,
        wind_speed = 1.96, temp = 283.49,
        pressure = 1021, pop = 0,
        feels_like = 282.46, dew_point = 278.71,
        clouds = 93, dt = 1712012400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712012400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712012400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.96,
    10000,
    152,
    2.78,
    1.96,
    283.49,
    1021,
    0,
    282.46,
    278.71,
    93,
    1712012400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.96, visibility = 10000,
        wind_deg = 152, wind_gust = 2.78,
        wind_speed = 1.96, temp = 283.49,
        pressure = 1021, pop = 0,
        feels_like = 282.46, dew_point = 278.71,
        clouds = 93, dt = 1712012400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712012400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712016000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.07,
    10000,
    158,
    2.68,
    1.99,
    284.01,
    1021,
    0,
    283.01,
    278.91,
    94,
    1712016000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.07, visibility = 10000,
        wind_deg = 158, wind_gust = 2.68,
        wind_speed = 1.99, temp = 284.01,
        pressure = 1021, pop = 0,
        feels_like = 283.01, dew_point = 278.91,
        clouds = 94, dt = 1712016000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712016000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712016000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.07,
    10000,
    158,
    2.68,
    1.99,
    284.01,
    1021,
    0,
    283.01,
    278.91,
    94,
    1712016000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.07, visibility = 10000,
        wind_deg = 158, wind_gust = 2.68,
        wind_speed = 1.99, temp = 284.01,
        pressure = 1021, pop = 0,
        feels_like = 283.01, dew_point = 278.91,
        clouds = 94, dt = 1712016000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712016000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712019600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.47,
    10000,
    172,
    2.39,
    1.95,
    284.22,
    1021,
    0,
    283.21,
    279.02,
    79,
    1712019600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.47, visibility = 10000,
        wind_deg = 172, wind_gust = 2.39,
        wind_speed = 1.95, temp = 284.22,
        pressure = 1021, pop = 0,
        feels_like = 283.21, dew_point = 279.02,
        clouds = 79, dt = 1712019600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712019600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712019600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.47,
    10000,
    172,
    2.39,
    1.95,
    284.22,
    1021,
    0,
    283.21,
    279.02,
    79,
    1712019600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.47, visibility = 10000,
        wind_deg = 172, wind_gust = 2.39,
        wind_speed = 1.95, temp = 284.22,
        pressure = 1021, pop = 0,
        feels_like = 283.21, dew_point = 279.02,
        clouds = 79, dt = 1712019600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712019600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712023200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.11,
    10000,
    164,
    2.18,
    1.66,
    284.02,
    1021,
    0,
    283.04,
    279.23,
    66,
    1712023200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.11, visibility = 10000,
        wind_deg = 164, wind_gust = 2.18,
        wind_speed = 1.66, temp = 284.02,
        pressure = 1021, pop = 0,
        feels_like = 283.04, dew_point = 279.23,
        clouds = 66, dt = 1712023200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712023200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712023200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.11,
    10000,
    164,
    2.18,
    1.66,
    284.02,
    1021,
    0,
    283.04,
    279.23,
    66,
    1712023200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.11, visibility = 10000,
        wind_deg = 164, wind_gust = 2.18,
        wind_speed = 1.66, temp = 284.02,
        pressure = 1021, pop = 0,
        feels_like = 283.04, dew_point = 279.23,
        clouds = 66, dt = 1712023200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712023200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712026800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    122,
    1.3,
    1.17,
    283.53,
    1022,
    0,
    282.58,
    279.4,
    60,
    1712026800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 122, wind_gust = 1.3,
        wind_speed = 1.17, temp = 283.53,
        pressure = 1022, pop = 0,
        feels_like = 282.58, dew_point = 279.4,
        clouds = 60, dt = 1712026800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712026800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712026800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    122,
    1.3,
    1.17,
    283.53,
    1022,
    0,
    282.58,
    279.4,
    60,
    1712026800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 122, wind_gust = 1.3,
        wind_speed = 1.17, temp = 283.53,
        pressure = 1022, pop = 0,
        feels_like = 282.58, dew_point = 279.4,
        clouds = 60, dt = 1712026800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712026800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712030400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    94,
    2.07,
    1.9,
    283.36,
    1022,
    0,
    282.42,
    279.49,
    68,
    1712030400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 94, wind_gust = 2.07,
        wind_speed = 1.9, temp = 283.36,
        pressure = 1022, pop = 0,
        feels_like = 282.42, dew_point = 279.49,
        clouds = 68, dt = 1712030400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712030400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712030400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    94,
    2.07,
    1.9,
    283.36,
    1022,
    0,
    282.42,
    279.49,
    68,
    1712030400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 94, wind_gust = 2.07,
        wind_speed = 1.9, temp = 283.36,
        pressure = 1022, pop = 0,
        feels_like = 282.42, dew_point = 279.49,
        clouds = 68, dt = 1712030400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712030400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712034000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    93,
    3.35,
    2.84,
    283.24,
    1022,
    0,
    282.32,
    279.46,
    74,
    1712034000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 93, wind_gust = 3.35,
        wind_speed = 2.84, temp = 283.24,
        pressure = 1022, pop = 0,
        feels_like = 282.32, dew_point = 279.46,
        clouds = 74, dt = 1712034000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712034000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712034000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    93,
    3.35,
    2.84,
    283.24,
    1022,
    0,
    282.32,
    279.46,
    74,
    1712034000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 93, wind_gust = 3.35,
        wind_speed = 2.84, temp = 283.24,
        pressure = 1022, pop = 0,
        feels_like = 282.32, dew_point = 279.46,
        clouds = 74, dt = 1712034000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712034000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712037600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    84,
    4.5,
    3.28,
    283.04,
    1022,
    0,
    281.37,
    279.5,
    69,
    1712037600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 84, wind_gust = 4.5,
        wind_speed = 3.28, temp = 283.04,
        pressure = 1022, pop = 0,
        feels_like = 281.37, dew_point = 279.5,
        clouds = 69, dt = 1712037600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712037600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712037600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    84,
    4.5,
    3.28,
    283.04,
    1022,
    0,
    281.37,
    279.5,
    69,
    1712037600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 84, wind_gust = 4.5,
        wind_speed = 3.28, temp = 283.04,
        pressure = 1022, pop = 0,
        feels_like = 281.37, dew_point = 279.5,
        clouds = 69, dt = 1712037600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712037600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712041200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    87,
    5.17,
    3.57,
    282.83,
    1022,
    0,
    280.97,
    279.4,
    81,
    1712041200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 87, wind_gust = 5.17,
        wind_speed = 3.57, temp = 282.83,
        pressure = 1022, pop = 0,
        feels_like = 280.97, dew_point = 279.4,
        clouds = 81, dt = 1712041200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712041200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712041200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    87,
    5.17,
    3.57,
    282.83,
    1022,
    0,
    280.97,
    279.4,
    81,
    1712041200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 87, wind_gust = 5.17,
        wind_speed = 3.57, temp = 282.83,
        pressure = 1022, pop = 0,
        feels_like = 280.97, dew_point = 279.4,
        clouds = 81, dt = 1712041200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712041200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712044800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    86,
    4.5,
    3.32,
    282.71,
    1022,
    0,
    280.95,
    279.11,
    52,
    1712044800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 86, wind_gust = 4.5,
        wind_speed = 3.32, temp = 282.71,
        pressure = 1022, pop = 0,
        feels_like = 280.95, dew_point = 279.11,
        clouds = 52, dt = 1712044800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712044800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712044800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    86,
    4.5,
    3.32,
    282.71,
    1022,
    0,
    280.95,
    279.11,
    52,
    1712044800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 86, wind_gust = 4.5,
        wind_speed = 3.32, temp = 282.71,
        pressure = 1022, pop = 0,
        feels_like = 280.95, dew_point = 279.11,
        clouds = 52, dt = 1712044800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712044800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712048400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    97,
    4.43,
    3.42,
    282.48,
    1022,
    0,
    280.62,
    279.05,
    68,
    1712048400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 97, wind_gust = 4.43,
        wind_speed = 3.42, temp = 282.48,
        pressure = 1022, pop = 0,
        feels_like = 280.62, dew_point = 279.05,
        clouds = 68, dt = 1712048400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712048400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712048400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    97,
    4.43,
    3.42,
    282.48,
    1022,
    0,
    280.62,
    279.05,
    68,
    1712048400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 97, wind_gust = 4.43,
        wind_speed = 3.42, temp = 282.48,
        pressure = 1022, pop = 0,
        feels_like = 280.62, dew_point = 279.05,
        clouds = 68, dt = 1712048400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712048400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712052000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    101,
    5.47,
    3.63,
    282.34,
    1022,
    0,
    280.34,
    279.07,
    76,
    1712052000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 101, wind_gust = 5.47,
        wind_speed = 3.63, temp = 282.34,
        pressure = 1022, pop = 0,
        feels_like = 280.34, dew_point = 279.07,
        clouds = 76, dt = 1712052000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712052000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712052000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    101,
    5.47,
    3.63,
    282.34,
    1022,
    0,
    280.34,
    279.07,
    76,
    1712052000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 101, wind_gust = 5.47,
        wind_speed = 3.63, temp = 282.34,
        pressure = 1022, pop = 0,
        feels_like = 280.34, dew_point = 279.07,
        clouds = 76, dt = 1712052000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712052000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712055600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    102,
    8.14,
    4.49,
    282.1,
    1022,
    0,
    279.64,
    279.12,
    81,
    1712055600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 102, wind_gust = 8.14,
        wind_speed = 4.49, temp = 282.1,
        pressure = 1022, pop = 0,
        feels_like = 279.64, dew_point = 279.12,
        clouds = 81, dt = 1712055600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712055600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712055600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    102,
    8.14,
    4.49,
    282.1,
    1022,
    0,
    279.64,
    279.12,
    81,
    1712055600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 102, wind_gust = 8.14,
        wind_speed = 4.49, temp = 282.1,
        pressure = 1022, pop = 0,
        feels_like = 279.64, dew_point = 279.12,
        clouds = 81, dt = 1712055600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712055600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712059200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    101,
    8.91,
    5.39,
    282.09,
    1022,
    0,
    279.26,
    279.12,
    84,
    1712059200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 101, wind_gust = 8.91,
        wind_speed = 5.39, temp = 282.09,
        pressure = 1022, pop = 0,
        feels_like = 279.26, dew_point = 279.12,
        clouds = 84, dt = 1712059200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712059200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712059200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    101,
    8.91,
    5.39,
    282.09,
    1022,
    0,
    279.26,
    279.12,
    84,
    1712059200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 101, wind_gust = 8.91,
        wind_speed = 5.39, temp = 282.09,
        pressure = 1022, pop = 0,
        feels_like = 279.26, dew_point = 279.12,
        clouds = 84, dt = 1712059200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1712059200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712062800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    99,
    8.9,
    5.89,
    281.94,
    1022,
    0,
    278.89,
    279.12,
    100,
    1712062800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 99, wind_gust = 8.9,
        wind_speed = 5.89, temp = 281.94,
        pressure = 1022, pop = 0,
        feels_like = 278.89, dew_point = 279.12,
        clouds = 100, dt = 1712062800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712062800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712062800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    99,
    8.9,
    5.89,
    281.94,
    1022,
    0,
    278.89,
    279.12,
    100,
    1712062800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 99, wind_gust = 8.9,
        wind_speed = 5.89, temp = 281.94,
        pressure = 1022, pop = 0,
        feels_like = 278.89, dew_point = 279.12,
        clouds = 100, dt = 1712062800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712062800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712066400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    96,
    7.86,
    5.77,
    281.65,
    1022,
    0,
    278.57,
    279.31,
    100,
    1712066400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 96, wind_gust = 7.86,
        wind_speed = 5.77, temp = 281.65,
        pressure = 1022, pop = 0,
        feels_like = 278.57, dew_point = 279.31,
        clouds = 100, dt = 1712066400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712066400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712066400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    96,
    7.86,
    5.77,
    281.65,
    1022,
    0,
    278.57,
    279.31,
    100,
    1712066400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 96, wind_gust = 7.86,
        wind_speed = 5.77, temp = 281.65,
        pressure = 1022, pop = 0,
        feels_like = 278.57, dew_point = 279.31,
        clouds = 100, dt = 1712066400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712066400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712070000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.25,
    10000,
    101,
    8.24,
    6.2,
    281.79,
    1022,
    0,
    278.6,
    279.69,
    100,
    1712070000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.25, visibility = 10000,
        wind_deg = 101, wind_gust = 8.24,
        wind_speed = 6.2, temp = 281.79,
        pressure = 1022, pop = 0,
        feels_like = 278.6, dew_point = 279.69,
        clouds = 100, dt = 1712070000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712070000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712070000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.25,
    10000,
    101,
    8.24,
    6.2,
    281.79,
    1022,
    0,
    278.6,
    279.69,
    100,
    1712070000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.25, visibility = 10000,
        wind_deg = 101, wind_gust = 8.24,
        wind_speed = 6.2, temp = 281.79,
        pressure = 1022, pop = 0,
        feels_like = 278.6, dew_point = 279.69,
        clouds = 100, dt = 1712070000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712070000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712073600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.73,
    10000,
    105,
    8.26,
    6.26,
    282.28,
    1022,
    0,
    279.2,
    280.3,
    100,
    1712073600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.73, visibility = 10000,
        wind_deg = 105, wind_gust = 8.26,
        wind_speed = 6.26, temp = 282.28,
        pressure = 1022, pop = 0,
        feels_like = 279.2, dew_point = 280.3,
        clouds = 100, dt = 1712073600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712073600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712073600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.73,
    10000,
    105,
    8.26,
    6.26,
    282.28,
    1022,
    0,
    279.2,
    280.3,
    100,
    1712073600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.73, visibility = 10000,
        wind_deg = 105, wind_gust = 8.26,
        wind_speed = 6.26, temp = 282.28,
        pressure = 1022, pop = 0,
        feels_like = 279.2, dew_point = 280.3,
        clouds = 100, dt = 1712073600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712073600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712077200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.54,
    10000,
    112,
    8.08,
    6.63,
    282.59,
    1022,
    0,
    279.48,
    280.51,
    100,
    1712077200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.54, visibility = 10000,
        wind_deg = 112, wind_gust = 8.08,
        wind_speed = 6.63, temp = 282.59,
        pressure = 1022, pop = 0,
        feels_like = 279.48, dew_point = 280.51,
        clouds = 100, dt = 1712077200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712077200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712077200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.54,
    10000,
    112,
    8.08,
    6.63,
    282.59,
    1022,
    0,
    279.48,
    280.51,
    100,
    1712077200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.54, visibility = 10000,
        wind_deg = 112, wind_gust = 8.08,
        wind_speed = 6.63, temp = 282.59,
        pressure = 1022, pop = 0,
        feels_like = 279.48, dew_point = 280.51,
        clouds = 100, dt = 1712077200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712077200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712080800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.47,
    10000,
    116,
    8.4,
    6.74,
    283.02,
    1021,
    0,
    280,
    280.61,
    100,
    1712080800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.47, visibility = 10000,
        wind_deg = 116, wind_gust = 8.4,
        wind_speed = 6.74, temp = 283.02,
        pressure = 1021, pop = 0,
        feels_like = 280, dew_point = 280.61,
        clouds = 100, dt = 1712080800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712080800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712080800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.47,
    10000,
    116,
    8.4,
    6.74,
    283.02,
    1021,
    0,
    280,
    280.61,
    100,
    1712080800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.47, visibility = 10000,
        wind_deg = 116, wind_gust = 8.4,
        wind_speed = 6.74, temp = 283.02,
        pressure = 1021, pop = 0,
        feels_like = 280, dew_point = 280.61,
        clouds = 100, dt = 1712080800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712080800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712084400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.28,
    10000,
    119,
    7.82,
    6.39,
    283.34,
    1021,
    0,
    282.58,
    280.62,
    100,
    1712084400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.28, visibility = 10000,
        wind_deg = 119, wind_gust = 7.82,
        wind_speed = 6.39, temp = 283.34,
        pressure = 1021, pop = 0,
        feels_like = 282.58, dew_point = 280.62,
        clouds = 100, dt = 1712084400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712084400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712084400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.28,
    10000,
    119,
    7.82,
    6.39,
    283.34,
    1021,
    0,
    282.58,
    280.62,
    100,
    1712084400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.28, visibility = 10000,
        wind_deg = 119, wind_gust = 7.82,
        wind_speed = 6.39, temp = 283.34,
        pressure = 1021, pop = 0,
        feels_like = 282.58, dew_point = 280.62,
        clouds = 100, dt = 1712084400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712084400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712088000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.77,
    10000,
    122,
    7.65,
    6.32,
    283.57,
    1021,
    0,
    282.76,
    280.46,
    100,
    1712088000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.77, visibility = 10000,
        wind_deg = 122, wind_gust = 7.65,
        wind_speed = 6.32, temp = 283.57,
        pressure = 1021, pop = 0,
        feels_like = 282.76, dew_point = 280.46,
        clouds = 100, dt = 1712088000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712088000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712088000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.77,
    10000,
    122,
    7.65,
    6.32,
    283.57,
    1021,
    0,
    282.76,
    280.46,
    100,
    1712088000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.77, visibility = 10000,
        wind_deg = 122, wind_gust = 7.65,
        wind_speed = 6.32, temp = 283.57,
        pressure = 1021, pop = 0,
        feels_like = 282.76, dew_point = 280.46,
        clouds = 100, dt = 1712088000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712088000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712091600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.3,
    10000,
    124,
    7.84,
    6.3,
    283.78,
    1020,
    0,
    282.94,
    280.19,
    100,
    1712091600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.3, visibility = 10000,
        wind_deg = 124, wind_gust = 7.84,
        wind_speed = 6.3, temp = 283.78,
        pressure = 1020, pop = 0,
        feels_like = 282.94, dew_point = 280.19,
        clouds = 100, dt = 1712091600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712091600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712091600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.3,
    10000,
    124,
    7.84,
    6.3,
    283.78,
    1020,
    0,
    282.94,
    280.19,
    100,
    1712091600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.3, visibility = 10000,
        wind_deg = 124, wind_gust = 7.84,
        wind_speed = 6.3, temp = 283.78,
        pressure = 1020, pop = 0,
        feels_like = 282.94, dew_point = 280.19,
        clouds = 100, dt = 1712091600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712091600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712095200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.24,
    10000,
    120,
    8.12,
    5.78,
    284.38,
    1019,
    0,
    283.54,
    280.29,
    100,
    1712095200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.24, visibility = 10000,
        wind_deg = 120, wind_gust = 8.12,
        wind_speed = 5.78, temp = 284.38,
        pressure = 1019, pop = 0,
        feels_like = 283.54, dew_point = 280.29,
        clouds = 100, dt = 1712095200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712095200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712095200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.24,
    10000,
    120,
    8.12,
    5.78,
    284.38,
    1019,
    0,
    283.54,
    280.29,
    100,
    1712095200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.24, visibility = 10000,
        wind_deg = 120, wind_gust = 8.12,
        wind_speed = 5.78, temp = 284.38,
        pressure = 1019, pop = 0,
        feels_like = 283.54, dew_point = 280.29,
        clouds = 100, dt = 1712095200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712095200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712098800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.36,
    10000,
    127,
    7.6,
    5.2,
    284.83,
    1019,
    0.01,
    283.96,
    280.32,
    100,
    1712098800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.36, visibility = 10000,
        wind_deg = 127, wind_gust = 7.6,
        wind_speed = 5.2, temp = 284.83,
        pressure = 1019, pop = 0.01,
        feels_like = 283.96, dew_point = 280.32,
        clouds = 100, dt = 1712098800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712098800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-31 17:35:06|   0.6|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1712098800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.36,
    10000,
    127,
    7.6,
    5.2,
    284.83,
    1019,
    0.01,
    283.96,
    280.32,
    100,
    1712098800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.36, visibility = 10000,
        wind_deg = 127, wind_gust = 7.6,
        wind_speed = 5.2, temp = 284.83,
        pressure = 1019, pop = 0.01,
        feels_like = 283.96, dew_point = 280.32,
        clouds = 100, dt = 1712098800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1712098800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Optional `process_group' method not present; not called
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `master' . Read operation complete
2024-03-31 17:35:06|   0.6|  0.0|INFORM|... Last line repeated 2 times ...
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Optional `process_group' method not present; not called
2024-03-31 17:35:06|   0.6|  0.0|STATS |Destination Feature Type Routing Correlator (RoutingFactory): Tested 0 input feature(s), wrote 0 output feature(s): 0 matched merge filters, 0 were routed to output, 0 could not be routed.
2024-03-31 17:35:06|   0.6|  0.0|STATS |Final Output Nuker (TeeFactory): Cloned 0 input feature(s) into 0 output feature(s)
2024-03-31 17:35:06|   0.6|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-31 17:35:06|   0.6|  0.0|STATS |                            Features Read Summary
2024-03-31 17:35:06|   0.6|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-31 17:35:06|   0.6|  0.0|STATS |==============================================================================
2024-03-31 17:35:06|   0.6|  0.0|STATS |Total Features Read                                                          0
2024-03-31 17:35:06|   0.6|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-31 17:35:06|   0.6|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-31 17:35:06|   0.6|  0.0|STATS |                           Features Written Summary
2024-03-31 17:35:06|   0.6|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-31 17:35:06|   0.6|  0.0|STATS |==============================================================================
2024-03-31 17:35:06|   0.6|  0.0|STATS |Total Features Written                                                       0
2024-03-31 17:35:06|   0.6|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-31 17:35:06|   0.6|  0.0|WARN  |-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
2024-03-31 17:35:06|   0.6|  0.0|WARN  |-~                                                                             ~-
2024-03-31 17:35:06|   0.6|  0.0|WARN  |-~    Feature caches have been recorded at every stage of the translation.     ~-
2024-03-31 17:35:06|   0.6|  0.0|WARN  |-~                      To inspect the recorded features,                      ~-
2024-03-31 17:35:06|   0.6|  0.0|WARN  |-~              click the feature cache icons next to the ports.               ~-
2024-03-31 17:35:06|   0.6|  0.0|WARN  |-~                                                                             ~-
2024-03-31 17:35:06|   0.6|  0.0|WARN  |-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
2024-03-31 17:35:06|   0.6|  0.0|INFORM|Translation was SUCCESSFUL with 57 warning(s) (0 feature(s) output)
2024-03-31 17:35:06|   0.6|  0.0|INFORM|FME Session Duration: 3.2 seconds. (CPU: 0.2s user, 0.4s system)
2024-03-31 17:35:06|   0.6|  0.0|INFORM|END - ProcessID: 10740, peak process memory usage: 113224 kB, current process memory usage: 108648 kB
