2024-03-20 15:07:58|   0.0|  0.0|INFORM|Current FME version: FME 2022.2.0.0 (20221103 - Build 22765 - WIN64)
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME_HOME is 'C:\Program Files\FME\'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME for June (node locked-crc)
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Serial Number: 0
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Temporary License: 104 days left.
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Machine host name is: Strombird
2024-03-20 15:07:58|   0.0|  0.0|INFORM|OS Locale Name     : en_CA
2024-03-20 15:07:58|   0.0|  0.0|INFORM|OS Locale Encoding : windows-1252
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Process Encoding   : UTF-8
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME API version: '4.0 20220615'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: FME_BASE is 'no'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: FME_MF_DIR is 'C:\Users\aayus\OneDrive\Desktop\TL16\data-consolidation/'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: FME_MF_NAME is 'weather.fmw'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: FME_PRODUCT_NAME is 'FME(R) 2022.2.0.0'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Operating System: Microsoft Windows 11 64-bit  (Build 22631)
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Platform: WIN64
2024-03-20 15:07:58|   0.0|  0.0|INFORM|System Status: 734.51 GB of disk space available in the FME temporary folder (C:\Users\aayus\AppData\Local\Temp\wbrun_1710972109733_23312\fmetmp_0)
2024-03-20 15:07:58|   0.0|  0.0|INFORM|System Status: 15.74 GB of physical memory available
2024-03-20 15:07:58|   0.0|  0.0|INFORM|System Status: 62.98 GB of virtual memory available
2024-03-20 15:07:58|   0.0|  0.0|INFORM|START - ProcessID: 10844, peak process memory usage: 68164 kB, current process memory usage: 68164 kB
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Command line arguments are `C:\Program Files\FME\fme.exe' `C:/Users/aayus/OneDrive/Desktop/TL16/data-consolidation\wb-xlate-1710972477460_23312' `LOG_STANDARDOUT' `YES' `LOG_TIMINGS' `YES' `LogCountServerName' `9925' `LOG_STANDARDOUT' `No' `WORKBENCH_LOG_SERVER' `9815'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Connection Storage: 'C:\Users\aayus\AppData\Roaming\Safe Software\FME\'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Shared folders for formats are : C:\Program Files\FME\datasources;C:\Users\aayus\OneDrive\Documents\FME\Formats
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Shared folders for transformers are : C:\Users\aayus\AppData\Roaming\Safe Software\FME\Packages\22765-win64\transformers;C:\Program Files\FME\transformers
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Shared folders for coordinate systems are : C:\Users\aayus\OneDrive\Documents\FME\CoordinateSystems
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Shared folders for coordinate system exceptions are : C:\Users\aayus\OneDrive\Documents\FME\CoordinateSystemExceptions
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Shared folders for coordinate system grid overrides are : C:\Users\aayus\OneDrive\Documents\FME\CoordinateSystemGridOverrides
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Shared folders for CS-MAP transformation exceptions are : C:\Users\aayus\OneDrive\Documents\FME\CsmapTransformationExceptions
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Shared folders for transformer categories are : C:\Users\aayus\OneDrive\Documents\FME\TransformerCategories
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Reader Keyword is `MULTI_READER'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Writer Keyword is `NULL_DEST'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Writer Group Definition Keyword is `NULL_DEST_DEF'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Reader type is `MULTI_READER'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Writer type is `NULL'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: No destination coordinate system set
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Current working folder is `C:\Users\aayus\OneDrive\Desktop\TL16\data-consolidation'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Temporary folder is `C:\Users\aayus\AppData\Local\Temp\wbrun_1710972109733_23312\fmetmp_0', set from environment variable `FME_TEMP'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Cache folder is 'C:\Users\aayus\AppData\Local\Temp'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: FME_HOME is `C:\Program Files\FME\'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Start freeing memory when the process exceeds 47.23 GB
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME Configuration: Stop freeing memory when the process is below 35.43 GB
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Creating writer for format: NULL (Nothing)
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for writer named `NULL'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Loaded module 'NULL' from file 'C:\Program Files\FME\plugins/NULL.dll'
2024-03-20 15:07:58|   0.0|  0.0|INFORM|FME API version of module 'NULL' matches current internal version (4.0 20220615)
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Creating reader for format: 
2024-03-20 15:07:58|   0.0|  0.0|INFORM|MULTI_READER(MULTI_READER): Will fail with first member reader failure
2024-03-20 15:07:58|   0.0|  0.0|INFORM|Using Multi Reader with keyword `MULTI_READER' to read multiple datasets
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Loaded module 'Geometry_func' from file 'C:\Program Files\FME\plugins/Geometry_func.dll'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|FME API version of module 'Geometry_func' matches current internal version (4.0 20220615)
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Loaded module 'LogCount_func' from file 'C:\Program Files\FME\plugins/LogCount_func.dll'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|FME API version of module 'LogCount_func' matches current internal version (4.0 20220615)
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Loaded module 'QueryFactory' from file 'C:\Program Files\FME\plugins/QueryFactory.dll'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|FME API version of module 'QueryFactory' matches current internal version (4.0 20220615)
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Loaded module 'HTTPFactory' from file 'C:\Program Files\FME\plugins/HTTPFactory.dll'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|FME API version of module 'HTTPFactory' matches current internal version (4.0 20220615)
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Loaded module 'PythonFactory' from file 'C:\Program Files\FME\plugins/PythonFactory.dll'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|FME API version of module 'PythonFactory' matches current internal version (4.0 20220615)
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Using Python interpreter from `C:\Program Files\FME\fmepython310\python310.dll' with PYTHONHOME `C:\Program Files\FME\fmepython310'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Python version 3.10 loaded successfully
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Adding folder `C:\Users\aayus\OneDrive\Desktop\TL16\data-consolidation\' to the python path
2024-03-20 15:07:59|   0.0|  0.0|INFORM|... Last line repeated 2 times ...
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Emptying factory pipeline
2024-03-20 15:07:59|   0.0|  0.0|INFORM|FME Configuration: Using connection values from 'testdb' for R_1
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Loaded module 'MSSQL_ADO' from file 'C:\Program Files\FME\plugins/FME_ADO.dll'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|FME API version of module 'FME_ADO' matches current internal version (4.0 20220615)
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Performing query against MSSQL_ADO dataset `testdb'
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `master' for read operation
2024-03-20 15:07:59|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Trying to connect using Microsoft OLE DB Driver for SQL Server...
2024-03-20 15:08:00|   0.0|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-03-20 15:08:00|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-20 15:08:00|   0.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'forecasted')
BEGIN
    CREATE TABLE forecasted (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      pop INT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'forecasted')
BEGIN
    CREATE TABLE forecasted (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      pop INT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.0|  0.0|INFORM|FME Configuration: Using connection values from 'testdb' for R_2
2024-03-20 15:08:00|   0.0|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-03-20 15:08:00|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-03-20 15:08:00|   0.0|  0.0|INFORM|Performing query against MSSQL_ADO dataset `testdb'
2024-03-20 15:08:00|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `master' for read operation
2024-03-20 15:08:00|   0.0|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-03-20 15:08:00|   0.0|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-20 15:08:00|   0.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'actual_weather')
BEGIN
    CREATE TABLE actual_weather (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'actual_weather')
BEGIN
    CREATE TABLE actual_weather (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.1|STATS |Creator_XML_Creator (CreationFactory): Created 1 features
2024-03-20 15:08:00|   0.1|  0.0|STATS |Creator_Cloner (TeeFactory): Cloned 1 input feature(s) into 1 output feature(s)
2024-03-20 15:08:00|   0.1|  0.0|STATS |Creator CREATED Splitter (TeeFactory): Cloned 1 input feature(s) into 2 output feature(s)
2024-03-20 15:08:00|   0.1|  0.0|STATS |Creator_CREATED_0_GJAgmIF9G6c= Brancher -1 10 (BranchingFactory): Branched 1 input feature -- 1 feature routed to the target factory, and 0 features routed to the fallback factory.
2024-03-20 15:08:00|   0.1|  0.0|STATS |Creator_CREATED_1_Exx7idfjvCA= Brancher -1 15 (BranchingFactory): Branched 1 input feature -- 1 feature routed to the target factory, and 0 features routed to the fallback factory.
2024-03-20 15:08:00|   0.1|  0.0|STATS |_CREATOR_BRANCH_TARGET (TeeFactory): Cloned 2 input feature(s) into 2 output feature(s)
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `master' . Read operation complete
2024-03-20 15:08:00|   0.1|  0.0|INFORM|CallWeatherForecast (HTTPFactory): [1]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 13823 bytes
2024-03-20 15:08:00|   0.1|  0.0|INFORM|CallWeatherForecast (HTTPFactory): [1]: HTTP Download: received 13823 bytes
2024-03-20 15:08:00|   0.1|  0.0|INFORM|CallWeatherForecast (HTTPFactory): [1]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 13823 bytes, DNS lookup time: 13 ms, total transfer time: 424 ms
2024-03-20 15:08:00|   0.1|  0.0|INFORM|FME Configuration: Using connection values from 'testdb' for R_3
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Performing query against MSSQL_ADO dataset `testdb'
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `master' for read operation
2024-03-20 15:08:00|   0.1|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710972000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.14,
    10000,
    128,
    6.34,
    4.76,
    283.42,
    1015,
    0,
    282.46,
    279.19,
    100,
    1710972000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.14, visibility = 10000,
        wind_deg = 128, wind_gust = 6.34,
        wind_speed = 4.76, temp = 283.42,
        pressure = 1015, pop = 0,
        feels_like = 282.46, dew_point = 279.19,
        clouds = 100, dt = 1710972000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710972000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710972000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.14,
    10000,
    128,
    6.34,
    4.76,
    283.42,
    1015,
    0,
    282.46,
    279.19,
    100,
    1710972000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.14, visibility = 10000,
        wind_deg = 128, wind_gust = 6.34,
        wind_speed = 4.76, temp = 283.42,
        pressure = 1015, pop = 0,
        feels_like = 282.46, dew_point = 279.19,
        clouds = 100, dt = 1710972000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710972000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710975600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.86,
    10000,
    127,
    6.04,
    4.42,
    283.23,
    1015,
    0,
    282.23,
    278.81,
    100,
    1710975600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.86, visibility = 10000,
        wind_deg = 127, wind_gust = 6.04,
        wind_speed = 4.42, temp = 283.23,
        pressure = 1015, pop = 0,
        feels_like = 282.23, dew_point = 278.81,
        clouds = 100, dt = 1710975600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710975600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710975600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.86,
    10000,
    127,
    6.04,
    4.42,
    283.23,
    1015,
    0,
    282.23,
    278.81,
    100,
    1710975600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.86, visibility = 10000,
        wind_deg = 127, wind_gust = 6.04,
        wind_speed = 4.42, temp = 283.23,
        pressure = 1015, pop = 0,
        feels_like = 282.23, dew_point = 278.81,
        clouds = 100, dt = 1710975600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710975600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Logging limit reached for the preceding message. Further instances of this message will not be logged
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710979200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.52,
    10000,
    130,
    5.84,
    4.2,
    283.1,
    1015,
    0,
    281,
    278.49,
    100,
    1710979200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.52, visibility = 10000,
        wind_deg = 130, wind_gust = 5.84,
        wind_speed = 4.2, temp = 283.1,
        pressure = 1015, pop = 0,
        feels_like = 281, dew_point = 278.49,
        clouds = 100, dt = 1710979200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710979200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710979200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.52,
    10000,
    130,
    5.84,
    4.2,
    283.1,
    1015,
    0,
    281,
    278.49,
    100,
    1710979200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.52, visibility = 10000,
        wind_deg = 130, wind_gust = 5.84,
        wind_speed = 4.2, temp = 283.1,
        pressure = 1015, pop = 0,
        feels_like = 281, dew_point = 278.49,
        clouds = 100, dt = 1710979200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710979200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710982800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.18,
    10000,
    131,
    5.18,
    3.84,
    282.86,
    1014,
    0,
    280.87,
    278.26,
    100,
    1710982800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.18, visibility = 10000,
        wind_deg = 131, wind_gust = 5.18,
        wind_speed = 3.84, temp = 282.86,
        pressure = 1014, pop = 0,
        feels_like = 280.87, dew_point = 278.26,
        clouds = 100, dt = 1710982800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710982800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710982800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.18,
    10000,
    131,
    5.18,
    3.84,
    282.86,
    1014,
    0,
    280.87,
    278.26,
    100,
    1710982800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.18, visibility = 10000,
        wind_deg = 131, wind_gust = 5.18,
        wind_speed = 3.84, temp = 282.86,
        pressure = 1014, pop = 0,
        feels_like = 280.87, dew_point = 278.26,
        clouds = 100, dt = 1710982800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710982800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710986400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    131,
    4.67,
    3.54,
    282.45,
    1014,
    0,
    280.52,
    278.25,
    100,
    1710986400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 131, wind_gust = 4.67,
        wind_speed = 3.54, temp = 282.45,
        pressure = 1014, pop = 0,
        feels_like = 280.52, dew_point = 278.25,
        clouds = 100, dt = 1710986400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710986400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710986400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    131,
    4.67,
    3.54,
    282.45,
    1014,
    0,
    280.52,
    278.25,
    100,
    1710986400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 131, wind_gust = 4.67,
        wind_speed = 3.54, temp = 282.45,
        pressure = 1014, pop = 0,
        feels_like = 280.52, dew_point = 278.25,
        clouds = 100, dt = 1710986400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710986400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710990000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    118,
    4.38,
    3.5,
    282.03,
    1014,
    0,
    280.03,
    278.09,
    100,
    1710990000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 118, wind_gust = 4.38,
        wind_speed = 3.5, temp = 282.03,
        pressure = 1014, pop = 0,
        feels_like = 280.03, dew_point = 278.09,
        clouds = 100, dt = 1710990000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710990000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710990000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    118,
    4.38,
    3.5,
    282.03,
    1014,
    0,
    280.03,
    278.09,
    100,
    1710990000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 118, wind_gust = 4.38,
        wind_speed = 3.5, temp = 282.03,
        pressure = 1014, pop = 0,
        feels_like = 280.03, dew_point = 278.09,
        clouds = 100, dt = 1710990000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710990000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710993600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    107,
    4.08,
    3.21,
    282.06,
    1015,
    0,
    280.23,
    277.98,
    100,
    1710993600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 107, wind_gust = 4.08,
        wind_speed = 3.21, temp = 282.06,
        pressure = 1015, pop = 0,
        feels_like = 280.23, dew_point = 277.98,
        clouds = 100, dt = 1710993600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710993600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710993600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    107,
    4.08,
    3.21,
    282.06,
    1015,
    0,
    280.23,
    277.98,
    100,
    1710993600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 107, wind_gust = 4.08,
        wind_speed = 3.21, temp = 282.06,
        pressure = 1015, pop = 0,
        feels_like = 280.23, dew_point = 277.98,
        clouds = 100, dt = 1710993600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710993600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710997200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    102,
    4.07,
    3.05,
    282.12,
    1015,
    0,
    280.39,
    277.94,
    100,
    1710997200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 102, wind_gust = 4.07,
        wind_speed = 3.05, temp = 282.12,
        pressure = 1015, pop = 0,
        feels_like = 280.39, dew_point = 277.94,
        clouds = 100, dt = 1710997200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710997200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1710997200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    102,
    4.07,
    3.05,
    282.12,
    1015,
    0,
    280.39,
    277.94,
    100,
    1710997200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 102, wind_gust = 4.07,
        wind_speed = 3.05, temp = 282.12,
        pressure = 1015, pop = 0,
        feels_like = 280.39, dew_point = 277.94,
        clouds = 100, dt = 1710997200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710997200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711000800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    94,
    4.17,
    3.04,
    282.21,
    1015,
    0,
    280.51,
    277.91,
    100,
    1711000800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 94, wind_gust = 4.17,
        wind_speed = 3.04, temp = 282.21,
        pressure = 1015, pop = 0,
        feels_like = 280.51, dew_point = 277.91,
        clouds = 100, dt = 1711000800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711000800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711000800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    94,
    4.17,
    3.04,
    282.21,
    1015,
    0,
    280.51,
    277.91,
    100,
    1711000800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 94, wind_gust = 4.17,
        wind_speed = 3.04, temp = 282.21,
        pressure = 1015, pop = 0,
        feels_like = 280.51, dew_point = 277.91,
        clouds = 100, dt = 1711000800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711000800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711004400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    106,
    3.33,
    2.54,
    282.09,
    1015,
    0.16,
    280.69,
    277.97,
    100,
    1711004400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 106, wind_gust = 3.33,
        wind_speed = 2.54, temp = 282.09,
        pressure = 1015, pop = 0.16,
        feels_like = 280.69, dew_point = 277.97,
        clouds = 100, dt = 1711004400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711004400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711004400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    106,
    3.33,
    2.54,
    282.09,
    1015,
    0.16,
    280.69,
    277.97,
    100,
    1711004400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 106, wind_gust = 3.33,
        wind_speed = 2.54, temp = 282.09,
        pressure = 1015, pop = 0.16,
        feels_like = 280.69, dew_point = 277.97,
        clouds = 100, dt = 1711004400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711004400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711008000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    145,
    2.91,
    2.37,
    281.79,
    1015,
    0.2,
    280.46,
    278.09,
    100,
    1711008000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 145, wind_gust = 2.91,
        wind_speed = 2.37, temp = 281.79,
        pressure = 1015, pop = 0.2,
        feels_like = 280.46, dew_point = 278.09,
        clouds = 100, dt = 1711008000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711008000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711008000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    145,
    2.91,
    2.37,
    281.79,
    1015,
    0.2,
    280.46,
    278.09,
    100,
    1711008000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 145, wind_gust = 2.91,
        wind_speed = 2.37, temp = 281.79,
        pressure = 1015, pop = 0.2,
        feels_like = 280.46, dew_point = 278.09,
        clouds = 100, dt = 1711008000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711008000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711011600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    160,
    2.78,
    2.15,
    281.45,
    1015,
    0.24,
    280.23,
    278.57,
    100,
    1711011600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 160, wind_gust = 2.78,
        wind_speed = 2.15, temp = 281.45,
        pressure = 1015, pop = 0.24,
        feels_like = 280.23, dew_point = 278.57,
        clouds = 100, dt = 1711011600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711011600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711011600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    160,
    2.78,
    2.15,
    281.45,
    1015,
    0.24,
    280.23,
    278.57,
    100,
    1711011600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 160, wind_gust = 2.78,
        wind_speed = 2.15, temp = 281.45,
        pressure = 1015, pop = 0.24,
        feels_like = 280.23, dew_point = 278.57,
        clouds = 100, dt = 1711011600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711011600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711015200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    128,
    1.43,
    1.09,
    281.25,
    1016,
    0.24,
    281.25,
    278.77,
    100,
    1711015200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 128, wind_gust = 1.43,
        wind_speed = 1.09, temp = 281.25,
        pressure = 1016, pop = 0.24,
        feels_like = 281.25, dew_point = 278.77,
        clouds = 100, dt = 1711015200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711015200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711015200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    128,
    1.43,
    1.09,
    281.25,
    1016,
    0.24,
    281.25,
    278.77,
    100,
    1711015200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 128, wind_gust = 1.43,
        wind_speed = 1.09, temp = 281.25,
        pressure = 1016, pop = 0.24,
        feels_like = 281.25, dew_point = 278.77,
        clouds = 100, dt = 1711015200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711015200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711018800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    98,
    1.5,
    1.23,
    281.21,
    1016,
    0.24,
    281.21,
    278.87,
    100,
    1711018800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 98, wind_gust = 1.5,
        wind_speed = 1.23, temp = 281.21,
        pressure = 1016, pop = 0.24,
        feels_like = 281.21, dew_point = 278.87,
        clouds = 100, dt = 1711018800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711018800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711018800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    98,
    1.5,
    1.23,
    281.21,
    1016,
    0.24,
    281.21,
    278.87,
    100,
    1711018800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 98, wind_gust = 1.5,
        wind_speed = 1.23, temp = 281.21,
        pressure = 1016, pop = 0.24,
        feels_like = 281.21, dew_point = 278.87,
        clouds = 100, dt = 1711018800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711018800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711022400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    93,
    1.94,
    1.65,
    281.27,
    1016,
    0.2,
    280.49,
    278.86,
    100,
    1711022400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 93, wind_gust = 1.94,
        wind_speed = 1.65, temp = 281.27,
        pressure = 1016, pop = 0.2,
        feels_like = 280.49, dew_point = 278.86,
        clouds = 100, dt = 1711022400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711022400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711022400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    93,
    1.94,
    1.65,
    281.27,
    1016,
    0.2,
    280.49,
    278.86,
    100,
    1711022400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 93, wind_gust = 1.94,
        wind_speed = 1.65, temp = 281.27,
        pressure = 1016, pop = 0.2,
        feels_like = 280.49, dew_point = 278.86,
        clouds = 100, dt = 1711022400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711022400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711026000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    144,
    1.48,
    1.29,
    281.19,
    1016,
    0.08,
    281.19,
    278.96,
    95,
    1711026000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 144, wind_gust = 1.48,
        wind_speed = 1.29, temp = 281.19,
        pressure = 1016, pop = 0.08,
        feels_like = 281.19, dew_point = 278.96,
        clouds = 95, dt = 1711026000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711026000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711026000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    144,
    1.48,
    1.29,
    281.19,
    1016,
    0.08,
    281.19,
    278.96,
    95,
    1711026000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 144, wind_gust = 1.48,
        wind_speed = 1.29, temp = 281.19,
        pressure = 1016, pop = 0.08,
        feels_like = 281.19, dew_point = 278.96,
        clouds = 95, dt = 1711026000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711026000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711029600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    146,
    2.06,
    1.72,
    280.89,
    1017,
    0.08,
    279.98,
    278.94,
    98,
    1711029600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 146, wind_gust = 2.06,
        wind_speed = 1.72, temp = 280.89,
        pressure = 1017, pop = 0.08,
        feels_like = 279.98, dew_point = 278.94,
        clouds = 98, dt = 1711029600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711029600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711029600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    146,
    2.06,
    1.72,
    280.89,
    1017,
    0.08,
    279.98,
    278.94,
    98,
    1711029600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 146, wind_gust = 2.06,
        wind_speed = 1.72, temp = 280.89,
        pressure = 1017, pop = 0.08,
        feels_like = 279.98, dew_point = 278.94,
        clouds = 98, dt = 1711029600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711029600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711033200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.07,
    10000,
    141,
    2.45,
    2.26,
    280.93,
    1018,
    0.08,
    279.53,
    278.84,
    98,
    1711033200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.07, visibility = 10000,
        wind_deg = 141, wind_gust = 2.45,
        wind_speed = 2.26, temp = 280.93,
        pressure = 1018, pop = 0.08,
        feels_like = 279.53, dew_point = 278.84,
        clouds = 98, dt = 1711033200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711033200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711033200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.07,
    10000,
    141,
    2.45,
    2.26,
    280.93,
    1018,
    0.08,
    279.53,
    278.84,
    98,
    1711033200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.07, visibility = 10000,
        wind_deg = 141, wind_gust = 2.45,
        wind_speed = 2.26, temp = 280.93,
        pressure = 1018, pop = 0.08,
        feels_like = 279.53, dew_point = 278.84,
        clouds = 98, dt = 1711033200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711033200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711036800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.13,
    10000,
    141,
    2.48,
    2.17,
    280.98,
    1018,
    0.12,
    279.67,
    278.79,
    99,
    1711036800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.13, visibility = 10000,
        wind_deg = 141, wind_gust = 2.48,
        wind_speed = 2.17, temp = 280.98,
        pressure = 1018, pop = 0.12,
        feels_like = 279.67, dew_point = 278.79,
        clouds = 99, dt = 1711036800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711036800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711036800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.13,
    10000,
    141,
    2.48,
    2.17,
    280.98,
    1018,
    0.12,
    279.67,
    278.79,
    99,
    1711036800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.13, visibility = 10000,
        wind_deg = 141, wind_gust = 2.48,
        wind_speed = 2.17, temp = 280.98,
        pressure = 1018, pop = 0.12,
        feels_like = 279.67, dew_point = 278.79,
        clouds = 99, dt = 1711036800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711036800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711040400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.23,
    10000,
    153,
    2.3,
    2,
    281.28,
    1019,
    0.2,
    280.16,
    278.74,
    99,
    1711040400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.23, visibility = 10000,
        wind_deg = 153, wind_gust = 2.3,
        wind_speed = 2, temp = 281.28,
        pressure = 1019, pop = 0.2,
        feels_like = 280.16, dew_point = 278.74,
        clouds = 99, dt = 1711040400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711040400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711040400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.23,
    10000,
    153,
    2.3,
    2,
    281.28,
    1019,
    0.2,
    280.16,
    278.74,
    99,
    1711040400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.23, visibility = 10000,
        wind_deg = 153, wind_gust = 2.3,
        wind_speed = 2, temp = 281.28,
        pressure = 1019, pop = 0.2,
        feels_like = 280.16, dew_point = 278.74,
        clouds = 99, dt = 1711040400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711040400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711044000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.37,
    10000,
    167,
    2,
    1.72,
    281.59,
    1019,
    0.24,
    280.79,
    278.49,
    99,
    1711044000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.37, visibility = 10000,
        wind_deg = 167, wind_gust = 2,
        wind_speed = 1.72, temp = 281.59,
        pressure = 1019, pop = 0.24,
        feels_like = 280.79, dew_point = 278.49,
        clouds = 99, dt = 1711044000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711044000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711044000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.37,
    10000,
    167,
    2,
    1.72,
    281.59,
    1019,
    0.24,
    280.79,
    278.49,
    99,
    1711044000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.37, visibility = 10000,
        wind_deg = 167, wind_gust = 2,
        wind_speed = 1.72, temp = 281.59,
        pressure = 1019, pop = 0.24,
        feels_like = 280.79, dew_point = 278.49,
        clouds = 99, dt = 1711044000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711044000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711047600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.83,
    10000,
    169,
    1.99,
    1.57,
    281.57,
    1019,
    0.45,
    280.92,
    278.39,
    99,
    1711047600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.83, visibility = 10000,
        wind_deg = 169, wind_gust = 1.99,
        wind_speed = 1.57, temp = 281.57,
        pressure = 1019, pop = 0.45,
        feels_like = 280.92, dew_point = 278.39,
        clouds = 99, dt = 1711047600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711047600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711047600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.83,
    10000,
    169,
    1.99,
    1.57,
    281.57,
    1019,
    0.45,
    280.92,
    278.39,
    99,
    1711047600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.83, visibility = 10000,
        wind_deg = 169, wind_gust = 1.99,
        wind_speed = 1.57, temp = 281.57,
        pressure = 1019, pop = 0.45,
        feels_like = 280.92, dew_point = 278.39,
        clouds = 99, dt = 1711047600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711047600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711051200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.5,
    10000,
    163,
    2.27,
    1.61,
    281.61,
    1019,
    0.45,
    280.92,
    278.55,
    99,
    1711051200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.5, visibility = 10000,
        wind_deg = 163, wind_gust = 2.27,
        wind_speed = 1.61, temp = 281.61,
        pressure = 1019, pop = 0.45,
        feels_like = 280.92, dew_point = 278.55,
        clouds = 99, dt = 1711051200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711051200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711051200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.5,
    10000,
    163,
    2.27,
    1.61,
    281.61,
    1019,
    0.45,
    280.92,
    278.55,
    99,
    1711051200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.5, visibility = 10000,
        wind_deg = 163, wind_gust = 2.27,
        wind_speed = 1.61, temp = 281.61,
        pressure = 1019, pop = 0.45,
        feels_like = 280.92, dew_point = 278.55,
        clouds = 99, dt = 1711051200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711051200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711054800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.14,
    10000,
    181,
    2.67,
    2.07,
    281.95,
    1020,
    0.29,
    280.88,
    278.57,
    97,
    1711054800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.14, visibility = 10000,
        wind_deg = 181, wind_gust = 2.67,
        wind_speed = 2.07, temp = 281.95,
        pressure = 1020, pop = 0.29,
        feels_like = 280.88, dew_point = 278.57,
        clouds = 97, dt = 1711054800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711054800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:00|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711054800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.14,
    10000,
    181,
    2.67,
    2.07,
    281.95,
    1020,
    0.29,
    280.88,
    278.57,
    97,
    1711054800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.14, visibility = 10000,
        wind_deg = 181, wind_gust = 2.67,
        wind_speed = 2.07, temp = 281.95,
        pressure = 1020, pop = 0.29,
        feels_like = 280.88, dew_point = 278.57,
        clouds = 97, dt = 1711054800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711054800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:00|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711058400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.19,
    10000,
    162,
    2.1,
    1.45,
    282.16,
    1019,
    0.37,
    281.72,
    278.45,
    96,
    1711058400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.19, visibility = 10000,
        wind_deg = 162, wind_gust = 2.1,
        wind_speed = 1.45, temp = 282.16,
        pressure = 1019, pop = 0.37,
        feels_like = 281.72, dew_point = 278.45,
        clouds = 96, dt = 1711058400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711058400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711058400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.19,
    10000,
    162,
    2.1,
    1.45,
    282.16,
    1019,
    0.37,
    281.72,
    278.45,
    96,
    1711058400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.19, visibility = 10000,
        wind_deg = 162, wind_gust = 2.1,
        wind_speed = 1.45, temp = 282.16,
        pressure = 1019, pop = 0.37,
        feels_like = 281.72, dew_point = 278.45,
        clouds = 96, dt = 1711058400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711058400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711062000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.05,
    10000,
    195,
    2.09,
    1.94,
    282.41,
    1019,
    0.33,
    281.53,
    278.28,
    96,
    1711062000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.05, visibility = 10000,
        wind_deg = 195, wind_gust = 2.09,
        wind_speed = 1.94, temp = 282.41,
        pressure = 1019, pop = 0.33,
        feels_like = 281.53, dew_point = 278.28,
        clouds = 96, dt = 1711062000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711062000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711062000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.05,
    10000,
    195,
    2.09,
    1.94,
    282.41,
    1019,
    0.33,
    281.53,
    278.28,
    96,
    1711062000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.05, visibility = 10000,
        wind_deg = 195, wind_gust = 2.09,
        wind_speed = 1.94, temp = 282.41,
        pressure = 1019, pop = 0.33,
        feels_like = 281.53, dew_point = 278.28,
        clouds = 96, dt = 1711062000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711062000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711065600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.75,
    10000,
    214,
    2.29,
    2.23,
    282.01,
    1019,
    0.33,
    280.83,
    278.19,
    95,
    1711065600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.75, visibility = 10000,
        wind_deg = 214, wind_gust = 2.29,
        wind_speed = 2.23, temp = 282.01,
        pressure = 1019, pop = 0.33,
        feels_like = 280.83, dew_point = 278.19,
        clouds = 95, dt = 1711065600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711065600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711065600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.75,
    10000,
    214,
    2.29,
    2.23,
    282.01,
    1019,
    0.33,
    280.83,
    278.19,
    95,
    1711065600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.75, visibility = 10000,
        wind_deg = 214, wind_gust = 2.29,
        wind_speed = 2.23, temp = 282.01,
        pressure = 1019, pop = 0.33,
        feels_like = 280.83, dew_point = 278.19,
        clouds = 95, dt = 1711065600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711065600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711069200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.26,
    10000,
    219,
    1.5,
    1.23,
    281.69,
    1019,
    0.2,
    281.69,
    278.04,
    100,
    1711069200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.26, visibility = 10000,
        wind_deg = 219, wind_gust = 1.5,
        wind_speed = 1.23, temp = 281.69,
        pressure = 1019, pop = 0.2,
        feels_like = 281.69, dew_point = 278.04,
        clouds = 100, dt = 1711069200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711069200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711069200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.26,
    10000,
    219,
    1.5,
    1.23,
    281.69,
    1019,
    0.2,
    281.69,
    278.04,
    100,
    1711069200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.26, visibility = 10000,
        wind_deg = 219, wind_gust = 1.5,
        wind_speed = 1.23, temp = 281.69,
        pressure = 1019, pop = 0.2,
        feels_like = 281.69, dew_point = 278.04,
        clouds = 100, dt = 1711069200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711069200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711072800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    4,
    0.7,
    0.65,
    281.61,
    1018,
    0.16,
    281.61,
    277.86,
    100,
    1711072800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 4, wind_gust = 0.7,
        wind_speed = 0.65, temp = 281.61,
        pressure = 1018, pop = 0.16,
        feels_like = 281.61, dew_point = 277.86,
        clouds = 100, dt = 1711072800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711072800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711072800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    4,
    0.7,
    0.65,
    281.61,
    1018,
    0.16,
    281.61,
    277.86,
    100,
    1711072800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 4, wind_gust = 0.7,
        wind_speed = 0.65, temp = 281.61,
        pressure = 1018, pop = 0.16,
        feels_like = 281.61, dew_point = 277.86,
        clouds = 100, dt = 1711072800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711072800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711076400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    49,
    1.21,
    1.21,
    281.77,
    1018,
    0.08,
    281.77,
    278.07,
    100,
    1711076400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 49, wind_gust = 1.21,
        wind_speed = 1.21, temp = 281.77,
        pressure = 1018, pop = 0.08,
        feels_like = 281.77, dew_point = 278.07,
        clouds = 100, dt = 1711076400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711076400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711076400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    49,
    1.21,
    1.21,
    281.77,
    1018,
    0.08,
    281.77,
    278.07,
    100,
    1711076400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 49, wind_gust = 1.21,
        wind_speed = 1.21, temp = 281.77,
        pressure = 1018, pop = 0.08,
        feels_like = 281.77, dew_point = 278.07,
        clouds = 100, dt = 1711076400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711076400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711080000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    79,
    0.92,
    0.9,
    282,
    1019,
    0,
    282,
    278.22,
    100,
    1711080000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 79, wind_gust = 0.92,
        wind_speed = 0.9, temp = 282,
        pressure = 1019, pop = 0,
        feels_like = 282, dew_point = 278.22,
        clouds = 100, dt = 1711080000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711080000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711080000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    79,
    0.92,
    0.9,
    282,
    1019,
    0,
    282,
    278.22,
    100,
    1711080000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 79, wind_gust = 0.92,
        wind_speed = 0.9, temp = 282,
        pressure = 1019, pop = 0,
        feels_like = 282, dew_point = 278.22,
        clouds = 100, dt = 1711080000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711080000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711083600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    69,
    1.97,
    1.92,
    282.12,
    1018,
    0,
    281.21,
    277.97,
    100,
    1711083600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 69, wind_gust = 1.97,
        wind_speed = 1.92, temp = 282.12,
        pressure = 1018, pop = 0,
        feels_like = 281.21, dew_point = 277.97,
        clouds = 100, dt = 1711083600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711083600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711083600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    69,
    1.97,
    1.92,
    282.12,
    1018,
    0,
    281.21,
    277.97,
    100,
    1711083600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 69, wind_gust = 1.97,
        wind_speed = 1.92, temp = 282.12,
        pressure = 1018, pop = 0,
        feels_like = 281.21, dew_point = 277.97,
        clouds = 100, dt = 1711083600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711083600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711087200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    71,
    2.96,
    2.71,
    282.09,
    1018,
    0,
    280.57,
    277.86,
    100,
    1711087200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 71, wind_gust = 2.96,
        wind_speed = 2.71, temp = 282.09,
        pressure = 1018, pop = 0,
        feels_like = 280.57, dew_point = 277.86,
        clouds = 100, dt = 1711087200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711087200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711087200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    71,
    2.96,
    2.71,
    282.09,
    1018,
    0,
    280.57,
    277.86,
    100,
    1711087200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 71, wind_gust = 2.96,
        wind_speed = 2.71, temp = 282.09,
        pressure = 1018, pop = 0,
        feels_like = 280.57, dew_point = 277.86,
        clouds = 100, dt = 1711087200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711087200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711090800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    68,
    2.38,
    2.34,
    281.86,
    1018,
    0,
    280.56,
    277.91,
    100,
    1711090800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 68, wind_gust = 2.38,
        wind_speed = 2.34, temp = 281.86,
        pressure = 1018, pop = 0,
        feels_like = 280.56, dew_point = 277.91,
        clouds = 100, dt = 1711090800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711090800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711090800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    68,
    2.38,
    2.34,
    281.86,
    1018,
    0,
    280.56,
    277.91,
    100,
    1711090800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 68, wind_gust = 2.38,
        wind_speed = 2.34, temp = 281.86,
        pressure = 1018, pop = 0,
        feels_like = 280.56, dew_point = 277.91,
        clouds = 100, dt = 1711090800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711090800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711094400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    61,
    2.71,
    2.59,
    281.89,
    1017,
    0,
    280.42,
    277.81,
    100,
    1711094400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 61, wind_gust = 2.71,
        wind_speed = 2.59, temp = 281.89,
        pressure = 1017, pop = 0,
        feels_like = 280.42, dew_point = 277.81,
        clouds = 100, dt = 1711094400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711094400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711094400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    61,
    2.71,
    2.59,
    281.89,
    1017,
    0,
    280.42,
    277.81,
    100,
    1711094400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 61, wind_gust = 2.71,
        wind_speed = 2.59, temp = 281.89,
        pressure = 1017, pop = 0,
        feels_like = 280.42, dew_point = 277.81,
        clouds = 100, dt = 1711094400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711094400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711098000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    52,
    2.33,
    2.21,
    281.97,
    1017,
    0,
    280.79,
    277.74,
    100,
    1711098000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 52, wind_gust = 2.33,
        wind_speed = 2.21, temp = 281.97,
        pressure = 1017, pop = 0,
        feels_like = 280.79, dew_point = 277.74,
        clouds = 100, dt = 1711098000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711098000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711098000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    52,
    2.33,
    2.21,
    281.97,
    1017,
    0,
    280.79,
    277.74,
    100,
    1711098000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 52, wind_gust = 2.33,
        wind_speed = 2.21, temp = 281.97,
        pressure = 1017, pop = 0,
        feels_like = 280.79, dew_point = 277.74,
        clouds = 100, dt = 1711098000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711098000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711101600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    53,
    3.87,
    3.29,
    282.06,
    1016,
    0.04,
    280.18,
    277.49,
    100,
    1711101600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 53, wind_gust = 3.87,
        wind_speed = 3.29, temp = 282.06,
        pressure = 1016, pop = 0.04,
        feels_like = 280.18, dew_point = 277.49,
        clouds = 100, dt = 1711101600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711101600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711101600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    53,
    3.87,
    3.29,
    282.06,
    1016,
    0.04,
    280.18,
    277.49,
    100,
    1711101600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 53, wind_gust = 3.87,
        wind_speed = 3.29, temp = 282.06,
        pressure = 1016, pop = 0.04,
        feels_like = 280.18, dew_point = 277.49,
        clouds = 100, dt = 1711101600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711101600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711105200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    62,
    3.02,
    2.71,
    281.74,
    1015,
    0.12,
    280.16,
    277.26,
    100,
    1711105200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 62, wind_gust = 3.02,
        wind_speed = 2.71, temp = 281.74,
        pressure = 1015, pop = 0.12,
        feels_like = 280.16, dew_point = 277.26,
        clouds = 100, dt = 1711105200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711105200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711105200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    62,
    3.02,
    2.71,
    281.74,
    1015,
    0.12,
    280.16,
    277.26,
    100,
    1711105200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 62, wind_gust = 3.02,
        wind_speed = 2.71, temp = 281.74,
        pressure = 1015, pop = 0.12,
        feels_like = 280.16, dew_point = 277.26,
        clouds = 100, dt = 1711105200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711105200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711108800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    102,
    1.51,
    1.33,
    281.62,
    1015,
    0.2,
    281.62,
    277.61,
    100,
    1711108800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 102, wind_gust = 1.51,
        wind_speed = 1.33, temp = 281.62,
        pressure = 1015, pop = 0.2,
        feels_like = 281.62, dew_point = 277.61,
        clouds = 100, dt = 1711108800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711108800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711108800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    102,
    1.51,
    1.33,
    281.62,
    1015,
    0.2,
    281.62,
    277.61,
    100,
    1711108800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 102, wind_gust = 1.51,
        wind_speed = 1.33, temp = 281.62,
        pressure = 1015, pop = 0.2,
        feels_like = 281.62, dew_point = 277.61,
        clouds = 100, dt = 1711108800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711108800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711112400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    46,
    1.73,
    1.48,
    281.25,
    1015,
    0.48,
    280.65,
    277.99,
    100,
    1711112400,
    0,
    0.24,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 46, wind_gust = 1.73,
        wind_speed = 1.48, temp = 281.25,
        pressure = 1015, pop = 0.48,
        feels_like = 280.65, dew_point = 277.99,
        clouds = 100, dt = 1711112400, snow = 0,
        rain = 0.24, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1711112400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711112400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    46,
    1.73,
    1.48,
    281.25,
    1015,
    0.48,
    280.65,
    277.99,
    100,
    1711112400,
    0,
    0.24,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 46, wind_gust = 1.73,
        wind_speed = 1.48, temp = 281.25,
        pressure = 1015, pop = 0.48,
        feels_like = 280.65, dew_point = 277.99,
        clouds = 100, dt = 1711112400, snow = 0,
        rain = 0.24, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1711112400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711116000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    33,
    3.87,
    2.79,
    281.68,
    1014,
    0.56,
    280.03,
    277.88,
    100,
    1711116000,
    0,
    0.12,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 33, wind_gust = 3.87,
        wind_speed = 2.79, temp = 281.68,
        pressure = 1014, pop = 0.56,
        feels_like = 280.03, dew_point = 277.88,
        clouds = 100, dt = 1711116000, snow = 0,
        rain = 0.12, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1711116000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711116000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    33,
    3.87,
    2.79,
    281.68,
    1014,
    0.56,
    280.03,
    277.88,
    100,
    1711116000,
    0,
    0.12,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 33, wind_gust = 3.87,
        wind_speed = 2.79, temp = 281.68,
        pressure = 1014, pop = 0.56,
        feels_like = 280.03, dew_point = 277.88,
        clouds = 100, dt = 1711116000, snow = 0,
        rain = 0.12, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1711116000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711119600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.06,
    10000,
    50,
    2.96,
    2.15,
    281.67,
    1013,
    0.6,
    280.49,
    278.25,
    100,
    1711119600,
    0,
    0.13,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.06, visibility = 10000,
        wind_deg = 50, wind_gust = 2.96,
        wind_speed = 2.15, temp = 281.67,
        pressure = 1013, pop = 0.6,
        feels_like = 280.49, dew_point = 278.25,
        clouds = 100, dt = 1711119600, snow = 0,
        rain = 0.13, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1711119600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711119600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.06,
    10000,
    50,
    2.96,
    2.15,
    281.67,
    1013,
    0.6,
    280.49,
    278.25,
    100,
    1711119600,
    0,
    0.13,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.06, visibility = 10000,
        wind_deg = 50, wind_gust = 2.96,
        wind_speed = 2.15, temp = 281.67,
        pressure = 1013, pop = 0.6,
        feels_like = 280.49, dew_point = 278.25,
        clouds = 100, dt = 1711119600, snow = 0,
        rain = 0.13, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1711119600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711123200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    353,
    2.46,
    1.95,
    281.62,
    1013,
    0.68,
    280.6,
    278.36,
    100,
    1711123200,
    0,
    0.13,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 353, wind_gust = 2.46,
        wind_speed = 1.95, temp = 281.62,
        pressure = 1013, pop = 0.68,
        feels_like = 280.6, dew_point = 278.36,
        clouds = 100, dt = 1711123200, snow = 0,
        rain = 0.13, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1711123200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711123200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    353,
    2.46,
    1.95,
    281.62,
    1013,
    0.68,
    280.6,
    278.36,
    100,
    1711123200,
    0,
    0.13,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 353, wind_gust = 2.46,
        wind_speed = 1.95, temp = 281.62,
        pressure = 1013, pop = 0.68,
        feels_like = 280.6, dew_point = 278.36,
        clouds = 100, dt = 1711123200, snow = 0,
        rain = 0.13, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1711123200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711126800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.21,
    10000,
    350,
    2.86,
    2.16,
    281.6,
    1012,
    0.68,
    280.4,
    278.47,
    100,
    1711126800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.21, visibility = 10000,
        wind_deg = 350, wind_gust = 2.86,
        wind_speed = 2.16, temp = 281.6,
        pressure = 1012, pop = 0.68,
        feels_like = 280.4, dew_point = 278.47,
        clouds = 100, dt = 1711126800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711126800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711126800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.21,
    10000,
    350,
    2.86,
    2.16,
    281.6,
    1012,
    0.68,
    280.4,
    278.47,
    100,
    1711126800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.21, visibility = 10000,
        wind_deg = 350, wind_gust = 2.86,
        wind_speed = 2.16, temp = 281.6,
        pressure = 1012, pop = 0.68,
        feels_like = 280.4, dew_point = 278.47,
        clouds = 100, dt = 1711126800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711126800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711130400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.35,
    10000,
    28,
    2.65,
    1.88,
    281.85,
    1012,
    0.76,
    280.93,
    278.58,
    100,
    1711130400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.35, visibility = 10000,
        wind_deg = 28, wind_gust = 2.65,
        wind_speed = 1.88, temp = 281.85,
        pressure = 1012, pop = 0.76,
        feels_like = 280.93, dew_point = 278.58,
        clouds = 100, dt = 1711130400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711130400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711130400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.35,
    10000,
    28,
    2.65,
    1.88,
    281.85,
    1012,
    0.76,
    280.93,
    278.58,
    100,
    1711130400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.35, visibility = 10000,
        wind_deg = 28, wind_gust = 2.65,
        wind_speed = 1.88, temp = 281.85,
        pressure = 1012, pop = 0.76,
        feels_like = 280.93, dew_point = 278.58,
        clouds = 100, dt = 1711130400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711130400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711134000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.38,
    10000,
    17,
    2.28,
    1.67,
    282.27,
    1011,
    0.37,
    281.62,
    278.68,
    100,
    1711134000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.38, visibility = 10000,
        wind_deg = 17, wind_gust = 2.28,
        wind_speed = 1.67, temp = 282.27,
        pressure = 1011, pop = 0.37,
        feels_like = 281.62, dew_point = 278.68,
        clouds = 100, dt = 1711134000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711134000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711134000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.38,
    10000,
    17,
    2.28,
    1.67,
    282.27,
    1011,
    0.37,
    281.62,
    278.68,
    100,
    1711134000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.38, visibility = 10000,
        wind_deg = 17, wind_gust = 2.28,
        wind_speed = 1.67, temp = 282.27,
        pressure = 1011, pop = 0.37,
        feels_like = 281.62, dew_point = 278.68,
        clouds = 100, dt = 1711134000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711134000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711137600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.74,
    10000,
    350,
    3.39,
    2.73,
    283.16,
    1010,
    0.33,
    282.15,
    278.69,
    100,
    1711137600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.74, visibility = 10000,
        wind_deg = 350, wind_gust = 3.39,
        wind_speed = 2.73, temp = 283.16,
        pressure = 1010, pop = 0.33,
        feels_like = 282.15, dew_point = 278.69,
        clouds = 100, dt = 1711137600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711137600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711137600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.74,
    10000,
    350,
    3.39,
    2.73,
    283.16,
    1010,
    0.33,
    282.15,
    278.69,
    100,
    1711137600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.74, visibility = 10000,
        wind_deg = 350, wind_gust = 3.39,
        wind_speed = 2.73, temp = 283.16,
        pressure = 1010, pop = 0.33,
        feels_like = 282.15, dew_point = 278.69,
        clouds = 100, dt = 1711137600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711137600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711141200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.14,
    10000,
    304,
    2.95,
    3,
    283.01,
    1009,
    0.29,
    281.49,
    278.95,
    100,
    1711141200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.14, visibility = 10000,
        wind_deg = 304, wind_gust = 2.95,
        wind_speed = 3, temp = 283.01,
        pressure = 1009, pop = 0.29,
        feels_like = 281.49, dew_point = 278.95,
        clouds = 100, dt = 1711141200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711141200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1711141200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.14,
    10000,
    304,
    2.95,
    3,
    283.01,
    1009,
    0.29,
    281.49,
    278.95,
    100,
    1711141200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.14, visibility = 10000,
        wind_deg = 304, wind_gust = 2.95,
        wind_speed = 3, temp = 283.01,
        pressure = 1009, pop = 0.29,
        feels_like = 281.49, dew_point = 278.95,
        clouds = 100, dt = 1711141200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1711141200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Optional `process_group' method not present; not called
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `master' . Read operation complete
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `master' . Read operation complete
2024-03-20 15:08:01|   0.1|  0.0|INFORM|Optional `process_group' method not present; not called
2024-03-20 15:08:01|   0.3|  0.2|INFORM|CallCurrentWeather (HTTPFactory): [2]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 410 bytes
2024-03-20 15:08:01|   0.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [2]: HTTP Download: received 410 bytes
2024-03-20 15:08:01|   0.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [2]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 410 bytes, DNS lookup time: 1 ms, total transfer time: 570 ms
2024-03-20 15:08:01|   0.3|  0.0|INFORM|dt
2024-03-20 15:08:01|   0.3|  0.0|INFORM|sunrise
2024-03-20 15:08:01|   0.3|  0.0|INFORM|sunset
2024-03-20 15:08:01|   0.3|  0.0|INFORM|temp
2024-03-20 15:08:01|   0.3|  0.0|INFORM|feels_like
2024-03-20 15:08:01|   0.3|  0.0|INFORM|pressure
2024-03-20 15:08:01|   0.3|  0.0|INFORM|humidity
2024-03-20 15:08:01|   0.3|  0.0|INFORM|dew_point
2024-03-20 15:08:01|   0.3|  0.0|INFORM|uvi
2024-03-20 15:08:01|   0.3|  0.0|INFORM|clouds
2024-03-20 15:08:01|   0.3|  0.0|INFORM|visibility
2024-03-20 15:08:01|   0.3|  0.0|INFORM|wind_speed
2024-03-20 15:08:01|   0.3|  0.0|INFORM|wind_deg
2024-03-20 15:08:01|   0.3|  0.0|INFORM|wind_gust
2024-03-20 15:08:01|   0.3|  0.0|INFORM|weather
2024-03-20 15:08:01|   0.3|  0.0|INFORM|FME Configuration: Using connection values from 'testdb' for R_4
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Performing query against MSSQL_ADO dataset `testdb'
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `master' for read operation
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Trying to connect using Microsoft OLE DB Driver for SQL Server...
2024-03-20 15:08:01|   0.3|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1710972000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.14,
    10000,
    58,
    6.71,
    4.92,
    283.46,
    1015,
    282.48,
    279.03,
    100,
    1710972000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.14, visibility = 10000,
        wind_deg = 58, wind_gust = 6.71,
        wind_speed = 4.92, temp = 283.46,
        pressure = 1015,
        feels_like = 282.48, dew_point = 279.03,
        clouds = 100, dt = 1710972000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710972000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-03-20 15:08:01|   0.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1710972000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.14,
    10000,
    58,
    6.71,
    4.92,
    283.46,
    1015,
    282.48,
    279.03,
    100,
    1710972000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.14, visibility = 10000,
        wind_deg = 58, wind_gust = 6.71,
        wind_speed = 4.92, temp = 283.46,
        pressure = 1015,
        feels_like = 282.48, dew_point = 279.03,
        clouds = 100, dt = 1710972000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1710972000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Optional `process_group' method not present; not called
2024-03-20 15:08:01|   0.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `master' . Read operation complete
2024-03-20 15:08:02|   0.3|  0.0|STATS |Destination Feature Type Routing Correlator (RoutingFactory): Tested 0 input feature(s), wrote 0 output feature(s): 0 matched merge filters, 0 were routed to output, 0 could not be routed.
2024-03-20 15:08:02|   0.3|  0.0|STATS |Final Output Nuker (TeeFactory): Cloned 0 input feature(s) into 0 output feature(s)
2024-03-20 15:08:02|   0.3|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-20 15:08:02|   0.3|  0.0|STATS |                            Features Read Summary
2024-03-20 15:08:02|   0.3|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-20 15:08:02|   0.3|  0.0|STATS |==============================================================================
2024-03-20 15:08:02|   0.3|  0.0|STATS |Total Features Read                                                          0
2024-03-20 15:08:02|   0.3|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-20 15:08:02|   0.3|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-20 15:08:02|   0.3|  0.0|STATS |                           Features Written Summary
2024-03-20 15:08:02|   0.3|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-20 15:08:02|   0.3|  0.0|STATS |==============================================================================
2024-03-20 15:08:02|   0.3|  0.0|STATS |Total Features Written                                                       0
2024-03-20 15:08:02|   0.3|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-03-20 15:08:02|   0.3|  0.0|WARN  |-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
2024-03-20 15:08:02|   0.3|  0.0|WARN  |-~                                                                             ~-
2024-03-20 15:08:02|   0.3|  0.0|WARN  |-~    Feature caches have been recorded at every stage of the translation.     ~-
2024-03-20 15:08:02|   0.3|  0.0|WARN  |-~                      To inspect the recorded features,                      ~-
2024-03-20 15:08:02|   0.3|  0.0|WARN  |-~              click the feature cache icons next to the ports.               ~-
2024-03-20 15:08:02|   0.3|  0.0|WARN  |-~                                                                             ~-
2024-03-20 15:08:02|   0.3|  0.0|WARN  |-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
2024-03-20 15:08:02|   0.3|  0.0|INFORM|Translation was SUCCESSFUL with 58 warning(s) (0 feature(s) output)
2024-03-20 15:08:02|   0.3|  0.0|INFORM|FME Session Duration: 3.3 seconds. (CPU: 0.1s user, 0.2s system)
2024-03-20 15:08:02|   0.3|  0.0|INFORM|END - ProcessID: 10844, peak process memory usage: 106796 kB, current process memory usage: 103308 kB
