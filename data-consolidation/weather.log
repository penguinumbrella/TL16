2024-05-30 15:36:34|   0.0|  0.0|INFORM|Current FME version: FME 2022.2.0.0 (20221103 - Build 22765 - WIN64)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME_HOME is 'C:\Program Files\FME\'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Desktop ESRI Edition (floating)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Permanent License.
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Machine host name is: PASS-CDW-245
2024-05-30 15:36:34|   0.0|  0.0|INFORM|OS Locale Name     : en_US
2024-05-30 15:36:34|   0.0|  0.0|INFORM|OS Locale Encoding : UTF-8
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Process Encoding   : UTF-8
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME API version: '4.0 20220615'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: FME_BASE is 'no'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: FME_MF_DIR is 'C:\!Capstone\repo\TL16\data-consolidation/'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: FME_MF_NAME is 'weather.fmw'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: FME_PRODUCT_NAME is 'FME(R) 2022.2.0.0'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Operating System: Microsoft Windows 10 64-bit  (Build 19045)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Platform: WIN64
2024-05-30 15:36:34|   0.0|  0.0|INFORM|System Status: 4.18 GB of disk space available in the FME temporary folder (C:\Users\mauer4.stu\AppData\Local\Temp\wbrun_1717104702379_16196\fmetmp_4)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|System Status: 15.87 GB of physical memory available
2024-05-30 15:36:34|   0.0|  0.0|INFORM|System Status: 63.49 GB of virtual memory available
2024-05-30 15:36:34|   0.0|  0.0|INFORM|START - ProcessID: 16760, peak process memory usage: 49296 kB, current process memory usage: 49296 kB
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Command line arguments are `C:\Program Files\FME\fme.exe' `C:/!Capstone/repo/TL16/data-consolidation\wb-xlate-1717108593024_16196' `LOG_STANDARDOUT' `YES' `LOG_TIMINGS' `YES' `LogCountServerName' `58846' `LOG_STANDARDOUT' `No' `WORKBENCH_LOG_SERVER' `58895'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Connection Storage: 'C:\Users\mauer4.stu\AppData\Roaming\Safe Software\FME\'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Shared folders for formats are : C:\Program Files\FME\datasources;C:\Users\mauer4.stu\Documents\FME\Formats
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Shared folders for transformers are : C:\Users\mauer4.stu\AppData\Roaming\Safe Software\FME\Packages\22765-win64\transformers;C:\Program Files\FME\transformers;C:\Users\mauer4.stu\AppData\Roaming\Safe Software\FME\FME Store\Transformers
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Shared folders for coordinate systems are : C:\Users\mauer4.stu\Documents\FME\CoordinateSystems
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Shared folders for coordinate system exceptions are : C:\Users\mauer4.stu\Documents\FME\CoordinateSystemExceptions
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Shared folders for coordinate system grid overrides are : C:\Users\mauer4.stu\Documents\FME\CoordinateSystemGridOverrides
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Shared folders for CS-MAP transformation exceptions are : C:\Users\mauer4.stu\Documents\FME\CsmapTransformationExceptions
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Shared folders for transformer categories are : C:\Users\mauer4.stu\Documents\FME\TransformerCategories
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Reader Keyword is `MULTI_READER'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Writer Keyword is `NULL_DEST'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Writer Group Definition Keyword is `NULL_DEST_DEF'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Reader type is `MULTI_READER'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Writer type is `NULL'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: No destination coordinate system set
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Current working folder is `C:\!Capstone\repo\TL16\data-consolidation'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Temporary folder is `C:\Users\mauer4.stu\AppData\Local\Temp\wbrun_1717104702379_16196\fmetmp_4', set from environment variable `FME_TEMP'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Cache folder is 'C:\Users\mauer4.stu\AppData\Local\Temp'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: FME_HOME is `C:\Program Files\FME\'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Start freeing memory when the process exceeds 47.62 GB
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME Configuration: Stop freeing memory when the process is below 35.72 GB
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Creating writer for format: NULL (Nothing)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for writer named `NULL'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Loaded module 'NULL' from file 'C:\Program Files\FME\plugins/NULL.dll'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME API version of module 'NULL' matches current internal version (4.0 20220615)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Creating reader for format: 
2024-05-30 15:36:34|   0.0|  0.0|INFORM|MULTI_READER(MULTI_READER): Will fail with first member reader failure
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Using Multi Reader with keyword `MULTI_READER' to read multiple datasets
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Loaded module 'LogCount_func' from file 'C:\Program Files\FME\plugins/LogCount_func.dll'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME API version of module 'LogCount_func' matches current internal version (4.0 20220615)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Loaded module 'QueryFactory' from file 'C:\Program Files\FME\plugins/QueryFactory.dll'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME API version of module 'QueryFactory' matches current internal version (4.0 20220615)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Loaded module 'PythonFactory' from file 'C:\Program Files\FME\plugins/PythonFactory.dll'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|FME API version of module 'PythonFactory' matches current internal version (4.0 20220615)
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Using Python interpreter from `C:\Program Files\FME\fmepython310\python310.dll' with PYTHONHOME `C:\Program Files\FME\fmepython310'
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Python version 3.10 loaded successfully
2024-05-30 15:36:34|   0.0|  0.0|INFORM|Adding folder `C:\!Capstone\repo\TL16\data-consolidation\' to the python path
2024-05-30 15:36:34|   0.1|  0.1|INFORM|Adding folder `C:\!Capstone\repo\TL16\data-consolidation\' to the python path
2024-05-30 15:36:34|   0.1|  0.0|INFORM|Loaded module 'HTTPFactory' from file 'C:\Program Files\FME\plugins/HTTPFactory.dll'
2024-05-30 15:36:34|   0.1|  0.0|INFORM|FME API version of module 'HTTPFactory' matches current internal version (4.0 20220615)
2024-05-30 15:36:34|   0.1|  0.0|INFORM|Emptying factory pipeline
2024-05-30 15:36:34|   0.1|  0.0|STATS |Restoring 1 feature(s) from FME feature store file `C:\Users\mauer4.stu\AppData\Local\Temp\wb-cache-weather-xSSdGg\Main_CreateActualWeatherTable -1 14 fo 2 INITIATOR  0  41649575f8ae1028e7bdec4ec456c60b3c0f747b.ffs'
2024-05-30 15:36:34|   0.2|  0.1|INFORM|FME Configuration: Using connection values from 'ServerTestDB' for R_1
2024-05-30 15:36:34|   0.2|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-05-30 15:36:34|   0.2|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-05-30 15:36:34|   0.2|  0.0|INFORM|Loaded module 'MSSQL_ADO' from file 'C:\Program Files\FME\plugins/FME_ADO.dll'
2024-05-30 15:36:34|   0.2|  0.0|INFORM|FME API version of module 'FME_ADO' matches current internal version (4.0 20220615)
2024-05-30 15:36:34|   0.2|  0.0|INFORM|Performing query against MSSQL_ADO dataset `ServerTestDB'
2024-05-30 15:36:34|   0.2|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `Parking' for read operation
2024-05-30 15:36:34|   0.2|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Trying to connect using Microsoft OLE DB Driver for SQL Server...
2024-05-30 15:36:35|   0.2|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-05-30 15:36:35|   0.3|  0.1|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 1 feature(s)
2024-05-30 15:36:35|   0.3|  0.0|INFORM|GetLastTimestamp: Splitting bulk features into individual features
2024-05-30 15:36:35|   0.3|  0.0|INFORM|True
2024-05-30 15:36:35|   0.3|  0.0|INFORM|True
2024-05-30 15:36:35|   0.3|  0.0|INFORM|0
2024-05-30 15:36:35|   0.6|  0.3|INFORM|CallCurrentWeather (HTTPFactory): [4]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 404 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [4]: HTTP Download: received 404 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [6]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [6]: HTTP Download: received 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [4]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 404 bytes, DNS lookup time: 3 ms, total transfer time: 350 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [6]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 2 ms, total transfer time: 349 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [3]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 410 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [3]: HTTP Download: received 410 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [8]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [8]: HTTP Download: received 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [3]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 410 bytes, DNS lookup time: 3 ms, total transfer time: 353 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [8]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 2 ms, total transfer time: 351 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [10]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [10]: HTTP Download: received 390 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [10]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 1 ms, total transfer time: 352 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [12]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [12]: HTTP Download: received 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [12]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 1 ms, total transfer time: 354 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [9]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [9]: HTTP Download: received 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [9]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 1 ms, total transfer time: 356 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [5]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 387 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [5]: HTTP Download: received 387 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [5]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 387 bytes, DNS lookup time: 3 ms, total transfer time: 359 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [11]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [11]: HTTP Download: received 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [11]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 1 ms, total transfer time: 357 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [7]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [7]: HTTP Download: received 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [7]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 2 ms, total transfer time: 359 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [13]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [13]: HTTP Download: received 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [13]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 358 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [16]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [16]: HTTP Download: received 390 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [16]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 358 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [15]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [15]: HTTP Download: received 384 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [15]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 362 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [19]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 387 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [19]: HTTP Download: received 387 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [19]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 387 bytes, DNS lookup time: 0 ms, total transfer time: 362 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [20]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [20]: HTTP Download: received 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [20]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 363 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [23]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [23]: HTTP Download: received 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [23]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 364 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [22]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 405 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [22]: HTTP Download: received 405 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [22]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 405 bytes, DNS lookup time: 0 ms, total transfer time: 368 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [1]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 410 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [1]: HTTP Download: received 410 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [1]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 410 bytes, DNS lookup time: 4 ms, total transfer time: 376 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [17]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 386 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [17]: HTTP Download: received 386 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [25]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 404 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [25]: HTTP Download: received 404 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [17]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 386 bytes, DNS lookup time: 0 ms, total transfer time: 371 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [25]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 404 bytes, DNS lookup time: 0 ms, total transfer time: 371 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [21]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [21]: HTTP Download: received 388 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [21]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 373 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [24]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 402 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [24]: HTTP Download: received 402 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [24]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 402 bytes, DNS lookup time: 0 ms, total transfer time: 374 ms
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [2]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [2]: HTTP Download: received 391 bytes
2024-05-30 15:36:35|   0.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [2]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 4 ms, total transfer time: 382 ms
2024-05-30 15:36:35|   0.8|  0.2|INFORM|dt
2024-05-30 15:36:35|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:35|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:35|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:35|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:35|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:35|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:35|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:35|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:35|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:35|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:35|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:35|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:35|   0.8|  0.0|INFORM|wind_gust
2024-05-30 15:36:35|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:35|   0.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [14]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:35|   0.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [14]: HTTP Download: received 391 bytes
2024-05-30 15:36:35|   0.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [14]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 404 ms
2024-05-30 15:36:35|   0.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [18]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:35|   0.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [18]: HTTP Download: received 388 bytes
2024-05-30 15:36:35|   0.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [18]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 405 ms
2024-05-30 15:36:35|   0.8|  0.0|INFORM|FME Configuration: Using connection values from 'ServerTestDB' for R_2
2024-05-30 15:36:35|   0.8|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-05-30 15:36:35|   0.8|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-05-30 15:36:35|   0.8|  0.0|INFORM|Performing query against MSSQL_ADO dataset `ServerTestDB'
2024-05-30 15:36:35|   0.8|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `Parking' for read operation
2024-05-30 15:36:35|   0.8|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-05-30 15:36:35|   0.8|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-05-30 15:36:35|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717106400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.14,
    10000,
    210,
    7.15,
    4.92,
    288.27,
    1028,
    287.4,
    280.57,
    40,
    1717106400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.14, visibility = 10000,
        wind_deg = 210, wind_gust = 7.15,
        wind_speed = 4.92, temp = 288.27,
        pressure = 1028,
        feels_like = 287.4, dew_point = 280.57,
        clouds = 40, dt = 1717106400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717106400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:36|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717106400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.14,
    10000,
    210,
    7.15,
    4.92,
    288.27,
    1028,
    287.4,
    280.57,
    40,
    1717106400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.14, visibility = 10000,
        wind_deg = 210, wind_gust = 7.15,
        wind_speed = 4.92, temp = 288.27,
        pressure = 1028,
        feels_like = 287.4, dew_point = 280.57,
        clouds = 40, dt = 1717106400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717106400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:36|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:36|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:36|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:36|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:36|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:36|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:36|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:36|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:36|   0.8|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-05-30 15:36:36|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717102800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.91,
    10000,
    240,
    0,
    4.12,
    287.18,
    1028,
    286.39,
    281.16,
    75,
    1717102800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.91, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 4.12, temp = 287.18,
        pressure = 1028,
        feels_like = 286.39, dew_point = 281.16,
        clouds = 75, dt = 1717102800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717102800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:36|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717102800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.91,
    10000,
    240,
    0,
    4.12,
    287.18,
    1028,
    286.39,
    281.16,
    75,
    1717102800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.91, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 4.12, temp = 287.18,
        pressure = 1028,
        feels_like = 286.39, dew_point = 281.16,
        clouds = 75, dt = 1717102800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717102800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:36|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:36|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:36|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:36|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:36|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:36|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:36|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_gust
2024-05-30 15:36:36|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:36|   0.8|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-05-30 15:36:36|   0.8|  0.0|INFORM|Logging limit reached for the preceding message. Further instances of this message will not be logged
2024-05-30 15:36:36|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717099200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.11,
    10000,
    254,
    7.6,
    5.81,
    287.13,
    1028,
    286.41,
    281.75,
    40,
    1717099200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.11, visibility = 10000,
        wind_deg = 254, wind_gust = 7.6,
        wind_speed = 5.81, temp = 287.13,
        pressure = 1028,
        feels_like = 286.41, dew_point = 281.75,
        clouds = 40, dt = 1717099200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717099200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:36|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717099200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.11,
    10000,
    254,
    7.6,
    5.81,
    287.13,
    1028,
    286.41,
    281.75,
    40,
    1717099200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.11, visibility = 10000,
        wind_deg = 254, wind_gust = 7.6,
        wind_speed = 5.81, temp = 287.13,
        pressure = 1028,
        feels_like = 286.41, dew_point = 281.75,
        clouds = 40, dt = 1717099200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717099200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:36|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:36|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:36|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:36|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:36|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:36|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:36|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_gust
2024-05-30 15:36:36|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:36|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717095600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.47,
    10000,
    264,
    6.71,
    4.92,
    286.5,
    1029,
    285.74,
    281.36,
    20,
    1717095600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.47, visibility = 10000,
        wind_deg = 264, wind_gust = 6.71,
        wind_speed = 4.92, temp = 286.5,
        pressure = 1029,
        feels_like = 285.74, dew_point = 281.36,
        clouds = 20, dt = 1717095600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717095600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:36|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717095600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.47,
    10000,
    264,
    6.71,
    4.92,
    286.5,
    1029,
    285.74,
    281.36,
    20,
    1717095600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.47, visibility = 10000,
        wind_deg = 264, wind_gust = 6.71,
        wind_speed = 4.92, temp = 286.5,
        pressure = 1029,
        feels_like = 285.74, dew_point = 281.36,
        clouds = 20, dt = 1717095600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717095600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:36|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:36|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:36|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:36|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:36|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:36|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:36|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:36|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:36|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717092000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.6,
    10000,
    270,
    0,
    4.12,
    285.62,
    1029,
    284.83,
    280.92,
    20,
    1717092000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.6, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 4.12, temp = 285.62,
        pressure = 1029,
        feels_like = 284.83, dew_point = 280.92,
        clouds = 20, dt = 1717092000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717092000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:36|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717092000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.6,
    10000,
    270,
    0,
    4.12,
    285.62,
    1029,
    284.83,
    280.92,
    20,
    1717092000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.6, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 4.12, temp = 285.62,
        pressure = 1029,
        feels_like = 284.83, dew_point = 280.92,
        clouds = 20, dt = 1717092000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717092000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:36|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:36|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:36|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:36|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:36|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:36|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:36|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:36|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:36|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:36|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:36|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:36|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717088400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.15,
    10000,
    300,
    0,
    5.66,
    284.66,
    1029,
    283.88,
    280.77,
    20,
    1717088400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.15, visibility = 10000,
        wind_deg = 300, wind_gust = 0,
        wind_speed = 5.66, temp = 284.66,
        pressure = 1029,
        feels_like = 283.88, dew_point = 280.77,
        clouds = 20, dt = 1717088400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717088400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:37|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717088400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.15,
    10000,
    300,
    0,
    5.66,
    284.66,
    1029,
    283.88,
    280.77,
    20,
    1717088400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.15, visibility = 10000,
        wind_deg = 300, wind_gust = 0,
        wind_speed = 5.66, temp = 284.66,
        pressure = 1029,
        feels_like = 283.88, dew_point = 280.77,
        clouds = 20, dt = 1717088400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717088400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:37|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:37|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:37|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:37|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:37|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:37|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:37|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:37|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:37|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717084800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.69,
    10000,
    300,
    0,
    4.12,
    284.47,
    1029,
    283.82,
    281.69,
    75,
    1717084800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.69, visibility = 10000,
        wind_deg = 300, wind_gust = 0,
        wind_speed = 4.12, temp = 284.47,
        pressure = 1029,
        feels_like = 283.82, dew_point = 281.69,
        clouds = 75, dt = 1717084800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717084800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:37|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717084800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.69,
    10000,
    300,
    0,
    4.12,
    284.47,
    1029,
    283.82,
    281.69,
    75,
    1717084800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.69, visibility = 10000,
        wind_deg = 300, wind_gust = 0,
        wind_speed = 4.12, temp = 284.47,
        pressure = 1029,
        feels_like = 283.82, dew_point = 281.69,
        clouds = 75, dt = 1717084800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717084800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:37|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:37|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:37|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:37|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:37|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:37|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:37|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:37|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:37|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717081200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.36,
    10000,
    320,
    0,
    4.63,
    283.76,
    1029,
    283.15,
    281.69,
    75,
    1717081200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.36, visibility = 10000,
        wind_deg = 320, wind_gust = 0,
        wind_speed = 4.63, temp = 283.76,
        pressure = 1029,
        feels_like = 283.15, dew_point = 281.69,
        clouds = 75, dt = 1717081200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717081200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:37|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717081200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.36,
    10000,
    320,
    0,
    4.63,
    283.76,
    1029,
    283.15,
    281.69,
    75,
    1717081200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.36, visibility = 10000,
        wind_deg = 320, wind_gust = 0,
        wind_speed = 4.63, temp = 283.76,
        pressure = 1029,
        feels_like = 283.15, dew_point = 281.69,
        clouds = 75, dt = 1717081200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717081200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:37|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:37|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:37|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:37|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:37|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:37|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:37|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:37|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:37|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717077600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    300,
    0,
    7.72,
    282.52,
    1029,
    279.08,
    281.13,
    75,
    1717077600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 300, wind_gust = 0,
        wind_speed = 7.72, temp = 282.52,
        pressure = 1029,
        feels_like = 279.08, dew_point = 281.13,
        clouds = 75, dt = 1717077600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717077600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:37|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717077600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    300,
    0,
    7.72,
    282.52,
    1029,
    279.08,
    281.13,
    75,
    1717077600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 300, wind_gust = 0,
        wind_speed = 7.72, temp = 282.52,
        pressure = 1029,
        feels_like = 279.08, dew_point = 281.13,
        clouds = 75, dt = 1717077600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717077600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:37|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:37|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:37|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:37|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:37|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:37|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:37|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:37|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:37|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717074000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.06,
    10000,
    20,
    0,
    2.06,
    281.69,
    1028,
    280.59,
    280.62,
    75,
    1717074000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.06, visibility = 10000,
        wind_deg = 20, wind_gust = 0,
        wind_speed = 2.06, temp = 281.69,
        pressure = 1028,
        feels_like = 280.59, dew_point = 280.62,
        clouds = 75, dt = 1717074000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717074000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:37|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717074000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.06,
    10000,
    20,
    0,
    2.06,
    281.69,
    1028,
    280.59,
    280.62,
    75,
    1717074000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.06, visibility = 10000,
        wind_deg = 20, wind_gust = 0,
        wind_speed = 2.06, temp = 281.69,
        pressure = 1028,
        feels_like = 280.59, dew_point = 280.62,
        clouds = 75, dt = 1717074000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717074000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:37|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:37|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:37|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:37|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:37|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:37|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:37|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:37|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:37|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:37|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:37|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:37|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717070400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    280,
    0,
    5.66,
    282.36,
    1028,
    279.51,
    280.64,
    75,
    1717070400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 280, wind_gust = 0,
        wind_speed = 5.66, temp = 282.36,
        pressure = 1028,
        feels_like = 279.51, dew_point = 280.64,
        clouds = 75, dt = 1717070400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717070400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:38|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717070400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    280,
    0,
    5.66,
    282.36,
    1028,
    279.51,
    280.64,
    75,
    1717070400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 280, wind_gust = 0,
        wind_speed = 5.66, temp = 282.36,
        pressure = 1028,
        feels_like = 279.51, dew_point = 280.64,
        clouds = 75, dt = 1717070400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717070400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:38|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:38|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:38|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:38|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:38|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:38|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:38|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:38|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:38|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717066800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    280,
    0,
    4.63,
    282.43,
    1028,
    279.99,
    280.71,
    75,
    1717066800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 280, wind_gust = 0,
        wind_speed = 4.63, temp = 282.43,
        pressure = 1028,
        feels_like = 279.99, dew_point = 280.71,
        clouds = 75, dt = 1717066800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717066800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:38|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717066800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    280,
    0,
    4.63,
    282.43,
    1028,
    279.99,
    280.71,
    75,
    1717066800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 280, wind_gust = 0,
        wind_speed = 4.63, temp = 282.43,
        pressure = 1028,
        feels_like = 279.99, dew_point = 280.71,
        clouds = 75, dt = 1717066800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717066800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:38|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:38|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:38|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:38|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:38|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:38|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:38|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:38|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:38|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717063200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    260,
    0,
    4.12,
    282.88,
    1028,
    280.77,
    280.99,
    75,
    1717063200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 260, wind_gust = 0,
        wind_speed = 4.12, temp = 282.88,
        pressure = 1028,
        feels_like = 280.77, dew_point = 280.99,
        clouds = 75, dt = 1717063200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717063200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:38|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717063200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    260,
    0,
    4.12,
    282.88,
    1028,
    280.77,
    280.99,
    75,
    1717063200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 260, wind_gust = 0,
        wind_speed = 4.12, temp = 282.88,
        pressure = 1028,
        feels_like = 280.77, dew_point = 280.99,
        clouds = 75, dt = 1717063200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717063200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:38|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:38|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:38|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:38|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:38|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:38|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:38|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:38|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:38|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717059600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    240,
    0,
    4.12,
    282.98,
    1027,
    280.89,
    281.09,
    40,
    1717059600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 4.12, temp = 282.98,
        pressure = 1027,
        feels_like = 280.89, dew_point = 281.09,
        clouds = 40, dt = 1717059600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717059600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:38|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717059600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    240,
    0,
    4.12,
    282.98,
    1027,
    280.89,
    281.09,
    40,
    1717059600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 4.12, temp = 282.98,
        pressure = 1027,
        feels_like = 280.89, dew_point = 281.09,
        clouds = 40, dt = 1717059600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717059600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:38|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:38|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:38|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:38|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:38|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:38|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:38|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:38|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:38|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717056000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    3.09,
    282.6,
    1027,
    280.95,
    280.88,
    20,
    1717056000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 3.09, temp = 282.6,
        pressure = 1027,
        feels_like = 280.95, dew_point = 280.88,
        clouds = 20, dt = 1717056000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717056000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:38|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717056000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    3.09,
    282.6,
    1027,
    280.95,
    280.88,
    20,
    1717056000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 3.09, temp = 282.6,
        pressure = 1027,
        feels_like = 280.95, dew_point = 280.88,
        clouds = 20, dt = 1717056000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717056000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:38|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:38|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:38|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:38|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:38|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:38|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:38|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:38|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:38|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:38|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:38|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:38|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717052400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    4.12,
    283.3,
    1027,
    282.62,
    281.07,
    40,
    1717052400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 4.12, temp = 283.3,
        pressure = 1027,
        feels_like = 282.62, dew_point = 281.07,
        clouds = 40, dt = 1717052400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717052400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:39|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717052400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    4.12,
    283.3,
    1027,
    282.62,
    281.07,
    40,
    1717052400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 4.12, temp = 283.3,
        pressure = 1027,
        feels_like = 282.62, dew_point = 281.07,
        clouds = 40, dt = 1717052400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717052400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:39|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:39|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:39|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:39|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:39|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:39|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:39|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:39|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:39|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:39|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:39|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:39|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:39|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:39|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:39|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717048800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    3.6,
    283.87,
    1027,
    283.16,
    281.1,
    75,
    1717048800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 3.6, temp = 283.87,
        pressure = 1027,
        feels_like = 283.16, dew_point = 281.1,
        clouds = 75, dt = 1717048800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717048800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:39|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717048800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    3.6,
    283.87,
    1027,
    283.16,
    281.1,
    75,
    1717048800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 3.6, temp = 283.87,
        pressure = 1027,
        feels_like = 283.16, dew_point = 281.1,
        clouds = 75, dt = 1717048800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717048800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:39|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:39|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:39|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:39|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:39|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:39|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:39|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:39|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:39|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:39|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:39|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:39|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:39|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:39|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:39|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717045200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    4.12,
    284.49,
    1027,
    283.77,
    281.17,
    75,
    1717045200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 4.12, temp = 284.49,
        pressure = 1027,
        feels_like = 283.77, dew_point = 281.17,
        clouds = 75, dt = 1717045200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717045200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:39|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717045200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    4.12,
    284.49,
    1027,
    283.77,
    281.17,
    75,
    1717045200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 4.12, temp = 284.49,
        pressure = 1027,
        feels_like = 283.77, dew_point = 281.17,
        clouds = 75, dt = 1717045200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717045200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:39|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:39|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:39|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:39|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:39|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:39|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:39|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:39|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:39|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:39|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:39|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:39|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:39|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:39|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:39|   0.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717041600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    3.6,
    285.24,
    1026,
    284.46,
    280.95,
    75,
    1717041600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 3.6, temp = 285.24,
        pressure = 1026,
        feels_like = 284.46, dew_point = 280.95,
        clouds = 75, dt = 1717041600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717041600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:39|   0.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717041600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    3.6,
    285.24,
    1026,
    284.46,
    280.95,
    75,
    1717041600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 3.6, temp = 285.24,
        pressure = 1026,
        feels_like = 284.46, dew_point = 280.95,
        clouds = 75, dt = 1717041600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717041600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:39|   0.8|  0.0|INFORM|dt
2024-05-30 15:36:39|   0.8|  0.0|INFORM|sunrise
2024-05-30 15:36:39|   0.8|  0.0|INFORM|sunset
2024-05-30 15:36:39|   0.8|  0.0|INFORM|temp
2024-05-30 15:36:39|   0.8|  0.0|INFORM|feels_like
2024-05-30 15:36:39|   0.8|  0.0|INFORM|pressure
2024-05-30 15:36:39|   0.8|  0.0|INFORM|humidity
2024-05-30 15:36:39|   0.8|  0.0|INFORM|dew_point
2024-05-30 15:36:39|   0.8|  0.0|INFORM|uvi
2024-05-30 15:36:39|   0.8|  0.0|INFORM|clouds
2024-05-30 15:36:39|   0.8|  0.0|INFORM|visibility
2024-05-30 15:36:39|   0.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:39|   0.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:39|   0.8|  0.0|INFORM|weather
2024-05-30 15:36:39|   0.9|  0.1|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717038000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    230,
    0,
    3.09,
    286.08,
    1026,
    285.26,
    280.75,
    75,
    1717038000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 230, wind_gust = 0,
        wind_speed = 3.09, temp = 286.08,
        pressure = 1026,
        feels_like = 285.26, dew_point = 280.75,
        clouds = 75, dt = 1717038000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717038000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:39|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717038000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    230,
    0,
    3.09,
    286.08,
    1026,
    285.26,
    280.75,
    75,
    1717038000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 230, wind_gust = 0,
        wind_speed = 3.09, temp = 286.08,
        pressure = 1026,
        feels_like = 285.26, dew_point = 280.75,
        clouds = 75, dt = 1717038000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717038000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:39|   0.9|  0.0|INFORM|dt
2024-05-30 15:36:39|   0.9|  0.0|INFORM|sunrise
2024-05-30 15:36:39|   0.9|  0.0|INFORM|sunset
2024-05-30 15:36:39|   0.9|  0.0|INFORM|temp
2024-05-30 15:36:39|   0.9|  0.0|INFORM|feels_like
2024-05-30 15:36:39|   0.9|  0.0|INFORM|pressure
2024-05-30 15:36:39|   0.9|  0.0|INFORM|humidity
2024-05-30 15:36:39|   0.9|  0.0|INFORM|dew_point
2024-05-30 15:36:39|   0.9|  0.0|INFORM|uvi
2024-05-30 15:36:39|   0.9|  0.0|INFORM|clouds
2024-05-30 15:36:39|   0.9|  0.0|INFORM|visibility
2024-05-30 15:36:39|   0.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:39|   0.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:39|   0.9|  0.0|INFORM|weather
2024-05-30 15:36:39|   0.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717034400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.54,
    10000,
    240,
    0,
    4.63,
    286.75,
    1026,
    285.89,
    280.53,
    20,
    1717034400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.54, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 4.63, temp = 286.75,
        pressure = 1026,
        feels_like = 285.89, dew_point = 280.53,
        clouds = 20, dt = 1717034400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717034400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:39|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717034400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.54,
    10000,
    240,
    0,
    4.63,
    286.75,
    1026,
    285.89,
    280.53,
    20,
    1717034400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.54, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 4.63, temp = 286.75,
        pressure = 1026,
        feels_like = 285.89, dew_point = 280.53,
        clouds = 20, dt = 1717034400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717034400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:39|   0.9|  0.0|INFORM|dt
2024-05-30 15:36:39|   0.9|  0.0|INFORM|sunrise
2024-05-30 15:36:39|   0.9|  0.0|INFORM|sunset
2024-05-30 15:36:39|   0.9|  0.0|INFORM|temp
2024-05-30 15:36:39|   0.9|  0.0|INFORM|feels_like
2024-05-30 15:36:39|   0.9|  0.0|INFORM|pressure
2024-05-30 15:36:39|   0.9|  0.0|INFORM|humidity
2024-05-30 15:36:39|   0.9|  0.0|INFORM|dew_point
2024-05-30 15:36:39|   0.9|  0.0|INFORM|uvi
2024-05-30 15:36:39|   0.9|  0.0|INFORM|clouds
2024-05-30 15:36:39|   0.9|  0.0|INFORM|visibility
2024-05-30 15:36:39|   0.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:39|   0.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:39|   0.9|  0.0|INFORM|wind_gust
2024-05-30 15:36:39|   0.9|  0.0|INFORM|weather
2024-05-30 15:36:40|   0.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717030800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.14,
    10000,
    243,
    7.15,
    5.81,
    287.12,
    1025,
    286.24,
    280.43,
    20,
    1717030800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.14, visibility = 10000,
        wind_deg = 243, wind_gust = 7.15,
        wind_speed = 5.81, temp = 287.12,
        pressure = 1025,
        feels_like = 286.24, dew_point = 280.43,
        clouds = 20, dt = 1717030800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717030800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:40|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717030800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.14,
    10000,
    243,
    7.15,
    5.81,
    287.12,
    1025,
    286.24,
    280.43,
    20,
    1717030800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.14, visibility = 10000,
        wind_deg = 243, wind_gust = 7.15,
        wind_speed = 5.81, temp = 287.12,
        pressure = 1025,
        feels_like = 286.24, dew_point = 280.43,
        clouds = 20, dt = 1717030800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717030800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:40|   0.9|  0.0|INFORM|PutActualWeather (QueryFactory): 22 input initiators processed
2024-05-30 15:36:40|   0.9|  0.0|INFORM|dt
2024-05-30 15:36:40|   0.9|  0.0|INFORM|sunrise
2024-05-30 15:36:40|   0.9|  0.0|INFORM|sunset
2024-05-30 15:36:40|   0.9|  0.0|INFORM|temp
2024-05-30 15:36:40|   0.9|  0.0|INFORM|feels_like
2024-05-30 15:36:40|   0.9|  0.0|INFORM|pressure
2024-05-30 15:36:40|   0.9|  0.0|INFORM|humidity
2024-05-30 15:36:40|   0.9|  0.0|INFORM|dew_point
2024-05-30 15:36:40|   0.9|  0.0|INFORM|uvi
2024-05-30 15:36:40|   0.9|  0.0|INFORM|clouds
2024-05-30 15:36:40|   0.9|  0.0|INFORM|visibility
2024-05-30 15:36:40|   0.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:40|   0.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:40|   0.9|  0.0|INFORM|weather
2024-05-30 15:36:40|   0.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717027200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.24,
    10000,
    250,
    0,
    5.66,
    287.43,
    1025,
    286.56,
    280.49,
    20,
    1717027200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.24, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 5.66, temp = 287.43,
        pressure = 1025,
        feels_like = 286.56, dew_point = 280.49,
        clouds = 20, dt = 1717027200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717027200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:40|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717027200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.24,
    10000,
    250,
    0,
    5.66,
    287.43,
    1025,
    286.56,
    280.49,
    20,
    1717027200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.24, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 5.66, temp = 287.43,
        pressure = 1025,
        feels_like = 286.56, dew_point = 280.49,
        clouds = 20, dt = 1717027200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717027200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:40|   0.9|  0.0|INFORM|dt
2024-05-30 15:36:40|   0.9|  0.0|INFORM|sunrise
2024-05-30 15:36:40|   0.9|  0.0|INFORM|sunset
2024-05-30 15:36:40|   0.9|  0.0|INFORM|temp
2024-05-30 15:36:40|   0.9|  0.0|INFORM|feels_like
2024-05-30 15:36:40|   0.9|  0.0|INFORM|pressure
2024-05-30 15:36:40|   0.9|  0.0|INFORM|humidity
2024-05-30 15:36:40|   0.9|  0.0|INFORM|dew_point
2024-05-30 15:36:40|   0.9|  0.0|INFORM|uvi
2024-05-30 15:36:40|   0.9|  0.0|INFORM|clouds
2024-05-30 15:36:40|   0.9|  0.0|INFORM|visibility
2024-05-30 15:36:40|   0.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:40|   0.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:40|   0.9|  0.0|INFORM|wind_gust
2024-05-30 15:36:40|   0.9|  0.0|INFORM|weather
2024-05-30 15:36:40|   0.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717023600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3,
    10000,
    237,
    8.05,
    5.81,
    287.51,
    1025,
    286.65,
    280.57,
    20,
    1717023600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3, visibility = 10000,
        wind_deg = 237, wind_gust = 8.05,
        wind_speed = 5.81, temp = 287.51,
        pressure = 1025,
        feels_like = 286.65, dew_point = 280.57,
        clouds = 20, dt = 1717023600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717023600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:40|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717023600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3,
    10000,
    237,
    8.05,
    5.81,
    287.51,
    1025,
    286.65,
    280.57,
    20,
    1717023600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3, visibility = 10000,
        wind_deg = 237, wind_gust = 8.05,
        wind_speed = 5.81, temp = 287.51,
        pressure = 1025,
        feels_like = 286.65, dew_point = 280.57,
        clouds = 20, dt = 1717023600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717023600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:40|   0.9|  0.0|INFORM|dt
2024-05-30 15:36:40|   0.9|  0.0|INFORM|sunrise
2024-05-30 15:36:40|   0.9|  0.0|INFORM|sunset
2024-05-30 15:36:40|   0.9|  0.0|INFORM|temp
2024-05-30 15:36:40|   0.9|  0.0|INFORM|feels_like
2024-05-30 15:36:40|   0.9|  0.0|INFORM|pressure
2024-05-30 15:36:40|   0.9|  0.0|INFORM|humidity
2024-05-30 15:36:40|   0.9|  0.0|INFORM|dew_point
2024-05-30 15:36:40|   0.9|  0.0|INFORM|uvi
2024-05-30 15:36:40|   0.9|  0.0|INFORM|clouds
2024-05-30 15:36:40|   0.9|  0.0|INFORM|visibility
2024-05-30 15:36:40|   0.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:40|   0.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:40|   0.9|  0.0|INFORM|wind_gust
2024-05-30 15:36:40|   0.9|  0.0|INFORM|weather
2024-05-30 15:36:40|   0.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717020000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.85,
    10000,
    222,
    8.49,
    5.36,
    287.48,
    1025,
    286.59,
    280.3,
    20,
    1717020000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.85, visibility = 10000,
        wind_deg = 222, wind_gust = 8.49,
        wind_speed = 5.36, temp = 287.48,
        pressure = 1025,
        feels_like = 286.59, dew_point = 280.3,
        clouds = 20, dt = 1717020000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717020000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:40|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717020000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.85,
    10000,
    222,
    8.49,
    5.36,
    287.48,
    1025,
    286.59,
    280.3,
    20,
    1717020000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.85, visibility = 10000,
        wind_deg = 222, wind_gust = 8.49,
        wind_speed = 5.36, temp = 287.48,
        pressure = 1025,
        feels_like = 286.59, dew_point = 280.3,
        clouds = 20, dt = 1717020000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717020000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:41|   1.2|  0.3|INFORM|CallCurrentWeather (HTTPFactory): [30]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [30]: HTTP Download: received 390 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [30]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 309 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [43]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [43]: HTTP Download: received 384 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [43]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 309 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [38]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [38]: HTTP Download: received 385 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [38]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 310 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [33]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 392 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [33]: HTTP Download: received 392 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [33]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 392 bytes, DNS lookup time: 0 ms, total transfer time: 314 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [44]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [44]: HTTP Download: received 390 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [44]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 312 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [35]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [35]: HTTP Download: received 390 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [35]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 316 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [40]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 401 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [40]: HTTP Download: received 401 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [40]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 401 bytes, DNS lookup time: 0 ms, total transfer time: 317 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [32]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [32]: HTTP Download: received 394 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [32]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 320 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [27]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 405 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [27]: HTTP Download: received 405 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [27]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 405 bytes, DNS lookup time: 0 ms, total transfer time: 321 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [41]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [41]: HTTP Download: received 385 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [41]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 322 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [49]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [49]: HTTP Download: received 393 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [49]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 333 ms
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [50]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [50]: HTTP Download: received 394 bytes
2024-05-30 15:36:41|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [50]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 335 ms
2024-05-30 15:36:41|   1.3|  0.1|INFORM|CallCurrentWeather (HTTPFactory): [29]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [29]: HTTP Download: received 394 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [31]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 389 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [31]: HTTP Download: received 389 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [29]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 443 ms
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [31]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 389 bytes, DNS lookup time: 0 ms, total transfer time: 443 ms
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [26]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 405 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [26]: HTTP Download: received 405 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [28]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [28]: HTTP Download: received 388 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [34]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [34]: HTTP Download: received 393 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [36]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [36]: HTTP Download: received 388 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [26]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 405 bytes, DNS lookup time: 0 ms, total transfer time: 447 ms
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [28]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 447 ms
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [34]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 446 ms
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [36]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 446 ms
2024-05-30 15:36:41|   1.3|  0.0|INFORM|dt
2024-05-30 15:36:41|   1.3|  0.0|INFORM|sunrise
2024-05-30 15:36:41|   1.3|  0.0|INFORM|sunset
2024-05-30 15:36:41|   1.3|  0.0|INFORM|temp
2024-05-30 15:36:41|   1.3|  0.0|INFORM|feels_like
2024-05-30 15:36:41|   1.3|  0.0|INFORM|pressure
2024-05-30 15:36:41|   1.3|  0.0|INFORM|humidity
2024-05-30 15:36:41|   1.3|  0.0|INFORM|dew_point
2024-05-30 15:36:41|   1.3|  0.0|INFORM|uvi
2024-05-30 15:36:41|   1.3|  0.0|INFORM|clouds
2024-05-30 15:36:41|   1.3|  0.0|INFORM|visibility
2024-05-30 15:36:41|   1.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:41|   1.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:41|   1.3|  0.0|INFORM|wind_gust
2024-05-30 15:36:41|   1.3|  0.0|INFORM|weather
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [48]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [48]: HTTP Download: received 390 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [48]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 454 ms
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [46]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [46]: HTTP Download: received 391 bytes
2024-05-30 15:36:41|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [46]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 458 ms
2024-05-30 15:36:41|   1.4|  0.1|INFORM|CallCurrentWeather (HTTPFactory): [45]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 386 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [45]: HTTP Download: received 386 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [45]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 386 bytes, DNS lookup time: 0 ms, total transfer time: 460 ms
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [37]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 383 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [37]: HTTP Download: received 383 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [39]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [39]: HTTP Download: received 385 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [42]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 387 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [42]: HTTP Download: received 387 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [37]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 383 bytes, DNS lookup time: 0 ms, total transfer time: 462 ms
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [39]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 462 ms
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [42]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 387 bytes, DNS lookup time: 0 ms, total transfer time: 462 ms
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [47]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [47]: HTTP Download: received 391 bytes
2024-05-30 15:36:41|   1.4|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [47]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 464 ms
2024-05-30 15:36:41|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717016400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.02,
    10000,
    224,
    8.05,
    6.26,
    286.93,
    1025,
    286.01,
    280.02,
    20,
    1717016400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.02, visibility = 10000,
        wind_deg = 224, wind_gust = 8.05,
        wind_speed = 6.26, temp = 286.93,
        pressure = 1025,
        feels_like = 286.01, dew_point = 280.02,
        clouds = 20, dt = 1717016400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717016400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:41|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717016400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.02,
    10000,
    224,
    8.05,
    6.26,
    286.93,
    1025,
    286.01,
    280.02,
    20,
    1717016400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.02, visibility = 10000,
        wind_deg = 224, wind_gust = 8.05,
        wind_speed = 6.26, temp = 286.93,
        pressure = 1025,
        feels_like = 286.01, dew_point = 280.02,
        clouds = 20, dt = 1717016400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717016400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:41|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:41|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:41|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:41|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:41|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:41|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:41|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:41|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:41|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:41|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:41|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:41|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:41|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:41|   1.4|  0.0|INFORM|wind_gust
2024-05-30 15:36:41|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:41|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717012800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.77,
    10000,
    241,
    8.94,
    5.81,
    286.45,
    1025,
    285.53,
    280.02,
    20,
    1717012800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.77, visibility = 10000,
        wind_deg = 241, wind_gust = 8.94,
        wind_speed = 5.81, temp = 286.45,
        pressure = 1025,
        feels_like = 285.53, dew_point = 280.02,
        clouds = 20, dt = 1717012800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717012800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:41|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717012800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.77,
    10000,
    241,
    8.94,
    5.81,
    286.45,
    1025,
    285.53,
    280.02,
    20,
    1717012800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.77, visibility = 10000,
        wind_deg = 241, wind_gust = 8.94,
        wind_speed = 5.81, temp = 286.45,
        pressure = 1025,
        feels_like = 285.53, dew_point = 280.02,
        clouds = 20, dt = 1717012800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717012800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:41|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:41|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:41|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:41|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:41|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:41|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:41|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:41|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:41|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:41|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:41|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:41|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:41|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:41|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:41|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717009200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.65,
    10000,
    240,
    0,
    3.09,
    285.51,
    1024,
    284.66,
    280.41,
    20,
    1717009200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.65, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 3.09, temp = 285.51,
        pressure = 1024,
        feels_like = 284.66, dew_point = 280.41,
        clouds = 20, dt = 1717009200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717009200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:41|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717009200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.65,
    10000,
    240,
    0,
    3.09,
    285.51,
    1024,
    284.66,
    280.41,
    20,
    1717009200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.65, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 3.09, temp = 285.51,
        pressure = 1024,
        feels_like = 284.66, dew_point = 280.41,
        clouds = 20, dt = 1717009200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1717009200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:41|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:41|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:41|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:41|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:41|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:41|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:41|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:41|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:41|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:41|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:41|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:41|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:41|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:41|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:42|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717005600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.27,
    10000,
    230,
    0,
    2.57,
    284.87,
    1024,
    284.13,
    281.17,
    40,
    1717005600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.27, visibility = 10000,
        wind_deg = 230, wind_gust = 0,
        wind_speed = 2.57, temp = 284.87,
        pressure = 1024,
        feels_like = 284.13, dew_point = 281.17,
        clouds = 40, dt = 1717005600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717005600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:42|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717005600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.27,
    10000,
    230,
    0,
    2.57,
    284.87,
    1024,
    284.13,
    281.17,
    40,
    1717005600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.27, visibility = 10000,
        wind_deg = 230, wind_gust = 0,
        wind_speed = 2.57, temp = 284.87,
        pressure = 1024,
        feels_like = 284.13, dew_point = 281.17,
        clouds = 40, dt = 1717005600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1717005600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:42|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:42|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:42|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:42|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:42|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:42|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:42|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:42|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:42|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717002000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.74,
    10000,
    160,
    0,
    3.6,
    283.66,
    1024,
    283.06,
    281.76,
    75,
    1717002000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.74, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.6, temp = 283.66,
        pressure = 1024,
        feels_like = 283.06, dew_point = 281.76,
        clouds = 75, dt = 1717002000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717002000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:42|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1717002000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.74,
    10000,
    160,
    0,
    3.6,
    283.66,
    1024,
    283.06,
    281.76,
    75,
    1717002000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.74, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.6, temp = 283.66,
        pressure = 1024,
        feels_like = 283.06, dew_point = 281.76,
        clouds = 75, dt = 1717002000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1717002000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:42|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:42|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:42|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:42|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:42|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:42|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:42|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:42|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:42|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716998400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.58,
    10000,
    180,
    0,
    3.6,
    282.5,
    1024,
    280.55,
    281.43,
    75,
    1716998400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.58, visibility = 10000,
        wind_deg = 180, wind_gust = 0,
        wind_speed = 3.6, temp = 282.5,
        pressure = 1024,
        feels_like = 280.55, dew_point = 281.43,
        clouds = 75, dt = 1716998400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716998400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:42|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716998400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.58,
    10000,
    180,
    0,
    3.6,
    282.5,
    1024,
    280.55,
    281.43,
    75,
    1716998400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.58, visibility = 10000,
        wind_deg = 180, wind_gust = 0,
        wind_speed = 3.6, temp = 282.5,
        pressure = 1024,
        feels_like = 280.55, dew_point = 281.43,
        clouds = 75, dt = 1716998400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716998400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:42|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:42|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:42|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:42|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:42|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:42|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:42|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:42|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:42|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716994800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.67,
    10000,
    110,
    0,
    2.57,
    281.97,
    1024,
    280.53,
    281.06,
    100,
    1716994800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.67, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 2.57, temp = 281.97,
        pressure = 1024,
        feels_like = 280.53, dew_point = 281.06,
        clouds = 100, dt = 1716994800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716994800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:42|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716994800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.67,
    10000,
    110,
    0,
    2.57,
    281.97,
    1024,
    280.53,
    281.06,
    100,
    1716994800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.67, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 2.57, temp = 281.97,
        pressure = 1024,
        feels_like = 280.53, dew_point = 281.06,
        clouds = 100, dt = 1716994800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716994800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:42|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:42|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:42|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:42|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:42|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:42|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:42|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:42|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:42|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716991200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.26,
    10000,
    90,
    0,
    3.09,
    281.62,
    1023,
    279.77,
    280.4,
    100,
    1716991200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.26, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 3.09, temp = 281.62,
        pressure = 1023,
        feels_like = 279.77, dew_point = 280.4,
        clouds = 100, dt = 1716991200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716991200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:42|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716991200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.26,
    10000,
    90,
    0,
    3.09,
    281.62,
    1023,
    279.77,
    280.4,
    100,
    1716991200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.26, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 3.09, temp = 281.62,
        pressure = 1023,
        feels_like = 279.77, dew_point = 280.4,
        clouds = 100, dt = 1716991200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716991200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:42|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:42|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:42|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:42|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:42|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:42|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:42|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:42|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:42|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:42|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:42|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:43|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716987600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.06,
    10000,
    100,
    0,
    2.57,
    281.1,
    1023,
    279.49,
    279.88,
    100,
    1716987600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.06, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 2.57, temp = 281.1,
        pressure = 1023,
        feels_like = 279.49, dew_point = 279.88,
        clouds = 100, dt = 1716987600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716987600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:43|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716987600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.06,
    10000,
    100,
    0,
    2.57,
    281.1,
    1023,
    279.49,
    279.88,
    100,
    1716987600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.06, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 2.57, temp = 281.1,
        pressure = 1023,
        feels_like = 279.49, dew_point = 279.88,
        clouds = 100, dt = 1716987600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716987600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:43|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:43|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:43|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:43|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:43|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:43|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:43|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:43|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:43|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716984000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    80,
    0,
    3.09,
    280.52,
    1023,
    278.44,
    279.46,
    100,
    1716984000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 80, wind_gust = 0,
        wind_speed = 3.09, temp = 280.52,
        pressure = 1023,
        feels_like = 278.44, dew_point = 279.46,
        clouds = 100, dt = 1716984000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716984000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:43|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716984000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    80,
    0,
    3.09,
    280.52,
    1023,
    278.44,
    279.46,
    100,
    1716984000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 80, wind_gust = 0,
        wind_speed = 3.09, temp = 280.52,
        pressure = 1023,
        feels_like = 278.44, dew_point = 279.46,
        clouds = 100, dt = 1716984000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716984000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:43|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:43|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:43|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:43|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:43|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:43|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:43|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:43|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:43|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716980400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    1.54,
    280.55,
    1022,
    279.79,
    279.18,
    75,
    1716980400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 1.54, temp = 280.55,
        pressure = 1022,
        feels_like = 279.79, dew_point = 279.18,
        clouds = 75, dt = 1716980400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716980400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:43|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716980400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    1.54,
    280.55,
    1022,
    279.79,
    279.18,
    75,
    1716980400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 1.54, temp = 280.55,
        pressure = 1022,
        feels_like = 279.79, dew_point = 279.18,
        clouds = 75, dt = 1716980400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716980400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:43|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:43|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:43|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:43|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:43|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:43|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:43|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:43|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:43|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716976800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    0,
    0,
    1.03,
    280.71,
    1022,
    280.71,
    278.85,
    20,
    1716976800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 1.03, temp = 280.71,
        pressure = 1022,
        feels_like = 280.71, dew_point = 278.85,
        clouds = 20, dt = 1716976800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716976800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:43|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716976800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    0,
    0,
    1.03,
    280.71,
    1022,
    280.71,
    278.85,
    20,
    1716976800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 1.03, temp = 280.71,
        pressure = 1022,
        feels_like = 280.71, dew_point = 278.85,
        clouds = 20, dt = 1716976800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716976800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:43|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:43|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:43|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:43|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:43|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:43|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:43|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:43|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:43|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716973200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    3.09,
    281.63,
    1022,
    279.78,
    279.26,
    20,
    1716973200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 3.09, temp = 281.63,
        pressure = 1022,
        feels_like = 279.78, dew_point = 279.26,
        clouds = 20, dt = 1716973200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716973200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:43|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716973200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    3.09,
    281.63,
    1022,
    279.78,
    279.26,
    20,
    1716973200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 3.09, temp = 281.63,
        pressure = 1022,
        feels_like = 279.78, dew_point = 279.26,
        clouds = 20, dt = 1716973200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716973200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:43|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:43|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:43|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:43|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:43|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:43|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:43|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:43|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:43|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:43|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:43|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:44|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716969600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    4.63,
    282.11,
    1022,
    279.59,
    279.56,
    20,
    1716969600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 4.63, temp = 282.11,
        pressure = 1022,
        feels_like = 279.59, dew_point = 279.56,
        clouds = 20, dt = 1716969600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716969600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:44|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716969600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    4.63,
    282.11,
    1022,
    279.59,
    279.56,
    20,
    1716969600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 4.63, temp = 282.11,
        pressure = 1022,
        feels_like = 279.59, dew_point = 279.56,
        clouds = 20, dt = 1716969600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716969600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:44|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:44|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:44|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:44|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:44|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:44|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:44|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:44|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:44|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:44|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:44|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:44|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:44|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:44|   1.4|  0.0|INFORM|wind_gust
2024-05-30 15:36:44|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:44|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716966000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    260,
    8.23,
    5.66,
    282.91,
    1021,
    280.2,
    279.63,
    20,
    1716966000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 260, wind_gust = 8.23,
        wind_speed = 5.66, temp = 282.91,
        pressure = 1021,
        feels_like = 280.2, dew_point = 279.63,
        clouds = 20, dt = 1716966000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716966000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:44|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716966000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    260,
    8.23,
    5.66,
    282.91,
    1021,
    280.2,
    279.63,
    20,
    1716966000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 260, wind_gust = 8.23,
        wind_speed = 5.66, temp = 282.91,
        pressure = 1021,
        feels_like = 280.2, dew_point = 279.63,
        clouds = 20, dt = 1716966000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716966000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:44|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:44|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:44|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:44|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:44|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:44|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:44|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:44|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:44|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:44|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:44|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:44|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:44|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:44|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:44|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716962400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    6.17,
    283.41,
    1021,
    282.45,
    279.18,
    20,
    1716962400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 6.17, temp = 283.41,
        pressure = 1021,
        feels_like = 282.45, dew_point = 279.18,
        clouds = 20, dt = 1716962400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716962400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:44|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716962400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    6.17,
    283.41,
    1021,
    282.45,
    279.18,
    20,
    1716962400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 6.17, temp = 283.41,
        pressure = 1021,
        feels_like = 282.45, dew_point = 279.18,
        clouds = 20, dt = 1716962400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716962400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:44|   1.4|  0.0|INFORM|dt
2024-05-30 15:36:44|   1.4|  0.0|INFORM|sunrise
2024-05-30 15:36:44|   1.4|  0.0|INFORM|sunset
2024-05-30 15:36:44|   1.4|  0.0|INFORM|temp
2024-05-30 15:36:44|   1.4|  0.0|INFORM|feels_like
2024-05-30 15:36:44|   1.4|  0.0|INFORM|pressure
2024-05-30 15:36:44|   1.4|  0.0|INFORM|humidity
2024-05-30 15:36:44|   1.4|  0.0|INFORM|dew_point
2024-05-30 15:36:44|   1.4|  0.0|INFORM|uvi
2024-05-30 15:36:44|   1.4|  0.0|INFORM|clouds
2024-05-30 15:36:44|   1.4|  0.0|INFORM|visibility
2024-05-30 15:36:44|   1.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:44|   1.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:44|   1.4|  0.0|INFORM|weather
2024-05-30 15:36:44|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716958800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    7.2,
    284.62,
    1021,
    283.65,
    279.35,
    75,
    1716958800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 7.2, temp = 284.62,
        pressure = 1021,
        feels_like = 283.65, dew_point = 279.35,
        clouds = 75, dt = 1716958800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716958800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:44|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716958800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    7.2,
    284.62,
    1021,
    283.65,
    279.35,
    75,
    1716958800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 7.2, temp = 284.62,
        pressure = 1021,
        feels_like = 283.65, dew_point = 279.35,
        clouds = 75, dt = 1716958800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716958800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:44|   1.5|  0.1|INFORM|dt
2024-05-30 15:36:44|   1.5|  0.0|INFORM|sunrise
2024-05-30 15:36:44|   1.5|  0.0|INFORM|sunset
2024-05-30 15:36:44|   1.5|  0.0|INFORM|temp
2024-05-30 15:36:44|   1.5|  0.0|INFORM|feels_like
2024-05-30 15:36:44|   1.5|  0.0|INFORM|pressure
2024-05-30 15:36:44|   1.5|  0.0|INFORM|humidity
2024-05-30 15:36:44|   1.5|  0.0|INFORM|dew_point
2024-05-30 15:36:44|   1.5|  0.0|INFORM|uvi
2024-05-30 15:36:44|   1.5|  0.0|INFORM|clouds
2024-05-30 15:36:44|   1.5|  0.0|INFORM|visibility
2024-05-30 15:36:44|   1.5|  0.0|INFORM|wind_speed
2024-05-30 15:36:44|   1.5|  0.0|INFORM|wind_deg
2024-05-30 15:36:44|   1.5|  0.0|INFORM|weather
2024-05-30 15:36:44|   1.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716955200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    240,
    0,
    7.2,
    284.94,
    1020,
    284.05,
    280.06,
    20,
    1716955200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 7.2, temp = 284.94,
        pressure = 1020,
        feels_like = 284.05, dew_point = 280.06,
        clouds = 20, dt = 1716955200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716955200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:44|   1.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716955200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    240,
    0,
    7.2,
    284.94,
    1020,
    284.05,
    280.06,
    20,
    1716955200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 7.2, temp = 284.94,
        pressure = 1020,
        feels_like = 284.05, dew_point = 280.06,
        clouds = 20, dt = 1716955200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716955200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:44|   1.5|  0.0|INFORM|dt
2024-05-30 15:36:44|   1.5|  0.0|INFORM|sunrise
2024-05-30 15:36:44|   1.5|  0.0|INFORM|sunset
2024-05-30 15:36:44|   1.5|  0.0|INFORM|temp
2024-05-30 15:36:44|   1.5|  0.0|INFORM|feels_like
2024-05-30 15:36:44|   1.5|  0.0|INFORM|pressure
2024-05-30 15:36:44|   1.5|  0.0|INFORM|humidity
2024-05-30 15:36:44|   1.5|  0.0|INFORM|dew_point
2024-05-30 15:36:44|   1.5|  0.0|INFORM|uvi
2024-05-30 15:36:44|   1.5|  0.0|INFORM|clouds
2024-05-30 15:36:44|   1.5|  0.0|INFORM|visibility
2024-05-30 15:36:44|   1.5|  0.0|INFORM|wind_speed
2024-05-30 15:36:44|   1.5|  0.0|INFORM|wind_deg
2024-05-30 15:36:44|   1.5|  0.0|INFORM|weather
2024-05-30 15:36:45|   1.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716951600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    220,
    0,
    7.72,
    286.14,
    1019,
    285.3,
    280.59,
    75,
    1716951600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 7.72, temp = 286.14,
        pressure = 1019,
        feels_like = 285.3, dew_point = 280.59,
        clouds = 75, dt = 1716951600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716951600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:45|   1.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716951600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    220,
    0,
    7.72,
    286.14,
    1019,
    285.3,
    280.59,
    75,
    1716951600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 7.72, temp = 286.14,
        pressure = 1019,
        feels_like = 285.3, dew_point = 280.59,
        clouds = 75, dt = 1716951600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716951600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:45|   1.5|  0.0|INFORM|PutActualWeather (QueryFactory): 44 input initiators processed
2024-05-30 15:36:45|   1.5|  0.0|INFORM|dt
2024-05-30 15:36:45|   1.5|  0.0|INFORM|sunrise
2024-05-30 15:36:45|   1.5|  0.0|INFORM|sunset
2024-05-30 15:36:45|   1.5|  0.0|INFORM|temp
2024-05-30 15:36:45|   1.5|  0.0|INFORM|feels_like
2024-05-30 15:36:45|   1.5|  0.0|INFORM|pressure
2024-05-30 15:36:45|   1.5|  0.0|INFORM|humidity
2024-05-30 15:36:45|   1.5|  0.0|INFORM|dew_point
2024-05-30 15:36:45|   1.5|  0.0|INFORM|uvi
2024-05-30 15:36:45|   1.5|  0.0|INFORM|clouds
2024-05-30 15:36:45|   1.5|  0.0|INFORM|visibility
2024-05-30 15:36:45|   1.5|  0.0|INFORM|wind_speed
2024-05-30 15:36:45|   1.5|  0.0|INFORM|wind_deg
2024-05-30 15:36:45|   1.5|  0.0|INFORM|weather
2024-05-30 15:36:45|   1.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716948000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.56,
    10000,
    230,
    0,
    7.72,
    286.89,
    1019,
    286.1,
    281.1,
    20,
    1716948000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.56, visibility = 10000,
        wind_deg = 230, wind_gust = 0,
        wind_speed = 7.72, temp = 286.89,
        pressure = 1019,
        feels_like = 286.1, dew_point = 281.1,
        clouds = 20, dt = 1716948000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716948000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:45|   1.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716948000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.56,
    10000,
    230,
    0,
    7.72,
    286.89,
    1019,
    286.1,
    281.1,
    20,
    1716948000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.56, visibility = 10000,
        wind_deg = 230, wind_gust = 0,
        wind_speed = 7.72, temp = 286.89,
        pressure = 1019,
        feels_like = 286.1, dew_point = 281.1,
        clouds = 20, dt = 1716948000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1716948000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:45|   1.5|  0.0|INFORM|dt
2024-05-30 15:36:45|   1.5|  0.0|INFORM|sunrise
2024-05-30 15:36:45|   1.5|  0.0|INFORM|sunset
2024-05-30 15:36:45|   1.5|  0.0|INFORM|temp
2024-05-30 15:36:45|   1.5|  0.0|INFORM|feels_like
2024-05-30 15:36:45|   1.5|  0.0|INFORM|pressure
2024-05-30 15:36:45|   1.5|  0.0|INFORM|humidity
2024-05-30 15:36:45|   1.5|  0.0|INFORM|dew_point
2024-05-30 15:36:45|   1.5|  0.0|INFORM|uvi
2024-05-30 15:36:45|   1.5|  0.0|INFORM|clouds
2024-05-30 15:36:45|   1.5|  0.0|INFORM|visibility
2024-05-30 15:36:45|   1.5|  0.0|INFORM|wind_speed
2024-05-30 15:36:45|   1.5|  0.0|INFORM|wind_deg
2024-05-30 15:36:45|   1.5|  0.0|INFORM|weather
2024-05-30 15:36:45|   1.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716944400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.29,
    10000,
    200,
    0,
    6.17,
    287.52,
    1018,
    286.68,
    280.81,
    75,
    1716944400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.29, visibility = 10000,
        wind_deg = 200, wind_gust = 0,
        wind_speed = 6.17, temp = 287.52,
        pressure = 1018,
        feels_like = 286.68, dew_point = 280.81,
        clouds = 75, dt = 1716944400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716944400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:45|   1.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716944400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.29,
    10000,
    200,
    0,
    6.17,
    287.52,
    1018,
    286.68,
    280.81,
    75,
    1716944400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.29, visibility = 10000,
        wind_deg = 200, wind_gust = 0,
        wind_speed = 6.17, temp = 287.52,
        pressure = 1018,
        feels_like = 286.68, dew_point = 280.81,
        clouds = 75, dt = 1716944400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716944400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:45|   1.5|  0.0|INFORM|dt
2024-05-30 15:36:45|   1.5|  0.0|INFORM|sunrise
2024-05-30 15:36:45|   1.5|  0.0|INFORM|sunset
2024-05-30 15:36:45|   1.5|  0.0|INFORM|temp
2024-05-30 15:36:45|   1.5|  0.0|INFORM|feels_like
2024-05-30 15:36:45|   1.5|  0.0|INFORM|pressure
2024-05-30 15:36:45|   1.5|  0.0|INFORM|humidity
2024-05-30 15:36:45|   1.5|  0.0|INFORM|dew_point
2024-05-30 15:36:45|   1.5|  0.0|INFORM|uvi
2024-05-30 15:36:45|   1.5|  0.0|INFORM|clouds
2024-05-30 15:36:45|   1.5|  0.0|INFORM|visibility
2024-05-30 15:36:45|   1.5|  0.0|INFORM|wind_speed
2024-05-30 15:36:45|   1.5|  0.0|INFORM|wind_deg
2024-05-30 15:36:45|   1.5|  0.0|INFORM|weather
2024-05-30 15:36:45|   1.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716940800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.67,
    10000,
    210,
    0,
    5.14,
    288.24,
    1018,
    287.48,
    281.49,
    75,
    1716940800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.67, visibility = 10000,
        wind_deg = 210, wind_gust = 0,
        wind_speed = 5.14, temp = 288.24,
        pressure = 1018,
        feels_like = 287.48, dew_point = 281.49,
        clouds = 75, dt = 1716940800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716940800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:45|   1.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716940800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.67,
    10000,
    210,
    0,
    5.14,
    288.24,
    1018,
    287.48,
    281.49,
    75,
    1716940800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.67, visibility = 10000,
        wind_deg = 210, wind_gust = 0,
        wind_speed = 5.14, temp = 288.24,
        pressure = 1018,
        feels_like = 287.48, dew_point = 281.49,
        clouds = 75, dt = 1716940800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716940800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:45|   1.5|  0.0|INFORM|dt
2024-05-30 15:36:45|   1.5|  0.0|INFORM|sunrise
2024-05-30 15:36:45|   1.5|  0.0|INFORM|sunset
2024-05-30 15:36:45|   1.5|  0.0|INFORM|temp
2024-05-30 15:36:45|   1.5|  0.0|INFORM|feels_like
2024-05-30 15:36:45|   1.5|  0.0|INFORM|pressure
2024-05-30 15:36:45|   1.5|  0.0|INFORM|humidity
2024-05-30 15:36:45|   1.5|  0.0|INFORM|dew_point
2024-05-30 15:36:45|   1.5|  0.0|INFORM|uvi
2024-05-30 15:36:45|   1.5|  0.0|INFORM|clouds
2024-05-30 15:36:45|   1.5|  0.0|INFORM|visibility
2024-05-30 15:36:45|   1.5|  0.0|INFORM|wind_speed
2024-05-30 15:36:45|   1.5|  0.0|INFORM|wind_deg
2024-05-30 15:36:45|   1.5|  0.0|INFORM|weather
2024-05-30 15:36:45|   1.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716937200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.54,
    10000,
    220,
    0,
    6.69,
    287.57,
    1018,
    287.03,
    283.2,
    75,
    1716937200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.54, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 6.69, temp = 287.57,
        pressure = 1018,
        feels_like = 287.03, dew_point = 283.2,
        clouds = 75, dt = 1716937200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716937200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:46|   1.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716937200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.54,
    10000,
    220,
    0,
    6.69,
    287.57,
    1018,
    287.03,
    283.2,
    75,
    1716937200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.54, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 6.69, temp = 287.57,
        pressure = 1018,
        feels_like = 287.03, dew_point = 283.2,
        clouds = 75, dt = 1716937200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716937200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:46|   1.5|  0.0|INFORM|dt
2024-05-30 15:36:46|   1.5|  0.0|INFORM|sunrise
2024-05-30 15:36:46|   1.5|  0.0|INFORM|sunset
2024-05-30 15:36:46|   1.5|  0.0|INFORM|temp
2024-05-30 15:36:46|   1.5|  0.0|INFORM|feels_like
2024-05-30 15:36:46|   1.5|  0.0|INFORM|pressure
2024-05-30 15:36:46|   1.5|  0.0|INFORM|humidity
2024-05-30 15:36:46|   1.5|  0.0|INFORM|dew_point
2024-05-30 15:36:46|   1.5|  0.0|INFORM|uvi
2024-05-30 15:36:46|   1.5|  0.0|INFORM|clouds
2024-05-30 15:36:46|   1.5|  0.0|INFORM|visibility
2024-05-30 15:36:46|   1.5|  0.0|INFORM|wind_speed
2024-05-30 15:36:46|   1.5|  0.0|INFORM|wind_deg
2024-05-30 15:36:46|   1.5|  0.0|INFORM|weather
2024-05-30 15:36:46|   1.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716933600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.65,
    10000,
    150,
    0,
    5.14,
    286.2,
    1018,
    285.83,
    284.09,
    100,
    1716933600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.65, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 5.14, temp = 286.2,
        pressure = 1018,
        feels_like = 285.83, dew_point = 284.09,
        clouds = 100, dt = 1716933600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716933600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:46|   1.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716933600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.65,
    10000,
    150,
    0,
    5.14,
    286.2,
    1018,
    285.83,
    284.09,
    100,
    1716933600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.65, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 5.14, temp = 286.2,
        pressure = 1018,
        feels_like = 285.83, dew_point = 284.09,
        clouds = 100, dt = 1716933600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716933600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:46|   1.5|  0.0|INFORM|dt
2024-05-30 15:36:46|   1.5|  0.0|INFORM|sunrise
2024-05-30 15:36:46|   1.5|  0.0|INFORM|sunset
2024-05-30 15:36:46|   1.5|  0.0|INFORM|temp
2024-05-30 15:36:46|   1.5|  0.0|INFORM|feels_like
2024-05-30 15:36:46|   1.5|  0.0|INFORM|pressure
2024-05-30 15:36:46|   1.5|  0.0|INFORM|humidity
2024-05-30 15:36:46|   1.5|  0.0|INFORM|dew_point
2024-05-30 15:36:46|   1.5|  0.0|INFORM|uvi
2024-05-30 15:36:46|   1.5|  0.0|INFORM|clouds
2024-05-30 15:36:46|   1.5|  0.0|INFORM|visibility
2024-05-30 15:36:46|   1.5|  0.0|INFORM|wind_speed
2024-05-30 15:36:46|   1.5|  0.0|INFORM|wind_deg
2024-05-30 15:36:46|   1.5|  0.0|INFORM|weather
2024-05-30 15:36:46|   1.5|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716930000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.59,
    10000,
    150,
    0,
    6.17,
    285.32,
    1018,
    285.02,
    284.22,
    100,
    1716930000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.59, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 6.17, temp = 285.32,
        pressure = 1018,
        feels_like = 285.02, dew_point = 284.22,
        clouds = 100, dt = 1716930000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716930000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:46|   1.5|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716930000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.59,
    10000,
    150,
    0,
    6.17,
    285.32,
    1018,
    285.02,
    284.22,
    100,
    1716930000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.59, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 6.17, temp = 285.32,
        pressure = 1018,
        feels_like = 285.02, dew_point = 284.22,
        clouds = 100, dt = 1716930000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716930000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:46|   1.8|  0.3|INFORM|CallCurrentWeather (HTTPFactory): [56]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 467 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [56]: HTTP Download: received 467 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [56]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 467 bytes, DNS lookup time: 0 ms, total transfer time: 309 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [53]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 406 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [53]: HTTP Download: received 406 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [53]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 406 bytes, DNS lookup time: 0 ms, total transfer time: 309 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [67]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [67]: HTTP Download: received 391 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [67]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 310 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [64]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 389 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [64]: HTTP Download: received 389 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [68]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [68]: HTTP Download: received 393 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [64]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 389 bytes, DNS lookup time: 0 ms, total transfer time: 312 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [68]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 311 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [58]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 462 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [58]: HTTP Download: received 462 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [58]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 462 bytes, DNS lookup time: 0 ms, total transfer time: 313 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [60]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [60]: HTTP Download: received 390 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [60]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 314 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [52]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 406 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [52]: HTTP Download: received 406 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [52]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 406 bytes, DNS lookup time: 0 ms, total transfer time: 315 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [54]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 406 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [54]: HTTP Download: received 406 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [54]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 406 bytes, DNS lookup time: 0 ms, total transfer time: 315 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [51]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [51]: HTTP Download: received 390 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [61]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 389 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [61]: HTTP Download: received 389 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [51]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 316 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [61]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 389 bytes, DNS lookup time: 0 ms, total transfer time: 315 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|dt
2024-05-30 15:36:46|   1.8|  0.0|INFORM|sunrise
2024-05-30 15:36:46|   1.8|  0.0|INFORM|sunset
2024-05-30 15:36:46|   1.8|  0.0|INFORM|temp
2024-05-30 15:36:46|   1.8|  0.0|INFORM|feels_like
2024-05-30 15:36:46|   1.8|  0.0|INFORM|pressure
2024-05-30 15:36:46|   1.8|  0.0|INFORM|humidity
2024-05-30 15:36:46|   1.8|  0.0|INFORM|dew_point
2024-05-30 15:36:46|   1.8|  0.0|INFORM|uvi
2024-05-30 15:36:46|   1.8|  0.0|INFORM|clouds
2024-05-30 15:36:46|   1.8|  0.0|INFORM|visibility
2024-05-30 15:36:46|   1.8|  0.0|INFORM|wind_speed
2024-05-30 15:36:46|   1.8|  0.0|INFORM|wind_deg
2024-05-30 15:36:46|   1.8|  0.0|INFORM|weather
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [55]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 466 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [55]: HTTP Download: received 466 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [57]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 466 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [57]: HTTP Download: received 466 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [55]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 466 bytes, DNS lookup time: 0 ms, total transfer time: 317 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [57]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 466 bytes, DNS lookup time: 0 ms, total transfer time: 317 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [63]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [63]: HTTP Download: received 390 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [65]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [65]: HTTP Download: received 391 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [63]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 317 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [65]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 317 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [59]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [59]: HTTP Download: received 391 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [59]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 319 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [69]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 409 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [69]: HTTP Download: received 409 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [69]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 409 bytes, DNS lookup time: 0 ms, total transfer time: 322 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [66]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [66]: HTTP Download: received 388 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [66]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 323 ms
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [62]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [62]: HTTP Download: received 390 bytes
2024-05-30 15:36:46|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [62]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 326 ms
2024-05-30 15:36:46|   1.9|  0.1|INFORM|CallCurrentWeather (HTTPFactory): [72]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [72]: HTTP Download: received 394 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [72]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 342 ms
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [71]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [71]: HTTP Download: received 394 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [71]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 342 ms
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [75]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [75]: HTTP Download: received 394 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [75]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 343 ms
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [74]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 406 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [74]: HTTP Download: received 406 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [74]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 406 bytes, DNS lookup time: 0 ms, total transfer time: 355 ms
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [70]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [70]: HTTP Download: received 393 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [70]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 356 ms
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [73]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [73]: HTTP Download: received 394 bytes
2024-05-30 15:36:46|   1.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [73]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 359 ms
2024-05-30 15:36:46|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716926400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.79,
    10000,
    140,
    0,
    5.66,
    285,
    1018,
    284.7,
    284.07,
    100,
    1716926400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.79, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 5.66, temp = 285,
        pressure = 1018,
        feels_like = 284.7, dew_point = 284.07,
        clouds = 100, dt = 1716926400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716926400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:46|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716926400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.79,
    10000,
    140,
    0,
    5.66,
    285,
    1018,
    284.7,
    284.07,
    100,
    1716926400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.79, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 5.66, temp = 285,
        pressure = 1018,
        feels_like = 284.7, dew_point = 284.07,
        clouds = 100, dt = 1716926400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716926400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:46|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:46|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:46|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:46|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:46|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:46|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:46|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:46|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:46|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:46|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:46|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:46|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:46|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:46|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:46|   1.9|  0.0|INFORM|rain
2024-05-30 15:36:47|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716922800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.66,
    10000,
    150,
    0,
    6.17,
    284.92,
    1018,
    284.61,
    283.99,
    100,
    1716922800,
    0,
    0.24,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.66, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 6.17, temp = 284.92,
        pressure = 1018,
        feels_like = 284.61, dew_point = 283.99,
        clouds = 100, dt = 1716922800, snow = 0,
        rain = 0.24, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1716922800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:47|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716922800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.66,
    10000,
    150,
    0,
    6.17,
    284.92,
    1018,
    284.61,
    283.99,
    100,
    1716922800,
    0,
    0.24,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.66, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 6.17, temp = 284.92,
        pressure = 1018,
        feels_like = 284.61, dew_point = 283.99,
        clouds = 100, dt = 1716922800, snow = 0,
        rain = 0.24, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1716922800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:47|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:47|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:47|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:47|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:47|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:47|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:47|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:47|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:47|   1.9|  0.0|INFORM|rain
2024-05-30 15:36:47|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716919200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.42,
    10000,
    150,
    0,
    6.69,
    284.58,
    1017,
    284.26,
    283.81,
    100,
    1716919200,
    0,
    0.13,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.42, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 6.69, temp = 284.58,
        pressure = 1017,
        feels_like = 284.26, dew_point = 283.81,
        clouds = 100, dt = 1716919200, snow = 0,
        rain = 0.13, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1716919200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:47|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716919200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.42,
    10000,
    150,
    0,
    6.69,
    284.58,
    1017,
    284.26,
    283.81,
    100,
    1716919200,
    0,
    0.13,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.42, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 6.69, temp = 284.58,
        pressure = 1017,
        feels_like = 284.26, dew_point = 283.81,
        clouds = 100, dt = 1716919200, snow = 0,
        rain = 0.13, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1716919200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:47|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:47|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:47|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:47|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:47|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:47|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:47|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:47|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:47|   1.9|  0.0|INFORM|rain
2024-05-30 15:36:47|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716915600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.28,
    10000,
    160,
    0,
    5.66,
    284.54,
    1017,
    284.24,
    283.93,
    100,
    1716915600,
    0,
    0.56,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.28, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 5.66, temp = 284.54,
        pressure = 1017,
        feels_like = 284.24, dew_point = 283.93,
        clouds = 100, dt = 1716915600, snow = 0,
        rain = 0.56, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1716915600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:47|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716915600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.28,
    10000,
    160,
    0,
    5.66,
    284.54,
    1017,
    284.24,
    283.93,
    100,
    1716915600,
    0,
    0.56,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.28, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 5.66, temp = 284.54,
        pressure = 1017,
        feels_like = 284.24, dew_point = 283.93,
        clouds = 100, dt = 1716915600, snow = 0,
        rain = 0.56, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1716915600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:47|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:47|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:47|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:47|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:47|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:47|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:47|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:47|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:47|   1.9|  0.0|INFORM|rain
2024-05-30 15:36:47|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716912000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.19,
    9656,
    160,
    0,
    5.14,
    284.5,
    1017,
    284.22,
    284.04,
    100,
    1716912000,
    0,
    1.33,
    'Rain',
    'moderate rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.19, visibility = 9656,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 5.14, temp = 284.5,
        pressure = 1017,
        feels_like = 284.22, dew_point = 284.04,
        clouds = 100, dt = 1716912000, snow = 0,
        rain = 1.33, weather_main = 'Rain', weather_desc = 'moderate rain'
    WHERE dt = 1716912000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:47|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716912000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.19,
    9656,
    160,
    0,
    5.14,
    284.5,
    1017,
    284.22,
    284.04,
    100,
    1716912000,
    0,
    1.33,
    'Rain',
    'moderate rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.19, visibility = 9656,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 5.14, temp = 284.5,
        pressure = 1017,
        feels_like = 284.22, dew_point = 284.04,
        clouds = 100, dt = 1716912000, snow = 0,
        rain = 1.33, weather_main = 'Rain', weather_desc = 'moderate rain'
    WHERE dt = 1716912000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:47|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:47|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:47|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:47|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:47|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:47|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:47|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:47|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:47|   1.9|  0.0|INFORM|rain
2024-05-30 15:36:47|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716908400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.07,
    9656,
    140,
    0,
    4.12,
    283.94,
    1017,
    283.61,
    283.48,
    100,
    1716908400,
    0,
    1.15,
    'Mist',
    'mist'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.07, visibility = 9656,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 283.94,
        pressure = 1017,
        feels_like = 283.61, dew_point = 283.48,
        clouds = 100, dt = 1716908400, snow = 0,
        rain = 1.15, weather_main = 'Mist', weather_desc = 'mist'
    WHERE dt = 1716908400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:47|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716908400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.07,
    9656,
    140,
    0,
    4.12,
    283.94,
    1017,
    283.61,
    283.48,
    100,
    1716908400,
    0,
    1.15,
    'Mist',
    'mist'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.07, visibility = 9656,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 283.94,
        pressure = 1017,
        feels_like = 283.61, dew_point = 283.48,
        clouds = 100, dt = 1716908400, snow = 0,
        rain = 1.15, weather_main = 'Mist', weather_desc = 'mist'
    WHERE dt = 1716908400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:47|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:47|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:47|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:47|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:47|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:47|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:47|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:47|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:47|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:47|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:47|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:47|   1.9|  0.0|INFORM|rain
2024-05-30 15:36:47|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716904800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.03,
    4828,
    210,
    0,
    1.54,
    284.02,
    1017,
    283.7,
    283.56,
    100,
    1716904800,
    0,
    1.78,
    'Rain',
    'moderate rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.03, visibility = 4828,
        wind_deg = 210, wind_gust = 0,
        wind_speed = 1.54, temp = 284.02,
        pressure = 1017,
        feels_like = 283.7, dew_point = 283.56,
        clouds = 100, dt = 1716904800, snow = 0,
        rain = 1.78, weather_main = 'Rain', weather_desc = 'moderate rain'
    WHERE dt = 1716904800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:48|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716904800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.03,
    4828,
    210,
    0,
    1.54,
    284.02,
    1017,
    283.7,
    283.56,
    100,
    1716904800,
    0,
    1.78,
    'Rain',
    'moderate rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.03, visibility = 4828,
        wind_deg = 210, wind_gust = 0,
        wind_speed = 1.54, temp = 284.02,
        pressure = 1017,
        feels_like = 283.7, dew_point = 283.56,
        clouds = 100, dt = 1716904800, snow = 0,
        rain = 1.78, weather_main = 'Rain', weather_desc = 'moderate rain'
    WHERE dt = 1716904800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:48|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:48|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:48|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:48|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:48|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:48|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:48|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:48|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:48|   1.9|  0.0|INFORM|rain
2024-05-30 15:36:48|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716901200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.01,
    9656,
    90,
    0,
    1.03,
    284.1,
    1017,
    283.71,
    283.17,
    100,
    1716901200,
    0,
    0.65,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.01, visibility = 9656,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 1.03, temp = 284.1,
        pressure = 1017,
        feels_like = 283.71, dew_point = 283.17,
        clouds = 100, dt = 1716901200, snow = 0,
        rain = 0.65, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1716901200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:48|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716901200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.01,
    9656,
    90,
    0,
    1.03,
    284.1,
    1017,
    283.71,
    283.17,
    100,
    1716901200,
    0,
    0.65,
    'Rain',
    'light rain'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.01, visibility = 9656,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 1.03, temp = 284.1,
        pressure = 1017,
        feels_like = 283.71, dew_point = 283.17,
        clouds = 100, dt = 1716901200, snow = 0,
        rain = 0.65, weather_main = 'Rain', weather_desc = 'light rain'
    WHERE dt = 1716901200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:48|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:48|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:48|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:48|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:48|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:48|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:48|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:48|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:48|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716897600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    1.54,
    284.54,
    1017,
    284.14,
    283.29,
    100,
    1716897600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 1.54, temp = 284.54,
        pressure = 1017,
        feels_like = 284.14, dew_point = 283.29,
        clouds = 100, dt = 1716897600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716897600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:48|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716897600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    1.54,
    284.54,
    1017,
    284.14,
    283.29,
    100,
    1716897600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 1.54, temp = 284.54,
        pressure = 1017,
        feels_like = 284.14, dew_point = 283.29,
        clouds = 100, dt = 1716897600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716897600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:48|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:48|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:48|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:48|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:48|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:48|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:48|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:48|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:48|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716894000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    30,
    0,
    2.57,
    284.55,
    1017,
    284.04,
    282.64,
    100,
    1716894000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 30, wind_gust = 0,
        wind_speed = 2.57, temp = 284.55,
        pressure = 1017,
        feels_like = 284.04, dew_point = 282.64,
        clouds = 100, dt = 1716894000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716894000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:48|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716894000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    30,
    0,
    2.57,
    284.55,
    1017,
    284.04,
    282.64,
    100,
    1716894000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 30, wind_gust = 0,
        wind_speed = 2.57, temp = 284.55,
        pressure = 1017,
        feels_like = 284.04, dew_point = 282.64,
        clouds = 100, dt = 1716894000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716894000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:48|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:48|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:48|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:48|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:48|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:48|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:48|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:48|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:48|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716890400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    30,
    0,
    2.57,
    284.7,
    1017,
    284.21,
    282.78,
    100,
    1716890400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 30, wind_gust = 0,
        wind_speed = 2.57, temp = 284.7,
        pressure = 1017,
        feels_like = 284.21, dew_point = 282.78,
        clouds = 100, dt = 1716890400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716890400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:48|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716890400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    30,
    0,
    2.57,
    284.7,
    1017,
    284.21,
    282.78,
    100,
    1716890400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 30, wind_gust = 0,
        wind_speed = 2.57, temp = 284.7,
        pressure = 1017,
        feels_like = 284.21, dew_point = 282.78,
        clouds = 100, dt = 1716890400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716890400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:48|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:48|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:48|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:48|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:48|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:48|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:48|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:48|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:48|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:48|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:48|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:48|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716886800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    50,
    0,
    2.57,
    284.71,
    1017,
    284.22,
    282.79,
    100,
    1716886800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 50, wind_gust = 0,
        wind_speed = 2.57, temp = 284.71,
        pressure = 1017,
        feels_like = 284.22, dew_point = 282.79,
        clouds = 100, dt = 1716886800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716886800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:49|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716886800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    50,
    0,
    2.57,
    284.71,
    1017,
    284.22,
    282.79,
    100,
    1716886800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 50, wind_gust = 0,
        wind_speed = 2.57, temp = 284.71,
        pressure = 1017,
        feels_like = 284.22, dew_point = 282.79,
        clouds = 100, dt = 1716886800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716886800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:49|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:49|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:49|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:49|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:49|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:49|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:49|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:49|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:49|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716883200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    20,
    0,
    2.06,
    284.85,
    1018,
    284.37,
    282.93,
    100,
    1716883200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 20, wind_gust = 0,
        wind_speed = 2.06, temp = 284.85,
        pressure = 1018,
        feels_like = 284.37, dew_point = 282.93,
        clouds = 100, dt = 1716883200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716883200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:49|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716883200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    20,
    0,
    2.06,
    284.85,
    1018,
    284.37,
    282.93,
    100,
    1716883200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 20, wind_gust = 0,
        wind_speed = 2.06, temp = 284.85,
        pressure = 1018,
        feels_like = 284.37, dew_point = 282.93,
        clouds = 100, dt = 1716883200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716883200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:49|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:49|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:49|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:49|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:49|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:49|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:49|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:49|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:49|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716879600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    10,
    0,
    1.03,
    284.9,
    1018,
    284.43,
    282.98,
    100,
    1716879600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 10, wind_gust = 0,
        wind_speed = 1.03, temp = 284.9,
        pressure = 1018,
        feels_like = 284.43, dew_point = 282.98,
        clouds = 100, dt = 1716879600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716879600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:49|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716879600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    10,
    0,
    1.03,
    284.9,
    1018,
    284.43,
    282.98,
    100,
    1716879600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 10, wind_gust = 0,
        wind_speed = 1.03, temp = 284.9,
        pressure = 1018,
        feels_like = 284.43, dew_point = 282.98,
        clouds = 100, dt = 1716879600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716879600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:49|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:49|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:49|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:49|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:49|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:49|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:49|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:49|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:49|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716876000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    310,
    0,
    1.54,
    284.99,
    1018,
    284.53,
    283.07,
    100,
    1716876000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 310, wind_gust = 0,
        wind_speed = 1.54, temp = 284.99,
        pressure = 1018,
        feels_like = 284.53, dew_point = 283.07,
        clouds = 100, dt = 1716876000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716876000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:49|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716876000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    310,
    0,
    1.54,
    284.99,
    1018,
    284.53,
    283.07,
    100,
    1716876000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 310, wind_gust = 0,
        wind_speed = 1.54, temp = 284.99,
        pressure = 1018,
        feels_like = 284.53, dew_point = 283.07,
        clouds = 100, dt = 1716876000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716876000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:49|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:49|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:49|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:49|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:49|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:49|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:49|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:49|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:49|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716872400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    0,
    0,
    1.03,
    285.22,
    1019,
    284.78,
    283.3,
    100,
    1716872400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 1.03, temp = 285.22,
        pressure = 1019,
        feels_like = 284.78, dew_point = 283.3,
        clouds = 100, dt = 1716872400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716872400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:49|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716872400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    0,
    0,
    1.03,
    285.22,
    1019,
    284.78,
    283.3,
    100,
    1716872400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 1.03, temp = 285.22,
        pressure = 1019,
        feels_like = 284.78, dew_point = 283.3,
        clouds = 100, dt = 1716872400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716872400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:49|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:49|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:49|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:49|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:49|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:49|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:49|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:49|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:49|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716868800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    170,
    0,
    2.57,
    286.25,
    1019,
    285.83,
    283.79,
    100,
    1716868800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 170, wind_gust = 0,
        wind_speed = 2.57, temp = 286.25,
        pressure = 1019,
        feels_like = 285.83, dew_point = 283.79,
        clouds = 100, dt = 1716868800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716868800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:49|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716868800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    170,
    0,
    2.57,
    286.25,
    1019,
    285.83,
    283.79,
    100,
    1716868800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 170, wind_gust = 0,
        wind_speed = 2.57, temp = 286.25,
        pressure = 1019,
        feels_like = 285.83, dew_point = 283.79,
        clouds = 100, dt = 1716868800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716868800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:49|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:49|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:49|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:49|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:49|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:49|   1.9|  0.0|INFORM|dew_point
2024-05-30 15:36:49|   1.9|  0.0|INFORM|uvi
2024-05-30 15:36:49|   1.9|  0.0|INFORM|clouds
2024-05-30 15:36:49|   1.9|  0.0|INFORM|visibility
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_speed
2024-05-30 15:36:49|   1.9|  0.0|INFORM|wind_deg
2024-05-30 15:36:49|   1.9|  0.0|INFORM|weather
2024-05-30 15:36:50|   1.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716865200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.05,
    10000,
    170,
    0,
    3.6,
    287.35,
    1019,
    286.94,
    284.14,
    100,
    1716865200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.05, visibility = 10000,
        wind_deg = 170, wind_gust = 0,
        wind_speed = 3.6, temp = 287.35,
        pressure = 1019,
        feels_like = 286.94, dew_point = 284.14,
        clouds = 100, dt = 1716865200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716865200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:50|   1.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716865200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.05,
    10000,
    170,
    0,
    3.6,
    287.35,
    1019,
    286.94,
    284.14,
    100,
    1716865200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.05, visibility = 10000,
        wind_deg = 170, wind_gust = 0,
        wind_speed = 3.6, temp = 287.35,
        pressure = 1019,
        feels_like = 286.94, dew_point = 284.14,
        clouds = 100, dt = 1716865200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716865200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:50|   1.9|  0.0|INFORM|PutActualWeather (QueryFactory): 68 input initiators processed
2024-05-30 15:36:50|   1.9|  0.0|INFORM|dt
2024-05-30 15:36:50|   1.9|  0.0|INFORM|sunrise
2024-05-30 15:36:50|   1.9|  0.0|INFORM|sunset
2024-05-30 15:36:50|   1.9|  0.0|INFORM|temp
2024-05-30 15:36:50|   1.9|  0.0|INFORM|feels_like
2024-05-30 15:36:50|   1.9|  0.0|INFORM|pressure
2024-05-30 15:36:50|   1.9|  0.0|INFORM|humidity
2024-05-30 15:36:50|   2.0|  0.1|INFORM|dew_point
2024-05-30 15:36:50|   2.0|  0.0|INFORM|uvi
2024-05-30 15:36:50|   2.0|  0.0|INFORM|clouds
2024-05-30 15:36:50|   2.0|  0.0|INFORM|visibility
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_speed
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_deg
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_gust
2024-05-30 15:36:50|   2.0|  0.0|INFORM|weather
2024-05-30 15:36:50|   2.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716861600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.16,
    10000,
    29,
    4.02,
    2.68,
    288.16,
    1020,
    287.7,
    283.97,
    100,
    1716861600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.16, visibility = 10000,
        wind_deg = 29, wind_gust = 4.02,
        wind_speed = 2.68, temp = 288.16,
        pressure = 1020,
        feels_like = 287.7, dew_point = 283.97,
        clouds = 100, dt = 1716861600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716861600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:50|   2.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716861600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.16,
    10000,
    29,
    4.02,
    2.68,
    288.16,
    1020,
    287.7,
    283.97,
    100,
    1716861600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.16, visibility = 10000,
        wind_deg = 29, wind_gust = 4.02,
        wind_speed = 2.68, temp = 288.16,
        pressure = 1020,
        feels_like = 287.7, dew_point = 283.97,
        clouds = 100, dt = 1716861600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716861600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:50|   2.0|  0.0|INFORM|dt
2024-05-30 15:36:50|   2.0|  0.0|INFORM|sunrise
2024-05-30 15:36:50|   2.0|  0.0|INFORM|sunset
2024-05-30 15:36:50|   2.0|  0.0|INFORM|temp
2024-05-30 15:36:50|   2.0|  0.0|INFORM|feels_like
2024-05-30 15:36:50|   2.0|  0.0|INFORM|pressure
2024-05-30 15:36:50|   2.0|  0.0|INFORM|humidity
2024-05-30 15:36:50|   2.0|  0.0|INFORM|dew_point
2024-05-30 15:36:50|   2.0|  0.0|INFORM|uvi
2024-05-30 15:36:50|   2.0|  0.0|INFORM|clouds
2024-05-30 15:36:50|   2.0|  0.0|INFORM|visibility
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_speed
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_deg
2024-05-30 15:36:50|   2.0|  0.0|INFORM|weather
2024-05-30 15:36:50|   2.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716858000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.4,
    10000,
    100,
    0,
    4.12,
    288.85,
    1020,
    288.28,
    283.19,
    100,
    1716858000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.4, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.12, temp = 288.85,
        pressure = 1020,
        feels_like = 288.28, dew_point = 283.19,
        clouds = 100, dt = 1716858000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716858000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:50|   2.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716858000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.4,
    10000,
    100,
    0,
    4.12,
    288.85,
    1020,
    288.28,
    283.19,
    100,
    1716858000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.4, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.12, temp = 288.85,
        pressure = 1020,
        feels_like = 288.28, dew_point = 283.19,
        clouds = 100, dt = 1716858000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716858000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:50|   2.0|  0.0|INFORM|dt
2024-05-30 15:36:50|   2.0|  0.0|INFORM|sunrise
2024-05-30 15:36:50|   2.0|  0.0|INFORM|sunset
2024-05-30 15:36:50|   2.0|  0.0|INFORM|temp
2024-05-30 15:36:50|   2.0|  0.0|INFORM|feels_like
2024-05-30 15:36:50|   2.0|  0.0|INFORM|pressure
2024-05-30 15:36:50|   2.0|  0.0|INFORM|humidity
2024-05-30 15:36:50|   2.0|  0.0|INFORM|dew_point
2024-05-30 15:36:50|   2.0|  0.0|INFORM|uvi
2024-05-30 15:36:50|   2.0|  0.0|INFORM|clouds
2024-05-30 15:36:50|   2.0|  0.0|INFORM|visibility
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_speed
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_deg
2024-05-30 15:36:50|   2.0|  0.0|INFORM|weather
2024-05-30 15:36:50|   2.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716854400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.85,
    10000,
    160,
    0,
    4.12,
    289.33,
    1021,
    288.81,
    283.64,
    100,
    1716854400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.85, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 4.12, temp = 289.33,
        pressure = 1021,
        feels_like = 288.81, dew_point = 283.64,
        clouds = 100, dt = 1716854400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716854400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:50|   2.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716854400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.85,
    10000,
    160,
    0,
    4.12,
    289.33,
    1021,
    288.81,
    283.64,
    100,
    1716854400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.85, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 4.12, temp = 289.33,
        pressure = 1021,
        feels_like = 288.81, dew_point = 283.64,
        clouds = 100, dt = 1716854400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716854400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:50|   2.0|  0.0|INFORM|dt
2024-05-30 15:36:50|   2.0|  0.0|INFORM|sunrise
2024-05-30 15:36:50|   2.0|  0.0|INFORM|sunset
2024-05-30 15:36:50|   2.0|  0.0|INFORM|temp
2024-05-30 15:36:50|   2.0|  0.0|INFORM|feels_like
2024-05-30 15:36:50|   2.0|  0.0|INFORM|pressure
2024-05-30 15:36:50|   2.0|  0.0|INFORM|humidity
2024-05-30 15:36:50|   2.0|  0.0|INFORM|dew_point
2024-05-30 15:36:50|   2.0|  0.0|INFORM|uvi
2024-05-30 15:36:50|   2.0|  0.0|INFORM|clouds
2024-05-30 15:36:50|   2.0|  0.0|INFORM|visibility
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_speed
2024-05-30 15:36:50|   2.0|  0.0|INFORM|wind_deg
2024-05-30 15:36:50|   2.0|  0.0|INFORM|weather
2024-05-30 15:36:50|   2.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716850800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.68,
    10000,
    140,
    0,
    4.12,
    288.93,
    1021,
    288.39,
    283.48,
    100,
    1716850800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.68, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 288.93,
        pressure = 1021,
        feels_like = 288.39, dew_point = 283.48,
        clouds = 100, dt = 1716850800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716850800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:51|   2.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716850800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.68,
    10000,
    140,
    0,
    4.12,
    288.93,
    1021,
    288.39,
    283.48,
    100,
    1716850800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.68, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 288.93,
        pressure = 1021,
        feels_like = 288.39, dew_point = 283.48,
        clouds = 100, dt = 1716850800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716850800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:51|   2.0|  0.0|INFORM|dt
2024-05-30 15:36:51|   2.0|  0.0|INFORM|sunrise
2024-05-30 15:36:51|   2.0|  0.0|INFORM|sunset
2024-05-30 15:36:51|   2.0|  0.0|INFORM|temp
2024-05-30 15:36:51|   2.0|  0.0|INFORM|feels_like
2024-05-30 15:36:51|   2.0|  0.0|INFORM|pressure
2024-05-30 15:36:51|   2.0|  0.0|INFORM|humidity
2024-05-30 15:36:51|   2.0|  0.0|INFORM|dew_point
2024-05-30 15:36:51|   2.0|  0.0|INFORM|uvi
2024-05-30 15:36:51|   2.0|  0.0|INFORM|clouds
2024-05-30 15:36:51|   2.0|  0.0|INFORM|visibility
2024-05-30 15:36:51|   2.0|  0.0|INFORM|wind_speed
2024-05-30 15:36:51|   2.0|  0.0|INFORM|wind_deg
2024-05-30 15:36:51|   2.0|  0.0|INFORM|weather
2024-05-30 15:36:51|   2.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716847200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.36,
    10000,
    150,
    0,
    4.63,
    288.33,
    1021,
    287.84,
    283.73,
    100,
    1716847200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.36, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 4.63, temp = 288.33,
        pressure = 1021,
        feels_like = 287.84, dew_point = 283.73,
        clouds = 100, dt = 1716847200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716847200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:51|   2.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716847200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.36,
    10000,
    150,
    0,
    4.63,
    288.33,
    1021,
    287.84,
    283.73,
    100,
    1716847200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.36, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 4.63, temp = 288.33,
        pressure = 1021,
        feels_like = 287.84, dew_point = 283.73,
        clouds = 100, dt = 1716847200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716847200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:51|   2.0|  0.0|INFORM|dt
2024-05-30 15:36:51|   2.0|  0.0|INFORM|sunrise
2024-05-30 15:36:51|   2.0|  0.0|INFORM|sunset
2024-05-30 15:36:51|   2.0|  0.0|INFORM|temp
2024-05-30 15:36:51|   2.0|  0.0|INFORM|feels_like
2024-05-30 15:36:51|   2.0|  0.0|INFORM|pressure
2024-05-30 15:36:51|   2.0|  0.0|INFORM|humidity
2024-05-30 15:36:51|   2.0|  0.0|INFORM|dew_point
2024-05-30 15:36:51|   2.0|  0.0|INFORM|uvi
2024-05-30 15:36:51|   2.0|  0.0|INFORM|clouds
2024-05-30 15:36:51|   2.0|  0.0|INFORM|visibility
2024-05-30 15:36:51|   2.0|  0.0|INFORM|wind_speed
2024-05-30 15:36:51|   2.0|  0.0|INFORM|wind_deg
2024-05-30 15:36:51|   2.0|  0.0|INFORM|wind_gust
2024-05-30 15:36:51|   2.0|  0.0|INFORM|weather
2024-05-30 15:36:51|   2.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716843600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.94,
    10000,
    36,
    3.58,
    2.68,
    287.77,
    1021,
    287.3,
    283.79,
    75,
    1716843600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.94, visibility = 10000,
        wind_deg = 36, wind_gust = 3.58,
        wind_speed = 2.68, temp = 287.77,
        pressure = 1021,
        feels_like = 287.3, dew_point = 283.79,
        clouds = 75, dt = 1716843600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716843600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:51|   2.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716843600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.94,
    10000,
    36,
    3.58,
    2.68,
    287.77,
    1021,
    287.3,
    283.79,
    75,
    1716843600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.94, visibility = 10000,
        wind_deg = 36, wind_gust = 3.58,
        wind_speed = 2.68, temp = 287.77,
        pressure = 1021,
        feels_like = 287.3, dew_point = 283.79,
        clouds = 75, dt = 1716843600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716843600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:51|   2.0|  0.0|INFORM|dt
2024-05-30 15:36:51|   2.0|  0.0|INFORM|sunrise
2024-05-30 15:36:51|   2.0|  0.0|INFORM|sunset
2024-05-30 15:36:51|   2.0|  0.0|INFORM|temp
2024-05-30 15:36:51|   2.0|  0.0|INFORM|feels_like
2024-05-30 15:36:51|   2.0|  0.0|INFORM|pressure
2024-05-30 15:36:51|   2.0|  0.0|INFORM|humidity
2024-05-30 15:36:51|   2.0|  0.0|INFORM|dew_point
2024-05-30 15:36:51|   2.0|  0.0|INFORM|uvi
2024-05-30 15:36:51|   2.0|  0.0|INFORM|clouds
2024-05-30 15:36:51|   2.0|  0.0|INFORM|visibility
2024-05-30 15:36:51|   2.0|  0.0|INFORM|wind_speed
2024-05-30 15:36:51|   2.0|  0.0|INFORM|wind_deg
2024-05-30 15:36:51|   2.0|  0.0|INFORM|weather
2024-05-30 15:36:51|   2.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716840000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.72,
    10000,
    160,
    0,
    3.09,
    287.34,
    1021,
    286.88,
    283.75,
    40,
    1716840000,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.72, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.09, temp = 287.34,
        pressure = 1021,
        feels_like = 286.88, dew_point = 283.75,
        clouds = 40, dt = 1716840000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1716840000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:51|   2.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716840000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.72,
    10000,
    160,
    0,
    3.09,
    287.34,
    1021,
    286.88,
    283.75,
    40,
    1716840000,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.72, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.09, temp = 287.34,
        pressure = 1021,
        feels_like = 286.88, dew_point = 283.75,
        clouds = 40, dt = 1716840000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1716840000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:52|   2.3|  0.3|INFORM|CallCurrentWeather (HTTPFactory): [77]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [77]: HTTP Download: received 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [77]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 308 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [85]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [85]: HTTP Download: received 385 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [85]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 308 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [82]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [82]: HTTP Download: received 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [82]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 310 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [91]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [91]: HTTP Download: received 390 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [91]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 314 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [81]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [81]: HTTP Download: received 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [81]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 316 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [76]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [76]: HTTP Download: received 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [76]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 318 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [79]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [79]: HTTP Download: received 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [83]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [83]: HTTP Download: received 388 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [86]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [86]: HTTP Download: received 390 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [94]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [94]: HTTP Download: received 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [79]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 318 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [83]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 317 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [86]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 317 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [94]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 317 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:52|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:52|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [89]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [89]: HTTP Download: received 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [89]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 319 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [88]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [88]: HTTP Download: received 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [88]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 319 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [78]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [78]: HTTP Download: received 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [78]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 322 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [92]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [92]: HTTP Download: received 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [92]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 323 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [90]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [90]: HTTP Download: received 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [90]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 323 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [93]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [93]: HTTP Download: received 390 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [93]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 324 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [80]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [80]: HTTP Download: received 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [80]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 326 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [84]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [84]: HTTP Download: received 390 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [84]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 328 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [87]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [87]: HTTP Download: received 391 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [87]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 330 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [96]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [96]: HTTP Download: received 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [96]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 333 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [100]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [100]: HTTP Download: received 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [100]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 334 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [99]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [99]: HTTP Download: received 394 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [99]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 340 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [95]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [95]: HTTP Download: received 393 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [95]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 343 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [98]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 395 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [98]: HTTP Download: received 395 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [98]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 395 bytes, DNS lookup time: 0 ms, total transfer time: 343 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [97]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 395 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [97]: HTTP Download: received 395 bytes
2024-05-30 15:36:52|   2.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [97]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 395 bytes, DNS lookup time: 0 ms, total transfer time: 347 ms
2024-05-30 15:36:52|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716836400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.43,
    10000,
    110,
    0,
    3.09,
    286.32,
    1021,
    285.86,
    283.5,
    100,
    1716836400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.43, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 3.09, temp = 286.32,
        pressure = 1021,
        feels_like = 285.86, dew_point = 283.5,
        clouds = 100, dt = 1716836400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716836400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:52|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716836400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.43,
    10000,
    110,
    0,
    3.09,
    286.32,
    1021,
    285.86,
    283.5,
    100,
    1716836400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.43, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 3.09, temp = 286.32,
        pressure = 1021,
        feels_like = 285.86, dew_point = 283.5,
        clouds = 100, dt = 1716836400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716836400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:52|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:52|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:52|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:52|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:52|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:52|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:52|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:52|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:52|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716832800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.31,
    10000,
    130,
    0,
    4.63,
    285.85,
    1021,
    285.45,
    283.74,
    100,
    1716832800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.31, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 285.85,
        pressure = 1021,
        feels_like = 285.45, dew_point = 283.74,
        clouds = 100, dt = 1716832800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716832800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:52|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716832800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.31,
    10000,
    130,
    0,
    4.63,
    285.85,
    1021,
    285.45,
    283.74,
    100,
    1716832800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.31, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 285.85,
        pressure = 1021,
        feels_like = 285.45, dew_point = 283.74,
        clouds = 100, dt = 1716832800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716832800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:52|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:52|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:52|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:52|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:52|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:52|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:52|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:52|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:52|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716829200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.26,
    10000,
    130,
    0,
    6.17,
    284.97,
    1021,
    284.51,
    283.05,
    100,
    1716829200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.26, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.17, temp = 284.97,
        pressure = 1021,
        feels_like = 284.51, dew_point = 283.05,
        clouds = 100, dt = 1716829200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716829200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:52|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716829200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.26,
    10000,
    130,
    0,
    6.17,
    284.97,
    1021,
    284.51,
    283.05,
    100,
    1716829200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.26, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.17, temp = 284.97,
        pressure = 1021,
        feels_like = 284.51, dew_point = 283.05,
        clouds = 100, dt = 1716829200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716829200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:52|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:52|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:52|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:52|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:52|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:52|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:52|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:52|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:52|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716825600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.15,
    10000,
    110,
    0,
    5.66,
    285.05,
    1020,
    284.62,
    283.3,
    100,
    1716825600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.15, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 5.66, temp = 285.05,
        pressure = 1020,
        feels_like = 284.62, dew_point = 283.3,
        clouds = 100, dt = 1716825600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716825600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:52|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716825600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.15,
    10000,
    110,
    0,
    5.66,
    285.05,
    1020,
    284.62,
    283.3,
    100,
    1716825600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.15, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 5.66, temp = 285.05,
        pressure = 1020,
        feels_like = 284.62, dew_point = 283.3,
        clouds = 100, dt = 1716825600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716825600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:52|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:52|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:52|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:52|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:52|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:52|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:52|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:52|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:52|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716822000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.12,
    10000,
    130,
    0,
    5.66,
    285.04,
    1020,
    284.58,
    283.12,
    100,
    1716822000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.12, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.66, temp = 285.04,
        pressure = 1020,
        feels_like = 284.58, dew_point = 283.12,
        clouds = 100, dt = 1716822000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716822000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:52|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716822000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.12,
    10000,
    130,
    0,
    5.66,
    285.04,
    1020,
    284.58,
    283.12,
    100,
    1716822000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.12, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.66, temp = 285.04,
        pressure = 1020,
        feels_like = 284.58, dew_point = 283.12,
        clouds = 100, dt = 1716822000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716822000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:52|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:52|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:52|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:52|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:52|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:52|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:52|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:52|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:52|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:52|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:52|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:53|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716818400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.08,
    10000,
    130,
    0,
    5.66,
    284.58,
    1020,
    284.13,
    283,
    100,
    1716818400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.08, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.66, temp = 284.58,
        pressure = 1020,
        feels_like = 284.13, dew_point = 283,
        clouds = 100, dt = 1716818400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716818400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:53|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716818400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.08,
    10000,
    130,
    0,
    5.66,
    284.58,
    1020,
    284.13,
    283,
    100,
    1716818400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.08, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.66, temp = 284.58,
        pressure = 1020,
        feels_like = 284.13, dew_point = 283,
        clouds = 100, dt = 1716818400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716818400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:53|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:53|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:53|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:53|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:53|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:53|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:53|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:53|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:53|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716814800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.02,
    10000,
    130,
    0,
    6.17,
    284.1,
    1020,
    283.65,
    282.85,
    100,
    1716814800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.02, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.17, temp = 284.1,
        pressure = 1020,
        feels_like = 283.65, dew_point = 282.85,
        clouds = 100, dt = 1716814800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716814800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:53|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716814800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.02,
    10000,
    130,
    0,
    6.17,
    284.1,
    1020,
    283.65,
    282.85,
    100,
    1716814800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.02, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.17, temp = 284.1,
        pressure = 1020,
        feels_like = 283.65, dew_point = 282.85,
        clouds = 100, dt = 1716814800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716814800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:53|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:53|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:53|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:53|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:53|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:53|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:53|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:53|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:53|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716811200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    150,
    0,
    5.66,
    284,
    1020,
    283.57,
    282.91,
    100,
    1716811200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 5.66, temp = 284,
        pressure = 1020,
        feels_like = 283.57, dew_point = 282.91,
        clouds = 100, dt = 1716811200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716811200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:53|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716811200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    150,
    0,
    5.66,
    284,
    1020,
    283.57,
    282.91,
    100,
    1716811200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 5.66, temp = 284,
        pressure = 1020,
        feels_like = 283.57, dew_point = 282.91,
        clouds = 100, dt = 1716811200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716811200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:53|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:53|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:53|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:53|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:53|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:53|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:53|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:53|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:53|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716807600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    7.2,
    283.97,
    1020,
    283.54,
    282.88,
    100,
    1716807600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 7.2, temp = 283.97,
        pressure = 1020,
        feels_like = 283.54, dew_point = 282.88,
        clouds = 100, dt = 1716807600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716807600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:53|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716807600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    7.2,
    283.97,
    1020,
    283.54,
    282.88,
    100,
    1716807600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 7.2, temp = 283.97,
        pressure = 1020,
        feels_like = 283.54, dew_point = 282.88,
        clouds = 100, dt = 1716807600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716807600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:53|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:53|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:53|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:53|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:53|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:53|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:53|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:53|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:53|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716804000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    5.14,
    284,
    1020,
    283.57,
    282.91,
    75,
    1716804000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.14, temp = 284,
        pressure = 1020,
        feels_like = 283.57, dew_point = 282.91,
        clouds = 75, dt = 1716804000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716804000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:53|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716804000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    5.14,
    284,
    1020,
    283.57,
    282.91,
    75,
    1716804000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.14, temp = 284,
        pressure = 1020,
        feels_like = 283.57, dew_point = 282.91,
        clouds = 75, dt = 1716804000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716804000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:53|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:53|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:53|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:53|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:53|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:53|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:53|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:53|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:53|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:53|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:53|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:54|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716800400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    6.17,
    284.12,
    1020,
    283.7,
    283.03,
    100,
    1716800400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.17, temp = 284.12,
        pressure = 1020,
        feels_like = 283.7, dew_point = 283.03,
        clouds = 100, dt = 1716800400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716800400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:54|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716800400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    6.17,
    284.12,
    1020,
    283.7,
    283.03,
    100,
    1716800400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.17, temp = 284.12,
        pressure = 1020,
        feels_like = 283.7, dew_point = 283.03,
        clouds = 100, dt = 1716800400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716800400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:54|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:54|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:54|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:54|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:54|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:54|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:54|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:54|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:54|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:54|   2.3|  0.0|INFORM|clouds
2024-05-30 15:36:54|   2.3|  0.0|INFORM|visibility
2024-05-30 15:36:54|   2.3|  0.0|INFORM|wind_speed
2024-05-30 15:36:54|   2.3|  0.0|INFORM|wind_deg
2024-05-30 15:36:54|   2.3|  0.0|INFORM|weather
2024-05-30 15:36:54|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716796800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    284.13,
    1020,
    283.71,
    283.04,
    100,
    1716796800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 284.13,
        pressure = 1020,
        feels_like = 283.71, dew_point = 283.04,
        clouds = 100, dt = 1716796800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716796800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:54|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716796800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    284.13,
    1020,
    283.71,
    283.04,
    100,
    1716796800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 284.13,
        pressure = 1020,
        feels_like = 283.71, dew_point = 283.04,
        clouds = 100, dt = 1716796800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716796800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:54|   2.3|  0.0|INFORM|dt
2024-05-30 15:36:54|   2.3|  0.0|INFORM|sunrise
2024-05-30 15:36:54|   2.3|  0.0|INFORM|sunset
2024-05-30 15:36:54|   2.3|  0.0|INFORM|temp
2024-05-30 15:36:54|   2.3|  0.0|INFORM|feels_like
2024-05-30 15:36:54|   2.3|  0.0|INFORM|pressure
2024-05-30 15:36:54|   2.3|  0.0|INFORM|humidity
2024-05-30 15:36:54|   2.3|  0.0|INFORM|dew_point
2024-05-30 15:36:54|   2.3|  0.0|INFORM|uvi
2024-05-30 15:36:54|   2.4|  0.1|INFORM|clouds
2024-05-30 15:36:54|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:54|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:54|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:54|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:54|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716793200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    5.66,
    284.26,
    1020,
    283.83,
    283.01,
    100,
    1716793200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 5.66, temp = 284.26,
        pressure = 1020,
        feels_like = 283.83, dew_point = 283.01,
        clouds = 100, dt = 1716793200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716793200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:54|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716793200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    5.66,
    284.26,
    1020,
    283.83,
    283.01,
    100,
    1716793200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 5.66, temp = 284.26,
        pressure = 1020,
        feels_like = 283.83, dew_point = 283.01,
        clouds = 100, dt = 1716793200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716793200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:54|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:54|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:54|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:54|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:54|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:54|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:54|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:54|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:54|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:54|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:54|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:54|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:54|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:54|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:54|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716789600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    5.66,
    284.34,
    1020,
    283.94,
    283.25,
    100,
    1716789600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 5.66, temp = 284.34,
        pressure = 1020,
        feels_like = 283.94, dew_point = 283.25,
        clouds = 100, dt = 1716789600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716789600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:54|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716789600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    5.66,
    284.34,
    1020,
    283.94,
    283.25,
    100,
    1716789600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 5.66, temp = 284.34,
        pressure = 1020,
        feels_like = 283.94, dew_point = 283.25,
        clouds = 100, dt = 1716789600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716789600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:54|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:54|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:54|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:54|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:54|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:54|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:54|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:54|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:54|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:54|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:54|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:54|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:54|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:54|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:54|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716786000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    6.69,
    284.58,
    1020,
    284.21,
    283.49,
    100,
    1716786000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.69, temp = 284.58,
        pressure = 1020,
        feels_like = 284.21, dew_point = 283.49,
        clouds = 100, dt = 1716786000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716786000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:54|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716786000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    6.69,
    284.58,
    1020,
    284.21,
    283.49,
    100,
    1716786000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.69, temp = 284.58,
        pressure = 1020,
        feels_like = 284.21, dew_point = 283.49,
        clouds = 100, dt = 1716786000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716786000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:54|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:54|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:54|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:54|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:54|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:54|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:54|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:54|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:54|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:54|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:54|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:54|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:54|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:54|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716782400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    6.69,
    284.57,
    1020,
    284.2,
    283.48,
    100,
    1716782400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.69, temp = 284.57,
        pressure = 1020,
        feels_like = 284.2, dew_point = 283.48,
        clouds = 100, dt = 1716782400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716782400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716782400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    6.69,
    284.57,
    1020,
    284.2,
    283.48,
    100,
    1716782400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.69, temp = 284.57,
        pressure = 1020,
        feels_like = 284.2, dew_point = 283.48,
        clouds = 100, dt = 1716782400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716782400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:55|   2.4|  0.0|INFORM|PutActualWeather (QueryFactory): 91 input initiators processed
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:55|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:55|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:55|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:55|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:55|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:55|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:55|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:55|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716778800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.02,
    10000,
    140,
    0,
    8.75,
    284.49,
    1020,
    284.13,
    283.56,
    100,
    1716778800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.02, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 8.75, temp = 284.49,
        pressure = 1020,
        feels_like = 284.13, dew_point = 283.56,
        clouds = 100, dt = 1716778800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716778800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716778800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.02,
    10000,
    140,
    0,
    8.75,
    284.49,
    1020,
    284.13,
    283.56,
    100,
    1716778800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.02, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 8.75, temp = 284.49,
        pressure = 1020,
        feels_like = 284.13, dew_point = 283.56,
        clouds = 100, dt = 1716778800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716778800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:55|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:55|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:55|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:55|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:55|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:55|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:55|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:55|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716775200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.05,
    10000,
    130,
    0,
    7.72,
    284.5,
    1020,
    284.15,
    283.57,
    75,
    1716775200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.05, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 7.72, temp = 284.5,
        pressure = 1020,
        feels_like = 284.15, dew_point = 283.57,
        clouds = 75, dt = 1716775200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716775200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716775200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.05,
    10000,
    130,
    0,
    7.72,
    284.5,
    1020,
    284.15,
    283.57,
    75,
    1716775200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.05, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 7.72, temp = 284.5,
        pressure = 1020,
        feels_like = 284.15, dew_point = 283.57,
        clouds = 75, dt = 1716775200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1716775200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:55|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:55|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:55|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:55|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:55|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:55|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:55|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:55|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716771600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.11,
    10000,
    130,
    0,
    6.69,
    284.54,
    1020,
    284.19,
    283.61,
    100,
    1716771600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.11, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.69, temp = 284.54,
        pressure = 1020,
        feels_like = 284.19, dew_point = 283.61,
        clouds = 100, dt = 1716771600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716771600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716771600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.11,
    10000,
    130,
    0,
    6.69,
    284.54,
    1020,
    284.19,
    283.61,
    100,
    1716771600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.11, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 6.69, temp = 284.54,
        pressure = 1020,
        feels_like = 284.19, dew_point = 283.61,
        clouds = 100, dt = 1716771600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716771600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:55|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:55|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:55|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:55|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:55|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:55|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:55|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:55|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716768000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.2,
    10000,
    140,
    0,
    7.72,
    284.74,
    1020,
    284.38,
    283.65,
    100,
    1716768000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.2, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 7.72, temp = 284.74,
        pressure = 1020,
        feels_like = 284.38, dew_point = 283.65,
        clouds = 100, dt = 1716768000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716768000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716768000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.2,
    10000,
    140,
    0,
    7.72,
    284.74,
    1020,
    284.38,
    283.65,
    100,
    1716768000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.2, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 7.72, temp = 284.74,
        pressure = 1020,
        feels_like = 284.38, dew_point = 283.65,
        clouds = 100, dt = 1716768000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716768000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:55|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:55|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:55|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:55|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:55|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:55|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:55|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:55|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:55|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:55|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:55|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716764400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.35,
    10000,
    150,
    0,
    9.26,
    284.48,
    1020,
    284.1,
    283.39,
    100,
    1716764400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.35, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 9.26, temp = 284.48,
        pressure = 1020,
        feels_like = 284.1, dew_point = 283.39,
        clouds = 100, dt = 1716764400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716764400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716764400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.35,
    10000,
    150,
    0,
    9.26,
    284.48,
    1020,
    284.1,
    283.39,
    100,
    1716764400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.35, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 9.26, temp = 284.48,
        pressure = 1020,
        feels_like = 284.1, dew_point = 283.39,
        clouds = 100, dt = 1716764400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716764400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:56|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:56|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:56|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:56|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:56|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:56|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:56|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:56|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:56|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:56|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:56|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:56|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:56|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:56|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716760800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.47,
    10000,
    150,
    0,
    10.29,
    284.52,
    1020,
    284.14,
    283.43,
    100,
    1716760800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.47, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 10.29, temp = 284.52,
        pressure = 1020,
        feels_like = 284.14, dew_point = 283.43,
        clouds = 100, dt = 1716760800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716760800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716760800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.47,
    10000,
    150,
    0,
    10.29,
    284.52,
    1020,
    284.14,
    283.43,
    100,
    1716760800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.47, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 10.29, temp = 284.52,
        pressure = 1020,
        feels_like = 284.14, dew_point = 283.43,
        clouds = 100, dt = 1716760800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716760800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:56|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:56|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:56|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:56|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:56|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:56|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:56|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:56|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:56|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:56|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:56|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:56|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:56|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:56|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716757200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.69,
    10000,
    150,
    0,
    10.29,
    284.24,
    1020,
    283.86,
    283.31,
    100,
    1716757200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.69, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 10.29, temp = 284.24,
        pressure = 1020,
        feels_like = 283.86, dew_point = 283.31,
        clouds = 100, dt = 1716757200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716757200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716757200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.69,
    10000,
    150,
    0,
    10.29,
    284.24,
    1020,
    283.86,
    283.31,
    100,
    1716757200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.69, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 10.29, temp = 284.24,
        pressure = 1020,
        feels_like = 283.86, dew_point = 283.31,
        clouds = 100, dt = 1716757200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716757200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:56|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:56|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:56|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:56|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:56|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:56|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:56|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:56|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:56|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:56|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:56|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:56|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:56|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:56|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716753600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.59,
    10000,
    130,
    0,
    7.72,
    283.85,
    1019,
    283.46,
    283.08,
    100,
    1716753600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.59, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 7.72, temp = 283.85,
        pressure = 1019,
        feels_like = 283.46, dew_point = 283.08,
        clouds = 100, dt = 1716753600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716753600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716753600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.59,
    10000,
    130,
    0,
    7.72,
    283.85,
    1019,
    283.46,
    283.08,
    100,
    1716753600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.59, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 7.72, temp = 283.85,
        pressure = 1019,
        feels_like = 283.46, dew_point = 283.08,
        clouds = 100, dt = 1716753600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716753600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:56|   2.4|  0.0|INFORM|dt
2024-05-30 15:36:56|   2.4|  0.0|INFORM|sunrise
2024-05-30 15:36:56|   2.4|  0.0|INFORM|sunset
2024-05-30 15:36:56|   2.4|  0.0|INFORM|temp
2024-05-30 15:36:56|   2.4|  0.0|INFORM|feels_like
2024-05-30 15:36:56|   2.4|  0.0|INFORM|pressure
2024-05-30 15:36:56|   2.4|  0.0|INFORM|humidity
2024-05-30 15:36:56|   2.4|  0.0|INFORM|dew_point
2024-05-30 15:36:56|   2.4|  0.0|INFORM|uvi
2024-05-30 15:36:56|   2.4|  0.0|INFORM|clouds
2024-05-30 15:36:56|   2.4|  0.0|INFORM|visibility
2024-05-30 15:36:56|   2.4|  0.0|INFORM|wind_speed
2024-05-30 15:36:56|   2.4|  0.0|INFORM|wind_deg
2024-05-30 15:36:56|   2.4|  0.0|INFORM|weather
2024-05-30 15:36:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716750000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.53,
    10000,
    140,
    0,
    8.23,
    283.01,
    1019,
    279.58,
    282.4,
    100,
    1716750000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.53, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 8.23, temp = 283.01,
        pressure = 1019,
        feels_like = 279.58, dew_point = 282.4,
        clouds = 100, dt = 1716750000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716750000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1716750000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.53,
    10000,
    140,
    0,
    8.23,
    283.01,
    1019,
    279.58,
    282.4,
    100,
    1716750000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.53, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 8.23, temp = 283.01,
        pressure = 1019,
        feels_like = 279.58, dew_point = 282.4,
        clouds = 100, dt = 1716750000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1716750000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:56|   2.4|  0.0|INFORM|Getting schema from query 'IF EXISTS (SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC)
    SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC
ELSE
    SELECT 0 AS dt'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-05-30 15:36:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF EXISTS (SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC)
    SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC
ELSE
    SELECT 0 AS dt' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-05-30 15:36:57|   2.4|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `Parking' . Read operation complete
2024-05-30 15:36:57|   2.4|  0.0|INFORM|Optional `process_group' method not present; not called
2024-05-30 15:36:57|   2.5|  0.1|INFORM|Optional `process_group' method not present; not called
2024-05-30 15:36:57|   2.5|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `Parking' . Read operation complete
2024-05-30 15:36:57|   2.5|  0.0|STATS |Destination Feature Type Routing Correlator (RoutingFactory): Tested 0 input feature(s), wrote 0 output feature(s): 0 matched merge filters, 0 were routed to output, 0 could not be routed.
2024-05-30 15:36:57|   2.5|  0.0|STATS |Final Output Nuker (TeeFactory): Cloned 0 input feature(s) into 0 output feature(s)
2024-05-30 15:36:57|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-05-30 15:36:57|   2.5|  0.0|STATS |                            Features Read Summary
2024-05-30 15:36:57|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-05-30 15:36:57|   2.5|  0.0|STATS |==============================================================================
2024-05-30 15:36:57|   2.5|  0.0|STATS |Total Features Read                                                          0
2024-05-30 15:36:57|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-05-30 15:36:57|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-05-30 15:36:57|   2.5|  0.0|STATS |                           Features Written Summary
2024-05-30 15:36:57|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-05-30 15:36:57|   2.5|  0.0|STATS |==============================================================================
2024-05-30 15:36:57|   2.5|  0.0|STATS |Total Features Written                                                       0
2024-05-30 15:36:57|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-05-30 15:36:57|   2.5|  0.0|WARN  |-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
2024-05-30 15:36:57|   2.5|  0.0|WARN  |-~                                                                             ~-
2024-05-30 15:36:57|   2.5|  0.0|WARN  |-~    Feature caches have been recorded at every stage of the translation.     ~-
2024-05-30 15:36:57|   2.5|  0.0|WARN  |-~                      To inspect the recorded features,                      ~-
2024-05-30 15:36:57|   2.5|  0.0|WARN  |-~              click the feature cache icons next to the ports.               ~-
2024-05-30 15:36:57|   2.5|  0.0|WARN  |-~                                                                             ~-
2024-05-30 15:36:57|   2.5|  0.0|WARN  |-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
2024-05-30 15:36:57|   2.5|  0.0|INFORM|Translation was SUCCESSFUL with 108 warning(s) (0 feature(s) output)
2024-05-30 15:36:57|   2.5|  0.0|INFORM|FME Session Duration: 22.7 seconds. (CPU: 1.0s user, 1.5s system)
2024-05-30 15:36:57|   2.5|  0.0|INFORM|END - ProcessID: 16760, peak process memory usage: 92628 kB, current process memory usage: 87420 kB
