2024-08-12 12:23:22|   0.0|  0.0|INFORM|Current FME version: FME 2022.2.0.0 (20221103 - Build 22765 - WIN64)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME_HOME is 'C:\Program Files\FME\'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Student Edition (node locked-crc)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Serial Number: U4SPZTE8780CDJ9FG19M
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Temporary License: 104 days left.
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Machine host name is: PASS-CDW-245
2024-08-12 12:23:22|   0.0|  0.0|INFORM|OS Locale Name     : en_US
2024-08-12 12:23:22|   0.0|  0.0|INFORM|OS Locale Encoding : UTF-8
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Process Encoding   : UTF-8
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME API version: '4.0 20220615'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: FME_BASE is 'no'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: FME_MF_DIR is 'C:\!Capstone\repo\TL16\data-consolidation/'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: FME_MF_NAME is 'weather.fmw'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: FME_PRODUCT_NAME is 'FME(R) 2022.2.0.0'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Operating System: Microsoft Windows 10 64-bit  (Build 19045)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Platform: WIN64
2024-08-12 12:23:22|   0.0|  0.0|INFORM|System Status: 10.15 GB of disk space available in the FME temporary folder (C:\Users\mauer4.stu\AppData\Local\Temp\wbrun_1723483508005_15472\fmetmp_4)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|System Status: 15.87 GB of physical memory available
2024-08-12 12:23:22|   0.0|  0.0|WARN  |Failed to free sufficient memory to reach the process usage limit. To improve stability and performance please increase the memory available to FME. Available memory can be increased by adding physical RAM, increasing swap space, or closing other applications
2024-08-12 12:23:22|   0.0|  0.0|INFORM|System Status: 63.49 GB of virtual memory available
2024-08-12 12:23:22|   0.0|  0.0|INFORM|START - ProcessID: 20880, peak process memory usage: 49892 kB, current process memory usage: 49892 kB
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Command line arguments are `C:\Program Files\FME\fme.exe' `C:/!Capstone/repo/TL16/data-consolidation\wb-xlate-1723490598861_15472' `LOG_STANDARDOUT' `YES' `LOG_TIMINGS' `YES' `LogCountServerName' `63890' `LOG_STANDARDOUT' `No' `WORKBENCH_LOG_SERVER' `52584'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Connection Storage: 'C:\Users\mauer4.stu\AppData\Roaming\Safe Software\FME\'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Shared folders for formats are : C:\Program Files\FME\datasources;C:\Users\mauer4.stu\Documents\FME\Formats
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Shared folders for transformers are : C:\Users\mauer4.stu\AppData\Roaming\Safe Software\FME\Packages\22765-win64\transformers;C:\Program Files\FME\transformers;C:\Users\mauer4.stu\AppData\Roaming\Safe Software\FME\FME Store\Transformers
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Shared folders for coordinate systems are : C:\Users\mauer4.stu\Documents\FME\CoordinateSystems
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Shared folders for coordinate system exceptions are : C:\Users\mauer4.stu\Documents\FME\CoordinateSystemExceptions
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Shared folders for coordinate system grid overrides are : C:\Users\mauer4.stu\Documents\FME\CoordinateSystemGridOverrides
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Shared folders for CS-MAP transformation exceptions are : C:\Users\mauer4.stu\Documents\FME\CsmapTransformationExceptions
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Shared folders for transformer categories are : C:\Users\mauer4.stu\Documents\FME\TransformerCategories
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Reader Keyword is `MULTI_READER'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Writer Keyword is `NULL_DEST'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Writer Group Definition Keyword is `NULL_DEST_DEF'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Reader type is `MULTI_READER'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Writer type is `NULL'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: No destination coordinate system set
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Current working folder is `C:\!Capstone\repo\TL16\data-consolidation'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Temporary folder is `C:\Users\mauer4.stu\AppData\Local\Temp\wbrun_1723483508005_15472\fmetmp_4', set from environment variable `FME_TEMP'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: Cache folder is 'C:\Users\mauer4.stu\AppData\Local\Temp'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME Configuration: FME_HOME is `C:\Program Files\FME\'
2024-08-12 12:23:22|   0.0|  0.0|WARN  |FME Configuration: Extremely low initial memory conditions detected. To improve stability and performance please increase the memory available to FME. Available memory can be increased by adding physical RAM, increasing swap space, or closing other applications
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Creating writer for format: NULL (Nothing)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Trying to find a DYNAMIC plugin for writer named `NULL'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Loaded module 'NULL' from file 'C:\Program Files\FME\plugins/NULL.dll'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME API version of module 'NULL' matches current internal version (4.0 20220615)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Creating reader for format: 
2024-08-12 12:23:22|   0.0|  0.0|INFORM|MULTI_READER(MULTI_READER): Will fail with first member reader failure
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Using Multi Reader with keyword `MULTI_READER' to read multiple datasets
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Loaded module 'Geometry_func' from file 'C:\Program Files\FME\plugins/Geometry_func.dll'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME API version of module 'Geometry_func' matches current internal version (4.0 20220615)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Loaded module 'LogCount_func' from file 'C:\Program Files\FME\plugins/LogCount_func.dll'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME API version of module 'LogCount_func' matches current internal version (4.0 20220615)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Loaded module 'QueryFactory' from file 'C:\Program Files\FME\plugins/QueryFactory.dll'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME API version of module 'QueryFactory' matches current internal version (4.0 20220615)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Loaded module 'HTTPFactory' from file 'C:\Program Files\FME\plugins/HTTPFactory.dll'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME API version of module 'HTTPFactory' matches current internal version (4.0 20220615)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Loaded module 'PythonFactory' from file 'C:\Program Files\FME\plugins/PythonFactory.dll'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|FME API version of module 'PythonFactory' matches current internal version (4.0 20220615)
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Using Python interpreter from `C:\Program Files\FME\fmepython310\python310.dll' with PYTHONHOME `C:\Program Files\FME\fmepython310'
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Python version 3.10 loaded successfully
2024-08-12 12:23:22|   0.0|  0.0|INFORM|Adding folder `C:\!Capstone\repo\TL16\data-consolidation\' to the python path
2024-08-12 12:23:22|   0.2|  0.2|INFORM|... Last line repeated 2 times ...
2024-08-12 12:23:22|   0.2|  0.0|INFORM|Emptying factory pipeline
2024-08-12 12:23:22|   0.3|  0.1|INFORM|FME Configuration: Using connection values from 'ServerTestDB' for R_1
2024-08-12 12:23:22|   0.3|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-08-12 12:23:22|   0.3|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-08-12 12:23:22|   0.3|  0.0|INFORM|Loaded module 'MSSQL_ADO' from file 'C:\Program Files\FME\plugins/FME_ADO.dll'
2024-08-12 12:23:22|   0.3|  0.0|INFORM|FME API version of module 'FME_ADO' matches current internal version (4.0 20220615)
2024-08-12 12:23:22|   0.3|  0.0|INFORM|Performing query against MSSQL_ADO dataset `ServerTestDB'
2024-08-12 12:23:22|   0.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `Parking' for read operation
2024-08-12 12:23:22|   0.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Trying to connect using Microsoft OLE DB Driver for SQL Server...
2024-08-12 12:23:23|   0.3|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-08-12 12:23:23|   0.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-08-12 12:23:23|   0.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'forecasted')
BEGIN
    CREATE TABLE forecasted (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      pop INT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:23|   0.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'forecasted')
BEGIN
    CREATE TABLE forecasted (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      pop INT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:23|   0.3|  0.0|INFORM|FME Configuration: Using connection values from 'ServerTestDB' for R_2
2024-08-12 12:23:23|   0.3|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-08-12 12:23:23|   0.3|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-08-12 12:23:23|   0.3|  0.0|INFORM|Performing query against MSSQL_ADO dataset `ServerTestDB'
2024-08-12 12:23:23|   0.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `Parking' for read operation
2024-08-12 12:23:23|   0.3|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-08-12 12:23:23|   0.4|  0.1|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-08-12 12:23:23|   0.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'actual_weather')
BEGIN
    CREATE TABLE actual_weather (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:23|   0.4|  0.0|INFORM|CallWeatherForecast (HTTPFactory): [1]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 13662 bytes
2024-08-12 12:23:23|   0.4|  0.0|INFORM|CallWeatherForecast (HTTPFactory): [1]: HTTP Download: received 13662 bytes
2024-08-12 12:23:23|   0.4|  0.0|INFORM|CallWeatherForecast (HTTPFactory): [1]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 13662 bytes, DNS lookup time: 3 ms, total transfer time: 151 ms
2024-08-12 12:23:23|   0.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'actual_weather')
BEGIN
    CREATE TABLE actual_weather (
      uvi INT,
      visibility INT,
      wind_deg INT,
      wind_gust FLOAT,
      wind_speed FLOAT,
      temp FLOAT,
      pressure FLOAT,
      feels_like FLOAT,
      dew_point FLOAT,
      clouds INT,
      dt BIGINT,
      snow FLOAT,
      rain FLOAT,
      weather_main VARCHAR(100),
      weather_desc VARCHAR(100)
    );
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:23|   0.5|  0.1|INFORM|FME Configuration: Using connection values from 'ServerTestDB' for R_3
2024-08-12 12:23:23|   0.5|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-08-12 12:23:23|   0.5|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-08-12 12:23:23|   0.5|  0.0|INFORM|Performing query against MSSQL_ADO dataset `ServerTestDB'
2024-08-12 12:23:23|   0.5|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `Parking' for read operation
2024-08-12 12:23:23|   0.5|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-08-12 12:23:23|   0.5|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 1 feature(s)
2024-08-12 12:23:24|   0.5|  0.0|INFORM|GetLastTimestamp: Splitting bulk features into individual features
2024-08-12 12:23:24|   0.5|  0.0|INFORM|True
2024-08-12 12:23:24|   0.5|  0.0|INFORM|True
2024-08-12 12:23:24|   0.5|  0.0|INFORM|1719903600
2024-08-12 12:23:24|   0.7|  0.2|INFORM|CallCurrentWeather (HTTPFactory): [4]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [4]: HTTP Download: received 394 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [4]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 1 ms, total transfer time: 179 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [10]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [10]: HTTP Download: received 390 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [10]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 186 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [9]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [9]: HTTP Download: received 391 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [9]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 188 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [2]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [2]: HTTP Download: received 393 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [2]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 2 ms, total transfer time: 197 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [8]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [8]: HTTP Download: received 391 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [8]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 195 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [24]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [24]: HTTP Download: received 390 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [24]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 197 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [14]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 386 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [14]: HTTP Download: received 386 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [14]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 386 bytes, DNS lookup time: 0 ms, total transfer time: 201 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [20]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 387 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [20]: HTTP Download: received 387 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [20]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 387 bytes, DNS lookup time: 0 ms, total transfer time: 202 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [19]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [19]: HTTP Download: received 388 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [21]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [21]: HTTP Download: received 388 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [19]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 203 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [21]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 202 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [26]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [26]: HTTP Download: received 391 bytes
2024-08-12 12:23:24|   0.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [26]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 203 ms
2024-08-12 12:23:24|   0.7|  0.0|INFORM|dt
2024-08-12 12:23:24|   0.7|  0.0|INFORM|sunrise
2024-08-12 12:23:24|   0.7|  0.0|INFORM|sunset
2024-08-12 12:23:24|   0.7|  0.0|INFORM|temp
2024-08-12 12:23:24|   0.7|  0.0|INFORM|feels_like
2024-08-12 12:23:24|   0.7|  0.0|INFORM|pressure
2024-08-12 12:23:24|   0.7|  0.0|INFORM|humidity
2024-08-12 12:23:24|   0.7|  0.0|INFORM|dew_point
2024-08-12 12:23:24|   0.7|  0.0|INFORM|uvi
2024-08-12 12:23:24|   0.7|  0.0|INFORM|clouds
2024-08-12 12:23:24|   0.7|  0.0|INFORM|visibility
2024-08-12 12:23:24|   0.7|  0.0|INFORM|wind_speed
2024-08-12 12:23:24|   0.7|  0.0|INFORM|wind_deg
2024-08-12 12:23:24|   0.7|  0.0|INFORM|weather
2024-08-12 12:23:24|   0.9|  0.2|INFORM|FME Configuration: Using connection values from 'ServerTestDB' for R_4
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Performing query against MSSQL_ADO dataset `ServerTestDB'
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `Parking' for read operation
2024-08-12 12:23:24|   0.9|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723489200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.1,
    10000,
    130,
    0,
    4.63,
    290.47,
    1015,
    290.35,
    286.99,
    100,
    1723489200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.1, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 290.47,
        pressure = 1015,
        feels_like = 290.35, dew_point = 286.99,
        clouds = 100, dt = 1723489200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723489200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [5]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [5]: HTTP Download: received 394 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [5]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 325 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [6]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [6]: HTTP Download: received 394 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [6]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 329 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [18]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [18]: HTTP Download: received 385 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [18]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 328 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [11]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 387 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [11]: HTTP Download: received 387 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [11]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 387 bytes, DNS lookup time: 0 ms, total transfer time: 334 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [25]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [25]: HTTP Download: received 391 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [25]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 336 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [7]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 393 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [7]: HTTP Download: received 393 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [7]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 393 bytes, DNS lookup time: 0 ms, total transfer time: 339 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [12]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [12]: HTTP Download: received 384 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [12]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 339 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [3]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [3]: HTTP Download: received 394 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [3]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 1 ms, total transfer time: 343 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [16]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [16]: HTTP Download: received 390 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [16]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 341 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [15]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [15]: HTTP Download: received 391 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [15]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 341 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [22]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [22]: HTTP Download: received 388 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [22]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 341 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [23]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 394 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [23]: HTTP Download: received 394 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [23]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 394 bytes, DNS lookup time: 0 ms, total transfer time: 342 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [13]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [13]: HTTP Download: received 384 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [13]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 344 ms
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [17]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [17]: HTTP Download: received 385 bytes
2024-08-12 12:23:24|   0.9|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [17]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 351 ms
2024-08-12 12:23:24|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723489200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.1,
    10000,
    130,
    0,
    4.63,
    290.47,
    1015,
    290.35,
    286.99,
    100,
    1723489200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.1, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 290.47,
        pressure = 1015,
        feels_like = 290.35, dew_point = 286.99,
        clouds = 100, dt = 1723489200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723489200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:24|   0.9|  0.0|INFORM|dt
2024-08-12 12:23:24|   0.9|  0.0|INFORM|sunrise
2024-08-12 12:23:24|   0.9|  0.0|INFORM|sunset
2024-08-12 12:23:24|   0.9|  0.0|INFORM|temp
2024-08-12 12:23:24|   0.9|  0.0|INFORM|feels_like
2024-08-12 12:23:24|   0.9|  0.0|INFORM|pressure
2024-08-12 12:23:24|   0.9|  0.0|INFORM|humidity
2024-08-12 12:23:24|   0.9|  0.0|INFORM|dew_point
2024-08-12 12:23:24|   0.9|  0.0|INFORM|uvi
2024-08-12 12:23:24|   0.9|  0.0|INFORM|clouds
2024-08-12 12:23:24|   0.9|  0.0|INFORM|visibility
2024-08-12 12:23:24|   0.9|  0.0|INFORM|wind_speed
2024-08-12 12:23:24|   0.9|  0.0|INFORM|wind_deg
2024-08-12 12:23:24|   0.9|  0.0|INFORM|weather
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723485600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.83,
    10000,
    140,
    0,
    4.12,
    290.57,
    1015,
    290.46,
    287.09,
    100,
    1723485600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.83, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 290.57,
        pressure = 1015,
        feels_like = 290.46, dew_point = 287.09,
        clouds = 100, dt = 1723485600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723485600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:24|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723485600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.83,
    10000,
    140,
    0,
    4.12,
    290.57,
    1015,
    290.46,
    287.09,
    100,
    1723485600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.83, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 290.57,
        pressure = 1015,
        feels_like = 290.46, dew_point = 287.09,
        clouds = 100, dt = 1723485600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723485600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:24|   0.9|  0.0|INFORM|dt
2024-08-12 12:23:24|   0.9|  0.0|INFORM|sunrise
2024-08-12 12:23:24|   0.9|  0.0|INFORM|sunset
2024-08-12 12:23:24|   0.9|  0.0|INFORM|temp
2024-08-12 12:23:24|   0.9|  0.0|INFORM|feels_like
2024-08-12 12:23:24|   0.9|  0.0|INFORM|pressure
2024-08-12 12:23:24|   0.9|  0.0|INFORM|humidity
2024-08-12 12:23:24|   0.9|  0.0|INFORM|dew_point
2024-08-12 12:23:24|   0.9|  0.0|INFORM|uvi
2024-08-12 12:23:24|   0.9|  0.0|INFORM|clouds
2024-08-12 12:23:24|   0.9|  0.0|INFORM|visibility
2024-08-12 12:23:24|   0.9|  0.0|INFORM|wind_speed
2024-08-12 12:23:24|   0.9|  0.0|INFORM|wind_deg
2024-08-12 12:23:24|   0.9|  0.0|INFORM|weather
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Logging limit reached for the preceding message. Further instances of this message will not be logged
2024-08-12 12:23:24|   0.9|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723482000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.56,
    10000,
    110,
    0,
    4.63,
    289.98,
    1014,
    289.86,
    286.89,
    100,
    1723482000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.56, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 4.63, temp = 289.98,
        pressure = 1014,
        feels_like = 289.86, dew_point = 286.89,
        clouds = 100, dt = 1723482000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723482000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:24|   0.9|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723482000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.56,
    10000,
    110,
    0,
    4.63,
    289.98,
    1014,
    289.86,
    286.89,
    100,
    1723482000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.56, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 4.63, temp = 289.98,
        pressure = 1014,
        feels_like = 289.86, dew_point = 286.89,
        clouds = 100, dt = 1723482000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723482000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:24|   1.0|  0.1|INFORM|dt
2024-08-12 12:23:24|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:24|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:24|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:24|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:24|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:24|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:24|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:24|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:24|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:24|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:24|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:24|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:24|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:25|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723478400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.32,
    10000,
    140,
    0,
    6.69,
    289.77,
    1014,
    289.68,
    287.06,
    100,
    1723478400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.32, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 6.69, temp = 289.77,
        pressure = 1014,
        feels_like = 289.68, dew_point = 287.06,
        clouds = 100, dt = 1723478400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723478400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:25|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723478400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.32,
    10000,
    140,
    0,
    6.69,
    289.77,
    1014,
    289.68,
    287.06,
    100,
    1723478400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.32, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 6.69, temp = 289.77,
        pressure = 1014,
        feels_like = 289.68, dew_point = 287.06,
        clouds = 100, dt = 1723478400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723478400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:25|   1.0|  0.0|INFORM|dt
2024-08-12 12:23:25|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:25|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:25|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:25|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:25|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:25|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:25|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:25|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:25|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:25|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:25|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:25|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:25|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:25|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723474800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.14,
    10000,
    140,
    0,
    6.17,
    289.71,
    1014,
    289.67,
    287.36,
    100,
    1723474800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.14, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 6.17, temp = 289.71,
        pressure = 1014,
        feels_like = 289.67, dew_point = 287.36,
        clouds = 100, dt = 1723474800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723474800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:25|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723474800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.14,
    10000,
    140,
    0,
    6.17,
    289.71,
    1014,
    289.67,
    287.36,
    100,
    1723474800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.14, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 6.17, temp = 289.71,
        pressure = 1014,
        feels_like = 289.67, dew_point = 287.36,
        clouds = 100, dt = 1723474800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723474800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:25|   1.0|  0.0|INFORM|dt
2024-08-12 12:23:25|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:25|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:25|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:25|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:25|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:25|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:25|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:25|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:25|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:25|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:25|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:25|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:25|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:25|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723471200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.05,
    10000,
    160,
    0,
    3.6,
    289.75,
    1014,
    289.69,
    287.22,
    100,
    1723471200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.05, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.6, temp = 289.75,
        pressure = 1014,
        feels_like = 289.69, dew_point = 287.22,
        clouds = 100, dt = 1723471200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723471200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:25|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723471200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.05,
    10000,
    160,
    0,
    3.6,
    289.75,
    1014,
    289.69,
    287.22,
    100,
    1723471200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.05, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.6, temp = 289.75,
        pressure = 1014,
        feels_like = 289.69, dew_point = 287.22,
        clouds = 100, dt = 1723471200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723471200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:25|   1.0|  0.0|INFORM|dt
2024-08-12 12:23:25|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:25|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:25|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:25|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:25|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:25|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:25|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:25|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:25|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:25|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:25|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:25|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:25|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:25|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723467600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    5.66,
    289.62,
    1013,
    289.54,
    287.09,
    100,
    1723467600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 5.66, temp = 289.62,
        pressure = 1013,
        feels_like = 289.54, dew_point = 287.09,
        clouds = 100, dt = 1723467600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723467600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:25|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723467600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    5.66,
    289.62,
    1013,
    289.54,
    287.09,
    100,
    1723467600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 5.66, temp = 289.62,
        pressure = 1013,
        feels_like = 289.54, dew_point = 287.09,
        clouds = 100, dt = 1723467600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723467600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:25|   1.0|  0.0|INFORM|dt
2024-08-12 12:23:25|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:25|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:25|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:25|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:25|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:25|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:25|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:25|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:25|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:25|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:25|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:25|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:25|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:25|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723464000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    5.14,
    289.93,
    1013,
    289.86,
    287.21,
    100,
    1723464000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.14, temp = 289.93,
        pressure = 1013,
        feels_like = 289.86, dew_point = 287.21,
        clouds = 100, dt = 1723464000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723464000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:26|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723464000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    5.14,
    289.93,
    1013,
    289.86,
    287.21,
    100,
    1723464000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.14, temp = 289.93,
        pressure = 1013,
        feels_like = 289.86, dew_point = 287.21,
        clouds = 100, dt = 1723464000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723464000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:26|   1.0|  0.0|INFORM|dt
2024-08-12 12:23:26|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:26|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:26|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:26|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:26|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:26|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:26|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:26|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:26|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:26|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:26|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:26|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:26|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:26|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723460400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    3.6,
    290.03,
    1013,
    289.94,
    287.13,
    100,
    1723460400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 3.6, temp = 290.03,
        pressure = 1013,
        feels_like = 289.94, dew_point = 287.13,
        clouds = 100, dt = 1723460400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723460400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:26|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723460400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    3.6,
    290.03,
    1013,
    289.94,
    287.13,
    100,
    1723460400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 3.6, temp = 290.03,
        pressure = 1013,
        feels_like = 289.94, dew_point = 287.13,
        clouds = 100, dt = 1723460400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723460400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:26|   1.0|  0.0|INFORM|dt
2024-08-12 12:23:26|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:26|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:26|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:26|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:26|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:26|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:26|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:26|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:26|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:26|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:26|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:26|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:26|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:26|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723456800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    3.6,
    290.07,
    1013,
    289.98,
    287.17,
    75,
    1723456800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 3.6, temp = 290.07,
        pressure = 1013,
        feels_like = 289.98, dew_point = 287.17,
        clouds = 75, dt = 1723456800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723456800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:26|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723456800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    3.6,
    290.07,
    1013,
    289.98,
    287.17,
    75,
    1723456800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 3.6, temp = 290.07,
        pressure = 1013,
        feels_like = 289.98, dew_point = 287.17,
        clouds = 75, dt = 1723456800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723456800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:26|   1.0|  0.0|INFORM|dt
2024-08-12 12:23:26|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:26|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:26|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:26|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:26|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:26|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:26|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:26|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:26|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:26|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:26|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:26|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:26|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:26|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723453200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    290.27,
    1013,
    290.2,
    287.36,
    20,
    1723453200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 290.27,
        pressure = 1013,
        feels_like = 290.2, dew_point = 287.36,
        clouds = 20, dt = 1723453200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723453200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:26|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723453200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    290.27,
    1013,
    290.2,
    287.36,
    20,
    1723453200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 290.27,
        pressure = 1013,
        feels_like = 290.2, dew_point = 287.36,
        clouds = 20, dt = 1723453200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723453200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:26|   1.0|  0.0|INFORM|dt
2024-08-12 12:23:26|   1.0|  0.0|INFORM|sunrise
2024-08-12 12:23:26|   1.0|  0.0|INFORM|sunset
2024-08-12 12:23:26|   1.0|  0.0|INFORM|temp
2024-08-12 12:23:26|   1.0|  0.0|INFORM|feels_like
2024-08-12 12:23:26|   1.0|  0.0|INFORM|pressure
2024-08-12 12:23:26|   1.0|  0.0|INFORM|humidity
2024-08-12 12:23:26|   1.0|  0.0|INFORM|dew_point
2024-08-12 12:23:26|   1.0|  0.0|INFORM|uvi
2024-08-12 12:23:26|   1.0|  0.0|INFORM|clouds
2024-08-12 12:23:26|   1.0|  0.0|INFORM|visibility
2024-08-12 12:23:26|   1.0|  0.0|INFORM|wind_speed
2024-08-12 12:23:26|   1.0|  0.0|INFORM|wind_deg
2024-08-12 12:23:26|   1.0|  0.0|INFORM|weather
2024-08-12 12:23:26|   1.0|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723449600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    290.1,
    1014,
    290.07,
    287.56,
    20,
    1723449600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 290.1,
        pressure = 1014,
        feels_like = 290.07, dew_point = 287.56,
        clouds = 20, dt = 1723449600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723449600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:26|   1.0|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723449600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    290.1,
    1014,
    290.07,
    287.56,
    20,
    1723449600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 290.1,
        pressure = 1014,
        feels_like = 290.07, dew_point = 287.56,
        clouds = 20, dt = 1723449600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723449600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:26|   1.1|  0.1|INFORM|dt
2024-08-12 12:23:26|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:26|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:26|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:26|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:26|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:26|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:26|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:26|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:26|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:26|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:26|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:26|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:26|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:27|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723446000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    5.66,
    290.9,
    1014,
    290.85,
    287.6,
    75,
    1723446000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 5.66, temp = 290.9,
        pressure = 1014,
        feels_like = 290.85, dew_point = 287.6,
        clouds = 75, dt = 1723446000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723446000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:27|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723446000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    5.66,
    290.9,
    1014,
    290.85,
    287.6,
    75,
    1723446000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 5.66, temp = 290.9,
        pressure = 1014,
        feels_like = 290.85, dew_point = 287.6,
        clouds = 75, dt = 1723446000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723446000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:27|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:27|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:27|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:27|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:27|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:27|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:27|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:27|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:27|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:27|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:27|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:27|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:27|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:27|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:27|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723442400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    4.63,
    291.56,
    1014,
    291.52,
    287.86,
    100,
    1723442400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 291.56,
        pressure = 1014,
        feels_like = 291.52, dew_point = 287.86,
        clouds = 100, dt = 1723442400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723442400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:27|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723442400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    4.63,
    291.56,
    1014,
    291.52,
    287.86,
    100,
    1723442400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 291.56,
        pressure = 1014,
        feels_like = 291.52, dew_point = 287.86,
        clouds = 100, dt = 1723442400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723442400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:27|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:27|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:27|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:27|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:27|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:27|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:27|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:27|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:27|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:27|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:27|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:27|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:27|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:27|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:27|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723438800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    6.17,
    291.57,
    1014,
    291.5,
    287.67,
    100,
    1723438800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 6.17, temp = 291.57,
        pressure = 1014,
        feels_like = 291.5, dew_point = 287.67,
        clouds = 100, dt = 1723438800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723438800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:27|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723438800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    6.17,
    291.57,
    1014,
    291.5,
    287.67,
    100,
    1723438800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 6.17, temp = 291.57,
        pressure = 1014,
        feels_like = 291.5, dew_point = 287.67,
        clouds = 100, dt = 1723438800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723438800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:27|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:27|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:27|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:27|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:27|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:27|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:27|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:27|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:27|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:27|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:27|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:27|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:27|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:27|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:27|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723435200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    160,
    0,
    5.66,
    291.45,
    1013,
    291.42,
    287.94,
    20,
    1723435200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 5.66, temp = 291.45,
        pressure = 1013,
        feels_like = 291.42, dew_point = 287.94,
        clouds = 20, dt = 1723435200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723435200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:27|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723435200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    160,
    0,
    5.66,
    291.45,
    1013,
    291.42,
    287.94,
    20,
    1723435200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 5.66, temp = 291.45,
        pressure = 1013,
        feels_like = 291.42, dew_point = 287.94,
        clouds = 20, dt = 1723435200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723435200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:27|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:27|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:27|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:27|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:27|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:27|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:27|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:27|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:27|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:27|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:27|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:27|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:27|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:27|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:27|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723431600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    160,
    0,
    6.17,
    292.97,
    1014,
    292.97,
    288.41,
    20,
    1723431600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 6.17, temp = 292.97,
        pressure = 1014,
        feels_like = 292.97, dew_point = 288.41,
        clouds = 20, dt = 1723431600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723431600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:27|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723431600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    160,
    0,
    6.17,
    292.97,
    1014,
    292.97,
    288.41,
    20,
    1723431600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 6.17, temp = 292.97,
        pressure = 1014,
        feels_like = 292.97, dew_point = 288.41,
        clouds = 20, dt = 1723431600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723431600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:28|   1.1|  0.0|INFORM|PutActualWeather (QueryFactory): 17 input initiators processed
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:28|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:28|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:28|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:28|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:28|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:28|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:28|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:28|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:28|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723428000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.32,
    10000,
    160,
    0,
    6.17,
    294.09,
    1013,
    294.17,
    289.28,
    20,
    1723428000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.32, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 6.17, temp = 294.09,
        pressure = 1013,
        feels_like = 294.17, dew_point = 289.28,
        clouds = 20, dt = 1723428000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723428000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:28|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723428000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.32,
    10000,
    160,
    0,
    6.17,
    294.09,
    1013,
    294.17,
    289.28,
    20,
    1723428000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.32, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 6.17, temp = 294.09,
        pressure = 1013,
        feels_like = 294.17, dew_point = 289.28,
        clouds = 20, dt = 1723428000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723428000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:28|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:28|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:28|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:28|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:28|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:28|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:28|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:28|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:28|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723424400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.9,
    10000,
    160,
    0,
    5.66,
    294.47,
    1014,
    294.56,
    289.44,
    20,
    1723424400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.9, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 5.66, temp = 294.47,
        pressure = 1014,
        feels_like = 294.56, dew_point = 289.44,
        clouds = 20, dt = 1723424400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723424400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:28|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723424400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.9,
    10000,
    160,
    0,
    5.66,
    294.47,
    1014,
    294.56,
    289.44,
    20,
    1723424400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.9, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 5.66, temp = 294.47,
        pressure = 1014,
        feels_like = 294.56, dew_point = 289.44,
        clouds = 20, dt = 1723424400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723424400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:28|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:28|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:28|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:28|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:28|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:28|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:28|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:28|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:28|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723420800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.87,
    10000,
    160,
    0,
    4.63,
    294.41,
    1014,
    294.47,
    289.16,
    20,
    1723420800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.87, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 4.63, temp = 294.41,
        pressure = 1014,
        feels_like = 294.47, dew_point = 289.16,
        clouds = 20, dt = 1723420800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723420800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:28|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723420800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.87,
    10000,
    160,
    0,
    4.63,
    294.41,
    1014,
    294.47,
    289.16,
    20,
    1723420800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.87, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 4.63, temp = 294.41,
        pressure = 1014,
        feels_like = 294.47, dew_point = 289.16,
        clouds = 20, dt = 1723420800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723420800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:28|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:28|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:28|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:28|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:28|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:28|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:28|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:28|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:28|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723417200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.11,
    10000,
    160,
    0,
    4.12,
    294.71,
    1014,
    294.78,
    289.23,
    20,
    1723417200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.11, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 4.12, temp = 294.71,
        pressure = 1014,
        feels_like = 294.78, dew_point = 289.23,
        clouds = 20, dt = 1723417200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723417200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:28|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723417200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.11,
    10000,
    160,
    0,
    4.12,
    294.71,
    1014,
    294.78,
    289.23,
    20,
    1723417200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.11, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 4.12, temp = 294.71,
        pressure = 1014,
        feels_like = 294.78, dew_point = 289.23,
        clouds = 20, dt = 1723417200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723417200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:28|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:28|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:28|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:28|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:28|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:28|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:28|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:28|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:28|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:28|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:28|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:29|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723413600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.04,
    10000,
    220,
    0,
    5.66,
    294.25,
    1015,
    294.27,
    288.79,
    40,
    1723413600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.04, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 5.66, temp = 294.25,
        pressure = 1015,
        feels_like = 294.27, dew_point = 288.79,
        clouds = 40, dt = 1723413600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723413600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:29|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723413600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.04,
    10000,
    220,
    0,
    5.66,
    294.25,
    1015,
    294.27,
    288.79,
    40,
    1723413600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.04, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 5.66, temp = 294.25,
        pressure = 1015,
        feels_like = 294.27, dew_point = 288.79,
        clouds = 40, dt = 1723413600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723413600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:29|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:29|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:29|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:29|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:29|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:29|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:29|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:29|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:29|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:29|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:29|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:29|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:29|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:29|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:29|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723410000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.99,
    10000,
    200,
    0,
    4.12,
    294.68,
    1015,
    294.74,
    289.2,
    75,
    1723410000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.99, visibility = 10000,
        wind_deg = 200, wind_gust = 0,
        wind_speed = 4.12, temp = 294.68,
        pressure = 1015,
        feels_like = 294.74, dew_point = 289.2,
        clouds = 75, dt = 1723410000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723410000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:29|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723410000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.99,
    10000,
    200,
    0,
    4.12,
    294.68,
    1015,
    294.74,
    289.2,
    75,
    1723410000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.99, visibility = 10000,
        wind_deg = 200, wind_gust = 0,
        wind_speed = 4.12, temp = 294.68,
        pressure = 1015,
        feels_like = 294.74, dew_point = 289.2,
        clouds = 75, dt = 1723410000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723410000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:29|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:29|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:29|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:29|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:29|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:29|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:29|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:29|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:29|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:29|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:29|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:29|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:29|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:29|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:29|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723406400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.95,
    10000,
    160,
    0,
    4.63,
    293.77,
    1016,
    293.79,
    288.76,
    75,
    1723406400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.95, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 4.63, temp = 293.77,
        pressure = 1016,
        feels_like = 293.79, dew_point = 288.76,
        clouds = 75, dt = 1723406400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723406400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:29|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723406400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.95,
    10000,
    160,
    0,
    4.63,
    293.77,
    1016,
    293.79,
    288.76,
    75,
    1723406400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.95, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 4.63, temp = 293.77,
        pressure = 1016,
        feels_like = 293.79, dew_point = 288.76,
        clouds = 75, dt = 1723406400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723406400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:29|   1.1|  0.0|INFORM|dt
2024-08-12 12:23:29|   1.1|  0.0|INFORM|sunrise
2024-08-12 12:23:29|   1.1|  0.0|INFORM|sunset
2024-08-12 12:23:29|   1.1|  0.0|INFORM|temp
2024-08-12 12:23:29|   1.1|  0.0|INFORM|feels_like
2024-08-12 12:23:29|   1.1|  0.0|INFORM|pressure
2024-08-12 12:23:29|   1.1|  0.0|INFORM|humidity
2024-08-12 12:23:29|   1.1|  0.0|INFORM|dew_point
2024-08-12 12:23:29|   1.1|  0.0|INFORM|uvi
2024-08-12 12:23:29|   1.1|  0.0|INFORM|clouds
2024-08-12 12:23:29|   1.1|  0.0|INFORM|visibility
2024-08-12 12:23:29|   1.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:29|   1.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:29|   1.1|  0.0|INFORM|weather
2024-08-12 12:23:29|   1.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723402800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.13,
    10000,
    150,
    0,
    4.12,
    293.49,
    1016,
    293.49,
    288.49,
    75,
    1723402800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.13, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 4.12, temp = 293.49,
        pressure = 1016,
        feels_like = 293.49, dew_point = 288.49,
        clouds = 75, dt = 1723402800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723402800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:29|   1.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723402800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.13,
    10000,
    150,
    0,
    4.12,
    293.49,
    1016,
    293.49,
    288.49,
    75,
    1723402800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.13, visibility = 10000,
        wind_deg = 150, wind_gust = 0,
        wind_speed = 4.12, temp = 293.49,
        pressure = 1016,
        feels_like = 293.49, dew_point = 288.49,
        clouds = 75, dt = 1723402800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723402800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:30|   1.2|  0.1|INFORM|CallCurrentWeather (HTTPFactory): [32]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [32]: HTTP Download: received 388 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [32]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 153 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [36]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [36]: HTTP Download: received 388 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [36]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 154 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [42]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 376 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [42]: HTTP Download: received 376 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [42]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 376 bytes, DNS lookup time: 0 ms, total transfer time: 158 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [33]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [33]: HTTP Download: received 388 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [33]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 162 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [38]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 376 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [38]: HTTP Download: received 376 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [38]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 376 bytes, DNS lookup time: 0 ms, total transfer time: 163 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [30]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [30]: HTTP Download: received 390 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [30]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 170 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [37]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [37]: HTTP Download: received 391 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [37]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 176 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [39]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [39]: HTTP Download: received 384 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [39]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 178 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [29]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 408 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [29]: HTTP Download: received 408 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [29]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 408 bytes, DNS lookup time: 0 ms, total transfer time: 188 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [44]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 379 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [44]: HTTP Download: received 379 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [44]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 379 bytes, DNS lookup time: 0 ms, total transfer time: 187 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [45]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 406 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [45]: HTTP Download: received 406 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [45]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 406 bytes, DNS lookup time: 0 ms, total transfer time: 190 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [28]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [28]: HTTP Download: received 391 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [28]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 194 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [47]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 375 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [47]: HTTP Download: received 375 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [47]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 375 bytes, DNS lookup time: 0 ms, total transfer time: 191 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [50]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 387 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [50]: HTTP Download: received 387 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [50]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 387 bytes, DNS lookup time: 0 ms, total transfer time: 190 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [51]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 379 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [51]: HTTP Download: received 379 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [51]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 379 bytes, DNS lookup time: 0 ms, total transfer time: 191 ms
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [31]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [31]: HTTP Download: received 390 bytes
2024-08-12 12:23:30|   1.2|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [31]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 198 ms
2024-08-12 12:23:30|   1.3|  0.1|INFORM|CallCurrentWeather (HTTPFactory): [35]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [35]: HTTP Download: received 388 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [35]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 288 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [27]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 390 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [27]: HTTP Download: received 390 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [27]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 390 bytes, DNS lookup time: 0 ms, total transfer time: 290 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|dt
2024-08-12 12:23:30|   1.3|  0.0|INFORM|sunrise
2024-08-12 12:23:30|   1.3|  0.0|INFORM|sunset
2024-08-12 12:23:30|   1.3|  0.0|INFORM|temp
2024-08-12 12:23:30|   1.3|  0.0|INFORM|feels_like
2024-08-12 12:23:30|   1.3|  0.0|INFORM|pressure
2024-08-12 12:23:30|   1.3|  0.0|INFORM|humidity
2024-08-12 12:23:30|   1.3|  0.0|INFORM|dew_point
2024-08-12 12:23:30|   1.3|  0.0|INFORM|uvi
2024-08-12 12:23:30|   1.3|  0.0|INFORM|clouds
2024-08-12 12:23:30|   1.3|  0.0|INFORM|visibility
2024-08-12 12:23:30|   1.3|  0.0|INFORM|wind_speed
2024-08-12 12:23:30|   1.3|  0.0|INFORM|wind_deg
2024-08-12 12:23:30|   1.3|  0.0|INFORM|weather
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [34]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [34]: HTTP Download: received 385 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [34]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 290 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [40]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 383 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [40]: HTTP Download: received 383 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [40]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 383 bytes, DNS lookup time: 0 ms, total transfer time: 290 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [41]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 377 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [41]: HTTP Download: received 377 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [41]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 377 bytes, DNS lookup time: 0 ms, total transfer time: 292 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [43]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 377 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [43]: HTTP Download: received 377 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [43]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 377 bytes, DNS lookup time: 0 ms, total transfer time: 292 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [49]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 380 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [49]: HTTP Download: received 380 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [49]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 380 bytes, DNS lookup time: 0 ms, total transfer time: 318 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [46]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 379 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [46]: HTTP Download: received 379 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [48]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [48]: HTTP Download: received 385 bytes
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [46]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 379 bytes, DNS lookup time: 0 ms, total transfer time: 320 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [48]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 320 ms
2024-08-12 12:23:30|   1.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723399200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.19,
    10000,
    130,
    0,
    7.2,
    293.02,
    1016,
    293.02,
    288.46,
    75,
    1723399200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.19, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 7.2, temp = 293.02,
        pressure = 1016,
        feels_like = 293.02, dew_point = 288.46,
        clouds = 75, dt = 1723399200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723399200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:30|   1.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723399200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.19,
    10000,
    130,
    0,
    7.2,
    293.02,
    1016,
    293.02,
    288.46,
    75,
    1723399200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.19, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 7.2, temp = 293.02,
        pressure = 1016,
        feels_like = 293.02, dew_point = 288.46,
        clouds = 75, dt = 1723399200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723399200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:30|   1.3|  0.0|INFORM|dt
2024-08-12 12:23:30|   1.3|  0.0|INFORM|sunrise
2024-08-12 12:23:30|   1.3|  0.0|INFORM|sunset
2024-08-12 12:23:30|   1.3|  0.0|INFORM|temp
2024-08-12 12:23:30|   1.3|  0.0|INFORM|feels_like
2024-08-12 12:23:30|   1.3|  0.0|INFORM|pressure
2024-08-12 12:23:30|   1.3|  0.0|INFORM|humidity
2024-08-12 12:23:30|   1.3|  0.0|INFORM|dew_point
2024-08-12 12:23:30|   1.3|  0.0|INFORM|uvi
2024-08-12 12:23:30|   1.3|  0.0|INFORM|clouds
2024-08-12 12:23:30|   1.3|  0.0|INFORM|visibility
2024-08-12 12:23:30|   1.3|  0.0|INFORM|wind_speed
2024-08-12 12:23:30|   1.3|  0.0|INFORM|wind_deg
2024-08-12 12:23:30|   1.3|  0.0|INFORM|weather
2024-08-12 12:23:30|   1.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723395600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.05,
    10000,
    120,
    0,
    6.17,
    291.78,
    1016,
    291.79,
    288.26,
    75,
    1723395600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.05, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 6.17, temp = 291.78,
        pressure = 1016,
        feels_like = 291.79, dew_point = 288.26,
        clouds = 75, dt = 1723395600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723395600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:30|   1.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723395600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.05,
    10000,
    120,
    0,
    6.17,
    291.78,
    1016,
    291.79,
    288.26,
    75,
    1723395600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.05, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 6.17, temp = 291.78,
        pressure = 1016,
        feels_like = 291.79, dew_point = 288.26,
        clouds = 75, dt = 1723395600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723395600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:30|   1.3|  0.0|INFORM|dt
2024-08-12 12:23:30|   1.3|  0.0|INFORM|sunrise
2024-08-12 12:23:30|   1.3|  0.0|INFORM|sunset
2024-08-12 12:23:30|   1.3|  0.0|INFORM|temp
2024-08-12 12:23:30|   1.3|  0.0|INFORM|feels_like
2024-08-12 12:23:30|   1.3|  0.0|INFORM|pressure
2024-08-12 12:23:30|   1.3|  0.0|INFORM|humidity
2024-08-12 12:23:30|   1.3|  0.0|INFORM|dew_point
2024-08-12 12:23:30|   1.3|  0.0|INFORM|uvi
2024-08-12 12:23:30|   1.3|  0.0|INFORM|clouds
2024-08-12 12:23:30|   1.3|  0.0|INFORM|visibility
2024-08-12 12:23:30|   1.3|  0.0|INFORM|wind_speed
2024-08-12 12:23:30|   1.3|  0.0|INFORM|wind_deg
2024-08-12 12:23:30|   1.3|  0.0|INFORM|wind_gust
2024-08-12 12:23:30|   1.3|  0.0|INFORM|weather
2024-08-12 12:23:30|   1.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723392000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.37,
    10000,
    110,
    8.23,
    5.66,
    290.55,
    1016,
    290.51,
    287.64,
    75,
    1723392000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.37, visibility = 10000,
        wind_deg = 110, wind_gust = 8.23,
        wind_speed = 5.66, temp = 290.55,
        pressure = 1016,
        feels_like = 290.51, dew_point = 287.64,
        clouds = 75, dt = 1723392000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723392000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:30|   1.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723392000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.37,
    10000,
    110,
    8.23,
    5.66,
    290.55,
    1016,
    290.51,
    287.64,
    75,
    1723392000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.37, visibility = 10000,
        wind_deg = 110, wind_gust = 8.23,
        wind_speed = 5.66, temp = 290.55,
        pressure = 1016,
        feels_like = 290.51, dew_point = 287.64,
        clouds = 75, dt = 1723392000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723392000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:30|   1.3|  0.0|INFORM|dt
2024-08-12 12:23:30|   1.3|  0.0|INFORM|sunrise
2024-08-12 12:23:30|   1.3|  0.0|INFORM|sunset
2024-08-12 12:23:30|   1.3|  0.0|INFORM|temp
2024-08-12 12:23:30|   1.3|  0.0|INFORM|feels_like
2024-08-12 12:23:30|   1.3|  0.0|INFORM|pressure
2024-08-12 12:23:30|   1.3|  0.0|INFORM|humidity
2024-08-12 12:23:30|   1.3|  0.0|INFORM|dew_point
2024-08-12 12:23:30|   1.3|  0.0|INFORM|uvi
2024-08-12 12:23:30|   1.4|  0.1|INFORM|clouds
2024-08-12 12:23:30|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:30|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:30|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:30|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:30|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723388400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.64,
    10000,
    110,
    0,
    7.2,
    290.92,
    1016,
    290.97,
    288.37,
    75,
    1723388400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.64, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 7.2, temp = 290.92,
        pressure = 1016,
        feels_like = 290.97, dew_point = 288.37,
        clouds = 75, dt = 1723388400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723388400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:31|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723388400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.64,
    10000,
    110,
    0,
    7.2,
    290.92,
    1016,
    290.97,
    288.37,
    75,
    1723388400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.64, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 7.2, temp = 290.92,
        pressure = 1016,
        feels_like = 290.97, dew_point = 288.37,
        clouds = 75, dt = 1723388400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723388400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:31|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:31|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:31|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:31|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:31|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:31|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:31|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:31|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:31|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:31|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:31|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:31|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:31|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:31|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:31|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723384800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    90,
    0,
    6.17,
    289.53,
    1016,
    289.55,
    287.71,
    75,
    1723384800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 6.17, temp = 289.53,
        pressure = 1016,
        feels_like = 289.55, dew_point = 287.71,
        clouds = 75, dt = 1723384800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723384800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:31|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723384800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    90,
    0,
    6.17,
    289.53,
    1016,
    289.55,
    287.71,
    75,
    1723384800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 6.17, temp = 289.53,
        pressure = 1016,
        feels_like = 289.55, dew_point = 287.71,
        clouds = 75, dt = 1723384800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723384800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:31|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:31|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:31|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:31|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:31|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:31|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:31|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:31|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:31|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:31|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:31|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:31|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:31|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:31|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:31|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723381200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    289.41,
    1016,
    289.44,
    287.77,
    75,
    1723381200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 289.41,
        pressure = 1016,
        feels_like = 289.44, dew_point = 287.77,
        clouds = 75, dt = 1723381200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723381200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:31|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723381200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    289.41,
    1016,
    289.44,
    287.77,
    75,
    1723381200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 289.41,
        pressure = 1016,
        feels_like = 289.44, dew_point = 287.77,
        clouds = 75, dt = 1723381200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723381200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:31|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:31|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:31|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:31|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:31|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:31|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:31|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:31|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:31|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:31|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:31|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:31|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:31|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:31|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:31|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723377600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    5.66,
    289.31,
    1015,
    289.36,
    287.84,
    75,
    1723377600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.66, temp = 289.31,
        pressure = 1015,
        feels_like = 289.36, dew_point = 287.84,
        clouds = 75, dt = 1723377600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723377600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:31|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723377600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    5.66,
    289.31,
    1015,
    289.36,
    287.84,
    75,
    1723377600,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 5.66, temp = 289.31,
        pressure = 1015,
        feels_like = 289.36, dew_point = 287.84,
        clouds = 75, dt = 1723377600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723377600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:31|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:31|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:31|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:31|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:31|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:31|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:31|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:31|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:31|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:31|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:31|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:31|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:31|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:31|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:31|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723374000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    90,
    0,
    3.6,
    290.28,
    1015,
    290.32,
    288.1,
    75,
    1723374000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 3.6, temp = 290.28,
        pressure = 1015,
        feels_like = 290.32, dew_point = 288.1,
        clouds = 75, dt = 1723374000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723374000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:32|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723374000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    90,
    0,
    3.6,
    290.28,
    1015,
    290.32,
    288.1,
    75,
    1723374000,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 3.6, temp = 290.28,
        pressure = 1015,
        feels_like = 290.32, dew_point = 288.1,
        clouds = 75, dt = 1723374000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723374000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:32|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:32|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:32|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:32|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:32|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:32|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:32|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:32|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:32|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:32|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:32|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:32|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:32|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:32|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:32|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723370400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    170,
    0,
    1.54,
    291.74,
    1015,
    291.74,
    288.23,
    75,
    1723370400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 170, wind_gust = 0,
        wind_speed = 1.54, temp = 291.74,
        pressure = 1015,
        feels_like = 291.74, dew_point = 288.23,
        clouds = 75, dt = 1723370400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723370400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:32|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723370400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    170,
    0,
    1.54,
    291.74,
    1015,
    291.74,
    288.23,
    75,
    1723370400,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 170, wind_gust = 0,
        wind_speed = 1.54, temp = 291.74,
        pressure = 1015,
        feels_like = 291.74, dew_point = 288.23,
        clouds = 75, dt = 1723370400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723370400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:32|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:32|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:32|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:32|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:32|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:32|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:32|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:32|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:32|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:32|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:32|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:32|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:32|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:32|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:32|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723366800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.12,
    291.99,
    1015,
    292.02,
    288.47,
    75,
    1723366800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.12, temp = 291.99,
        pressure = 1015,
        feels_like = 292.02, dew_point = 288.47,
        clouds = 75, dt = 1723366800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723366800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:32|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723366800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.12,
    291.99,
    1015,
    292.02,
    288.47,
    75,
    1723366800,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.12, temp = 291.99,
        pressure = 1015,
        feels_like = 292.02, dew_point = 288.47,
        clouds = 75, dt = 1723366800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723366800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:32|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:32|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:32|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:32|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:32|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:32|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:32|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:32|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:32|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:32|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:32|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:32|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:32|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:32|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:32|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723363200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    5.66,
    292.55,
    1015,
    292.58,
    288.62,
    40,
    1723363200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 5.66, temp = 292.55,
        pressure = 1015,
        feels_like = 292.58, dew_point = 288.62,
        clouds = 40, dt = 1723363200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723363200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:32|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723363200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    5.66,
    292.55,
    1015,
    292.58,
    288.62,
    40,
    1723363200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 5.66, temp = 292.55,
        pressure = 1015,
        feels_like = 292.58, dew_point = 288.62,
        clouds = 40, dt = 1723363200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723363200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:32|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:32|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:32|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:32|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:32|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:32|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:32|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:32|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:32|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:32|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:32|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:32|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:32|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:32|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:32|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723359600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    5.14,
    292.72,
    1015,
    292.8,
    288.98,
    20,
    1723359600,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 5.14, temp = 292.72,
        pressure = 1015,
        feels_like = 292.8, dew_point = 288.98,
        clouds = 20, dt = 1723359600, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723359600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:33|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723359600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    5.14,
    292.72,
    1015,
    292.8,
    288.98,
    20,
    1723359600,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 5.14, temp = 292.72,
        pressure = 1015,
        feels_like = 292.8, dew_point = 288.98,
        clouds = 20, dt = 1723359600, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723359600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:33|   1.4|  0.0|INFORM|PutActualWeather (QueryFactory): 37 input initiators processed
2024-08-12 12:23:33|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:33|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:33|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:33|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:33|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:33|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:33|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:33|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:33|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:33|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:33|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:33|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:33|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:33|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:33|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723356000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    5.66,
    292.43,
    1014,
    292.45,
    288.5,
    20,
    1723356000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 5.66, temp = 292.43,
        pressure = 1014,
        feels_like = 292.45, dew_point = 288.5,
        clouds = 20, dt = 1723356000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723356000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:33|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723356000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    5.66,
    292.43,
    1014,
    292.45,
    288.5,
    20,
    1723356000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 5.66, temp = 292.43,
        pressure = 1014,
        feels_like = 292.45, dew_point = 288.5,
        clouds = 20, dt = 1723356000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723356000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:33|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:33|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:33|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:33|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:33|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:33|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:33|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:33|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:33|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:33|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:33|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:33|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:33|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:33|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:33|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723352400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    90,
    0,
    5.14,
    293.46,
    1015,
    293.5,
    288.89,
    20,
    1723352400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 5.14, temp = 293.46,
        pressure = 1015,
        feels_like = 293.5, dew_point = 288.89,
        clouds = 20, dt = 1723352400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723352400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:33|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723352400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    90,
    0,
    5.14,
    293.46,
    1015,
    293.5,
    288.89,
    20,
    1723352400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 5.14, temp = 293.46,
        pressure = 1015,
        feels_like = 293.5, dew_point = 288.89,
        clouds = 20, dt = 1723352400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723352400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:33|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:33|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:33|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:33|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:33|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:33|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:33|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:33|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:33|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:33|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:33|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:33|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:33|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:33|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:33|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723348800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    293.88,
    1014,
    293.94,
    289.08,
    20,
    1723348800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 293.88,
        pressure = 1014,
        feels_like = 293.94, dew_point = 289.08,
        clouds = 20, dt = 1723348800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723348800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:33|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723348800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    4.63,
    293.88,
    1014,
    293.94,
    289.08,
    20,
    1723348800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 4.63, temp = 293.88,
        pressure = 1014,
        feels_like = 293.94, dew_point = 289.08,
        clouds = 20, dt = 1723348800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723348800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:33|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:33|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:33|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:33|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:33|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:33|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:33|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:33|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:33|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:33|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:33|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:33|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:33|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:33|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:33|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723345200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    3.6,
    295.41,
    1014,
    295.57,
    290.12,
    20,
    1723345200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 3.6, temp = 295.41,
        pressure = 1014,
        feels_like = 295.57, dew_point = 290.12,
        clouds = 20, dt = 1723345200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723345200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:34|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723345200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    3.6,
    295.41,
    1014,
    295.57,
    290.12,
    20,
    1723345200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 3.6, temp = 295.41,
        pressure = 1014,
        feels_like = 295.57, dew_point = 290.12,
        clouds = 20, dt = 1723345200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723345200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:34|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:34|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:34|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:34|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:34|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:34|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:34|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:34|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:34|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723341600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.36,
    10000,
    140,
    0,
    3.6,
    297.5,
    1014,
    297.69,
    290.5,
    20,
    1723341600,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.36, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 3.6, temp = 297.5,
        pressure = 1014,
        feels_like = 297.69, dew_point = 290.5,
        clouds = 20, dt = 1723341600, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723341600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:34|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723341600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.36,
    10000,
    140,
    0,
    3.6,
    297.5,
    1014,
    297.69,
    290.5,
    20,
    1723341600,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.36, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 3.6, temp = 297.5,
        pressure = 1014,
        feels_like = 297.69, dew_point = 290.5,
        clouds = 20, dt = 1723341600, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723341600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:34|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:34|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:34|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:34|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:34|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:34|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:34|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:34|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:34|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723338000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.01,
    10000,
    210,
    0,
    3.6,
    297.34,
    1014,
    297.51,
    290.35,
    20,
    1723338000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.01, visibility = 10000,
        wind_deg = 210, wind_gust = 0,
        wind_speed = 3.6, temp = 297.34,
        pressure = 1014,
        feels_like = 297.51, dew_point = 290.35,
        clouds = 20, dt = 1723338000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723338000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:34|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723338000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.01,
    10000,
    210,
    0,
    3.6,
    297.34,
    1014,
    297.51,
    290.35,
    20,
    1723338000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.01, visibility = 10000,
        wind_deg = 210, wind_gust = 0,
        wind_speed = 3.6, temp = 297.34,
        pressure = 1014,
        feels_like = 297.51, dew_point = 290.35,
        clouds = 20, dt = 1723338000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723338000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:34|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:34|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:34|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:34|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:34|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:34|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:34|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_gust
2024-08-12 12:23:34|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:34|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723334400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.01,
    10000,
    200,
    10.29,
    5.14,
    297.96,
    1014,
    298.14,
    290.44,
    20,
    1723334400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.01, visibility = 10000,
        wind_deg = 200, wind_gust = 10.29,
        wind_speed = 5.14, temp = 297.96,
        pressure = 1014,
        feels_like = 298.14, dew_point = 290.44,
        clouds = 20, dt = 1723334400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723334400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:34|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723334400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.01,
    10000,
    200,
    10.29,
    5.14,
    297.96,
    1014,
    298.14,
    290.44,
    20,
    1723334400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.01, visibility = 10000,
        wind_deg = 200, wind_gust = 10.29,
        wind_speed = 5.14, temp = 297.96,
        pressure = 1014,
        feels_like = 298.14, dew_point = 290.44,
        clouds = 20, dt = 1723334400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723334400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:34|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:34|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:34|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:34|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:34|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:34|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:34|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:34|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:34|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723330800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.33,
    10000,
    240,
    0,
    5.66,
    297.08,
    1015,
    297.3,
    290.82,
    20,
    1723330800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.33, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 5.66, temp = 297.08,
        pressure = 1015,
        feels_like = 297.3, dew_point = 290.82,
        clouds = 20, dt = 1723330800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723330800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:34|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723330800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.33,
    10000,
    240,
    0,
    5.66,
    297.08,
    1015,
    297.3,
    290.82,
    20,
    1723330800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.33, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 5.66, temp = 297.08,
        pressure = 1015,
        feels_like = 297.3, dew_point = 290.82,
        clouds = 20, dt = 1723330800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723330800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:34|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:34|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:34|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:34|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:34|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:34|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:34|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:34|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:34|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:34|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:34|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:35|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723327200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.6,
    10000,
    220,
    0,
    5.14,
    297.1,
    1015,
    297.3,
    290.6,
    0,
    1723327200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.6, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 5.14, temp = 297.1,
        pressure = 1015,
        feels_like = 297.3, dew_point = 290.6,
        clouds = 0, dt = 1723327200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723327200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:35|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723327200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.6,
    10000,
    220,
    0,
    5.14,
    297.1,
    1015,
    297.3,
    290.6,
    0,
    1723327200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.6, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 5.14, temp = 297.1,
        pressure = 1015,
        feels_like = 297.3, dew_point = 290.6,
        clouds = 0, dt = 1723327200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723327200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:35|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:35|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:35|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:35|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:35|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:35|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:35|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:35|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:35|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:35|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:35|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:35|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:35|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:35|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:35|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723323600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.19,
    10000,
    0,
    0,
    3.6,
    297.47,
    1015,
    297.65,
    290.47,
    20,
    1723323600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.19, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 3.6, temp = 297.47,
        pressure = 1015,
        feels_like = 297.65, dew_point = 290.47,
        clouds = 20, dt = 1723323600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723323600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:35|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723323600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.19,
    10000,
    0,
    0,
    3.6,
    297.47,
    1015,
    297.65,
    290.47,
    20,
    1723323600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.19, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 3.6, temp = 297.47,
        pressure = 1015,
        feels_like = 297.65, dew_point = 290.47,
        clouds = 20, dt = 1723323600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723323600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:35|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:35|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:35|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:35|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:35|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:35|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:35|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:35|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:35|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:35|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:35|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:35|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:35|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:35|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:35|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723320000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.21,
    10000,
    130,
    0,
    3.09,
    297.02,
    1016,
    297.11,
    289.55,
    20,
    1723320000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.21, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 3.09, temp = 297.02,
        pressure = 1016,
        feels_like = 297.11, dew_point = 289.55,
        clouds = 20, dt = 1723320000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723320000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:35|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723320000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.21,
    10000,
    130,
    0,
    3.09,
    297.02,
    1016,
    297.11,
    289.55,
    20,
    1723320000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.21, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 3.09, temp = 297.02,
        pressure = 1016,
        feels_like = 297.11, dew_point = 289.55,
        clouds = 20, dt = 1723320000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723320000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:35|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:35|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:35|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:35|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:35|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:35|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:35|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:35|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:35|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:35|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:35|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:35|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:35|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:35|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:35|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723316400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.64,
    10000,
    160,
    0,
    3.6,
    295.91,
    1016,
    295.99,
    289.47,
    20,
    1723316400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.64, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.6, temp = 295.91,
        pressure = 1016,
        feels_like = 295.99, dew_point = 289.47,
        clouds = 20, dt = 1723316400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723316400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:35|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723316400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.64,
    10000,
    160,
    0,
    3.6,
    295.91,
    1016,
    295.99,
    289.47,
    20,
    1723316400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.64, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.6, temp = 295.91,
        pressure = 1016,
        feels_like = 295.99, dew_point = 289.47,
        clouds = 20, dt = 1723316400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723316400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:35|   1.4|  0.0|INFORM|dt
2024-08-12 12:23:35|   1.4|  0.0|INFORM|sunrise
2024-08-12 12:23:35|   1.4|  0.0|INFORM|sunset
2024-08-12 12:23:35|   1.4|  0.0|INFORM|temp
2024-08-12 12:23:35|   1.4|  0.0|INFORM|feels_like
2024-08-12 12:23:35|   1.4|  0.0|INFORM|pressure
2024-08-12 12:23:35|   1.4|  0.0|INFORM|humidity
2024-08-12 12:23:35|   1.4|  0.0|INFORM|dew_point
2024-08-12 12:23:35|   1.4|  0.0|INFORM|uvi
2024-08-12 12:23:35|   1.4|  0.0|INFORM|clouds
2024-08-12 12:23:35|   1.4|  0.0|INFORM|visibility
2024-08-12 12:23:35|   1.4|  0.0|INFORM|wind_speed
2024-08-12 12:23:35|   1.4|  0.0|INFORM|wind_deg
2024-08-12 12:23:35|   1.4|  0.0|INFORM|weather
2024-08-12 12:23:36|   1.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723312800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.69,
    10000,
    140,
    0,
    3.6,
    295.43,
    1016,
    295.49,
    289.24,
    40,
    1723312800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.69, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 3.6, temp = 295.43,
        pressure = 1016,
        feels_like = 295.49, dew_point = 289.24,
        clouds = 40, dt = 1723312800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723312800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:36|   1.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723312800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.69,
    10000,
    140,
    0,
    3.6,
    295.43,
    1016,
    295.49,
    289.24,
    40,
    1723312800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.69, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 3.6, temp = 295.43,
        pressure = 1016,
        feels_like = 295.49, dew_point = 289.24,
        clouds = 40, dt = 1723312800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723312800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:36|   1.6|  0.2|INFORM|CallCurrentWeather (HTTPFactory): [56]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 376 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [56]: HTTP Download: received 376 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [56]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 376 bytes, DNS lookup time: 0 ms, total transfer time: 152 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [62]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [62]: HTTP Download: received 384 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [62]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 153 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [60]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [60]: HTTP Download: received 384 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [60]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 154 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [64]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 376 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [64]: HTTP Download: received 376 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [64]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 376 bytes, DNS lookup time: 0 ms, total transfer time: 155 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [57]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [57]: HTTP Download: received 384 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [57]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 157 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [55]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 379 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [55]: HTTP Download: received 379 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [55]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 379 bytes, DNS lookup time: 0 ms, total transfer time: 159 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [61]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 377 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [61]: HTTP Download: received 377 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [61]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 377 bytes, DNS lookup time: 0 ms, total transfer time: 163 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [59]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 380 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [59]: HTTP Download: received 380 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [59]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 380 bytes, DNS lookup time: 0 ms, total transfer time: 167 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [70]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 411 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [70]: HTTP Download: received 411 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [70]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 411 bytes, DNS lookup time: 0 ms, total transfer time: 169 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [54]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 380 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [54]: HTTP Download: received 380 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [54]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 380 bytes, DNS lookup time: 0 ms, total transfer time: 174 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [74]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 397 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [74]: HTTP Download: received 397 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [74]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 397 bytes, DNS lookup time: 0 ms, total transfer time: 173 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [67]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 379 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [67]: HTTP Download: received 379 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [67]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 379 bytes, DNS lookup time: 0 ms, total transfer time: 175 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [75]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 397 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [75]: HTTP Download: received 397 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [75]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 397 bytes, DNS lookup time: 0 ms, total transfer time: 177 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [71]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 397 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [71]: HTTP Download: received 397 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [71]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 397 bytes, DNS lookup time: 0 ms, total transfer time: 191 ms
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [66]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 376 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [66]: HTTP Download: received 376 bytes
2024-08-12 12:23:36|   1.6|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [66]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 376 bytes, DNS lookup time: 0 ms, total transfer time: 202 ms
2024-08-12 12:23:36|   1.7|  0.1|INFORM|CallCurrentWeather (HTTPFactory): [63]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 376 bytes
2024-08-12 12:23:36|   1.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [63]: HTTP Download: received 376 bytes
2024-08-12 12:23:36|   1.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [63]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 376 bytes, DNS lookup time: 0 ms, total transfer time: 289 ms
2024-08-12 12:23:36|   1.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [52]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 380 bytes
2024-08-12 12:23:36|   1.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [52]: HTTP Download: received 380 bytes
2024-08-12 12:23:36|   1.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [52]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 380 bytes, DNS lookup time: 0 ms, total transfer time: 291 ms
2024-08-12 12:23:36|   1.7|  0.0|INFORM|dt
2024-08-12 12:23:36|   1.7|  0.0|INFORM|sunrise
2024-08-12 12:23:36|   1.7|  0.0|INFORM|sunset
2024-08-12 12:23:36|   1.7|  0.0|INFORM|temp
2024-08-12 12:23:36|   1.7|  0.0|INFORM|feels_like
2024-08-12 12:23:36|   1.7|  0.0|INFORM|pressure
2024-08-12 12:23:36|   1.7|  0.0|INFORM|humidity
2024-08-12 12:23:36|   1.7|  0.0|INFORM|dew_point
2024-08-12 12:23:36|   1.7|  0.0|INFORM|uvi
2024-08-12 12:23:36|   1.7|  0.0|INFORM|clouds
2024-08-12 12:23:36|   1.7|  0.0|INFORM|visibility
2024-08-12 12:23:36|   1.7|  0.0|INFORM|wind_speed
2024-08-12 12:23:36|   1.7|  0.0|INFORM|wind_deg
2024-08-12 12:23:36|   1.7|  0.0|INFORM|weather
2024-08-12 12:23:36|   1.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [58]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:36|   1.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [58]: HTTP Download: received 385 bytes
2024-08-12 12:23:36|   1.7|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [58]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 291 ms
2024-08-12 12:23:36|   1.8|  0.1|INFORM|CallCurrentWeather (HTTPFactory): [76]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 380 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [76]: HTTP Download: received 380 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [76]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 380 bytes, DNS lookup time: 0 ms, total transfer time: 314 ms
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [73]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 396 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [73]: HTTP Download: received 396 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [73]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 396 bytes, DNS lookup time: 0 ms, total transfer time: 318 ms
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [72]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 397 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [72]: HTTP Download: received 397 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [72]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 397 bytes, DNS lookup time: 0 ms, total transfer time: 336 ms
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [68]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 404 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [68]: HTTP Download: received 404 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [68]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 404 bytes, DNS lookup time: 0 ms, total transfer time: 339 ms
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [53]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [53]: HTTP Download: received 388 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [53]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 344 ms
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [65]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 375 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [65]: HTTP Download: received 375 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [65]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 375 bytes, DNS lookup time: 0 ms, total transfer time: 343 ms
2024-08-12 12:23:36|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723309200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.48,
    10000,
    140,
    0,
    4.12,
    293.92,
    1016,
    293.96,
    288.91,
    40,
    1723309200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.48, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 293.92,
        pressure = 1016,
        feels_like = 293.96, dew_point = 288.91,
        clouds = 40, dt = 1723309200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723309200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [69]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 411 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [69]: HTTP Download: received 411 bytes
2024-08-12 12:23:36|   1.8|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [69]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 411 bytes, DNS lookup time: 0 ms, total transfer time: 371 ms
2024-08-12 12:23:36|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723309200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.48,
    10000,
    140,
    0,
    4.12,
    293.92,
    1016,
    293.96,
    288.91,
    40,
    1723309200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.48, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 293.92,
        pressure = 1016,
        feels_like = 293.96, dew_point = 288.91,
        clouds = 40, dt = 1723309200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723309200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:36|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:36|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:36|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:36|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:36|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:36|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:36|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:36|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:36|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:36|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:36|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:36|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:36|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:36|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:36|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723305600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.36,
    10000,
    130,
    0,
    4.63,
    292.36,
    1016,
    292.37,
    288.43,
    20,
    1723305600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.36, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 292.36,
        pressure = 1016,
        feels_like = 292.37, dew_point = 288.43,
        clouds = 20, dt = 1723305600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723305600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:36|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723305600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.36,
    10000,
    130,
    0,
    4.63,
    292.36,
    1016,
    292.37,
    288.43,
    20,
    1723305600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.36, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 292.36,
        pressure = 1016,
        feels_like = 292.37, dew_point = 288.43,
        clouds = 20, dt = 1723305600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723305600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:36|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:36|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:36|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:36|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:36|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:36|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:36|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:36|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:36|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:36|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:36|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:36|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:36|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:36|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:37|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723302000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.59,
    10000,
    130,
    0,
    4.63,
    291.33,
    1016,
    291.32,
    288.02,
    40,
    1723302000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.59, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 291.33,
        pressure = 1016,
        feels_like = 291.32, dew_point = 288.02,
        clouds = 40, dt = 1723302000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723302000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:37|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723302000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.59,
    10000,
    130,
    0,
    4.63,
    291.33,
    1016,
    291.32,
    288.02,
    40,
    1723302000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.59, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 4.63, temp = 291.33,
        pressure = 1016,
        feels_like = 291.32, dew_point = 288.02,
        clouds = 40, dt = 1723302000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723302000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:37|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:37|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:37|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:37|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:37|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:37|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:37|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:37|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:37|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:37|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:37|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:37|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:37|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:37|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:37|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723298400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    100,
    0,
    3.6,
    290.09,
    1015,
    290.11,
    287.91,
    20,
    1723298400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 3.6, temp = 290.09,
        pressure = 1015,
        feels_like = 290.11, dew_point = 287.91,
        clouds = 20, dt = 1723298400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723298400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:37|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723298400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.17,
    10000,
    100,
    0,
    3.6,
    290.09,
    1015,
    290.11,
    287.91,
    20,
    1723298400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.17, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 3.6, temp = 290.09,
        pressure = 1015,
        feels_like = 290.11, dew_point = 287.91,
        clouds = 20, dt = 1723298400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723298400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:37|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:37|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:37|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:37|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:37|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:37|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:37|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:37|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:37|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:37|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:37|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:37|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:37|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:37|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:37|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723294800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    3.6,
    290.12,
    1015,
    290.14,
    287.94,
    20,
    1723294800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 3.6, temp = 290.12,
        pressure = 1015,
        feels_like = 290.14, dew_point = 287.94,
        clouds = 20, dt = 1723294800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723294800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:37|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723294800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    3.6,
    290.12,
    1015,
    290.14,
    287.94,
    20,
    1723294800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 3.6, temp = 290.12,
        pressure = 1015,
        feels_like = 290.14, dew_point = 287.94,
        clouds = 20, dt = 1723294800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723294800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:37|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:37|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:37|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:37|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:37|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:37|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:37|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:37|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:37|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:37|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:37|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:37|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:37|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:37|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:37|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723291200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    80,
    0,
    2.57,
    290.59,
    1015,
    290.69,
    288.58,
    20,
    1723291200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 80, wind_gust = 0,
        wind_speed = 2.57, temp = 290.59,
        pressure = 1015,
        feels_like = 290.69, dew_point = 288.58,
        clouds = 20, dt = 1723291200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723291200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:37|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723291200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    80,
    0,
    2.57,
    290.59,
    1015,
    290.69,
    288.58,
    20,
    1723291200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 80, wind_gust = 0,
        wind_speed = 2.57, temp = 290.59,
        pressure = 1015,
        feels_like = 290.69, dew_point = 288.58,
        clouds = 20, dt = 1723291200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723291200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:37|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:37|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:37|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:37|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:37|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:37|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:37|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:37|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:37|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:37|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:37|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:37|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:37|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:37|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:37|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723287600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    4.12,
    290.84,
    1014,
    290.94,
    288.65,
    20,
    1723287600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 290.84,
        pressure = 1014,
        feels_like = 290.94, dew_point = 288.65,
        clouds = 20, dt = 1723287600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723287600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:38|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723287600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    4.12,
    290.84,
    1014,
    290.94,
    288.65,
    20,
    1723287600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.12, temp = 290.84,
        pressure = 1014,
        feels_like = 290.94, dew_point = 288.65,
        clouds = 20, dt = 1723287600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723287600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:38|   1.8|  0.0|INFORM|PutActualWeather (QueryFactory): 57 input initiators processed
2024-08-12 12:23:38|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:38|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:38|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:38|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:38|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:38|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:38|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:38|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:38|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:38|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:38|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:38|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:38|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:38|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:38|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723284000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    3.6,
    292.1,
    1014,
    292.22,
    289.15,
    0,
    1723284000,
    0,
    0,
    'Clear',
    'clear sky'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 3.6, temp = 292.1,
        pressure = 1014,
        feels_like = 292.22, dew_point = 289.15,
        clouds = 0, dt = 1723284000, snow = 0,
        rain = 0, weather_main = 'Clear', weather_desc = 'clear sky'
    WHERE dt = 1723284000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:38|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723284000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    3.6,
    292.1,
    1014,
    292.22,
    289.15,
    0,
    1723284000,
    0,
    0,
    'Clear',
    'clear sky'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 3.6, temp = 292.1,
        pressure = 1014,
        feels_like = 292.22, dew_point = 289.15,
        clouds = 0, dt = 1723284000, snow = 0,
        rain = 0, weather_main = 'Clear', weather_desc = 'clear sky'
    WHERE dt = 1723284000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:38|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:38|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:38|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:38|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:38|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:38|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:38|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:38|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:38|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:38|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:38|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:38|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:38|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:38|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:38|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723280400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    3.09,
    292.33,
    1014,
    292.39,
    288.8,
    20,
    1723280400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 3.09, temp = 292.33,
        pressure = 1014,
        feels_like = 292.39, dew_point = 288.8,
        clouds = 20, dt = 1723280400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723280400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:38|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723280400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    3.09,
    292.33,
    1014,
    292.39,
    288.8,
    20,
    1723280400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 3.09, temp = 292.33,
        pressure = 1014,
        feels_like = 292.39, dew_point = 288.8,
        clouds = 20, dt = 1723280400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723280400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:38|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:38|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:38|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:38|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:38|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:38|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:38|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:38|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:38|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:38|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:38|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:38|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:38|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:38|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:38|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723276800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    4.63,
    292.68,
    1014,
    292.78,
    289.14,
    20,
    1723276800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.63, temp = 292.68,
        pressure = 1014,
        feels_like = 292.78, dew_point = 289.14,
        clouds = 20, dt = 1723276800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723276800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:38|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723276800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0,
    4.63,
    292.68,
    1014,
    292.78,
    289.14,
    20,
    1723276800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0,
        wind_speed = 4.63, temp = 292.68,
        pressure = 1014,
        feels_like = 292.78, dew_point = 289.14,
        clouds = 20, dt = 1723276800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723276800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:38|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:38|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:38|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:38|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:38|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:38|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:38|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:38|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:38|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:38|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:38|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:38|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:38|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:38|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:38|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723273200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    3.6,
    292.87,
    1014,
    293.04,
    289.71,
    20,
    1723273200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 3.6, temp = 292.87,
        pressure = 1014,
        feels_like = 293.04, dew_point = 289.71,
        clouds = 20, dt = 1723273200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723273200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:39|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723273200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    100,
    0,
    3.6,
    292.87,
    1014,
    293.04,
    289.71,
    20,
    1723273200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 100, wind_gust = 0,
        wind_speed = 3.6, temp = 292.87,
        pressure = 1014,
        feels_like = 293.04, dew_point = 289.71,
        clouds = 20, dt = 1723273200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723273200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:39|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:39|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:39|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:39|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:39|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:39|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:39|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:39|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:39|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:39|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:39|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:39|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:39|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:39|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:39|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723269600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    160,
    0,
    3.6,
    293.64,
    1013,
    293.78,
    289.68,
    20,
    1723269600,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.6, temp = 293.64,
        pressure = 1013,
        feels_like = 293.78, dew_point = 289.68,
        clouds = 20, dt = 1723269600, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723269600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:39|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723269600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    160,
    0,
    3.6,
    293.64,
    1013,
    293.78,
    289.68,
    20,
    1723269600,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 160, wind_gust = 0,
        wind_speed = 3.6, temp = 293.64,
        pressure = 1013,
        feels_like = 293.78, dew_point = 289.68,
        clouds = 20, dt = 1723269600, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723269600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:39|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:39|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:39|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:39|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:39|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:39|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:39|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:39|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:39|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:39|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:39|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:39|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:39|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:39|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:39|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723266000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    170,
    0,
    2.06,
    294.68,
    1013,
    294.9,
    290.48,
    20,
    1723266000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 170, wind_gust = 0,
        wind_speed = 2.06, temp = 294.68,
        pressure = 1013,
        feels_like = 294.9, dew_point = 290.48,
        clouds = 20, dt = 1723266000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723266000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:39|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723266000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    170,
    0,
    2.06,
    294.68,
    1013,
    294.9,
    290.48,
    20,
    1723266000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 170, wind_gust = 0,
        wind_speed = 2.06, temp = 294.68,
        pressure = 1013,
        feels_like = 294.9, dew_point = 290.48,
        clouds = 20, dt = 1723266000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723266000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:39|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:39|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:39|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:39|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:39|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:39|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:39|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:39|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:39|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:39|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:39|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:39|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:39|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:39|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:39|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723262400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    0,
    0,
    1.03,
    294.43,
    1013,
    294.75,
    291.23,
    20,
    1723262400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 1.03, temp = 294.43,
        pressure = 1013,
        feels_like = 294.75, dew_point = 291.23,
        clouds = 20, dt = 1723262400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723262400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:39|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723262400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    0,
    0,
    1.03,
    294.43,
    1013,
    294.75,
    291.23,
    20,
    1723262400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 1.03, temp = 294.43,
        pressure = 1013,
        feels_like = 294.75, dew_point = 291.23,
        clouds = 20, dt = 1723262400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723262400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:39|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:39|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:39|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:39|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:39|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:39|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:39|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:39|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:39|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:39|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:39|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:39|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:39|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:39|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:39|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723258800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    210,
    0,
    2.57,
    295.9,
    1012,
    296.37,
    292.67,
    20,
    1723258800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 210, wind_gust = 0,
        wind_speed = 2.57, temp = 295.9,
        pressure = 1012,
        feels_like = 296.37, dew_point = 292.67,
        clouds = 20, dt = 1723258800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723258800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:40|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723258800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    210,
    0,
    2.57,
    295.9,
    1012,
    296.37,
    292.67,
    20,
    1723258800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 210, wind_gust = 0,
        wind_speed = 2.57, temp = 295.9,
        pressure = 1012,
        feels_like = 296.37, dew_point = 292.67,
        clouds = 20, dt = 1723258800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723258800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:40|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:40|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:40|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:40|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:40|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:40|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:40|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:40|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:40|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:40|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:40|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:40|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:40|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723255200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.31,
    10000,
    220,
    0,
    3.6,
    296.77,
    1013,
    297.15,
    292.08,
    20,
    1723255200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.31, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 3.6, temp = 296.77,
        pressure = 1013,
        feels_like = 297.15, dew_point = 292.08,
        clouds = 20, dt = 1723255200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723255200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:40|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723255200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.31,
    10000,
    220,
    0,
    3.6,
    296.77,
    1013,
    297.15,
    292.08,
    20,
    1723255200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.31, visibility = 10000,
        wind_deg = 220, wind_gust = 0,
        wind_speed = 3.6, temp = 296.77,
        pressure = 1013,
        feels_like = 297.15, dew_point = 292.08,
        clouds = 20, dt = 1723255200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723255200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:40|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:40|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:40|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:40|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:40|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:40|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:40|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:40|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:40|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:40|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:40|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_gust
2024-08-12 12:23:40|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:40|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723251600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.87,
    10000,
    251,
    5.36,
    4.02,
    298.3,
    1012,
    298.62,
    291.74,
    20,
    1723251600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.87, visibility = 10000,
        wind_deg = 251, wind_gust = 5.36,
        wind_speed = 4.02, temp = 298.3,
        pressure = 1012,
        feels_like = 298.62, dew_point = 291.74,
        clouds = 20, dt = 1723251600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723251600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:40|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723251600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.87,
    10000,
    251,
    5.36,
    4.02,
    298.3,
    1012,
    298.62,
    291.74,
    20,
    1723251600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.87, visibility = 10000,
        wind_deg = 251, wind_gust = 5.36,
        wind_speed = 4.02, temp = 298.3,
        pressure = 1012,
        feels_like = 298.62, dew_point = 291.74,
        clouds = 20, dt = 1723251600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723251600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:40|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:40|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:40|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:40|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:40|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:40|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:40|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:40|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:40|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:40|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:40|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_gust
2024-08-12 12:23:40|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:40|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723248000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.79,
    10000,
    261,
    5.81,
    4.92,
    299.31,
    1013,
    299.31,
    290.94,
    40,
    1723248000,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.79, visibility = 10000,
        wind_deg = 261, wind_gust = 5.81,
        wind_speed = 4.92, temp = 299.31,
        pressure = 1013,
        feels_like = 299.31, dew_point = 290.94,
        clouds = 40, dt = 1723248000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723248000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:40|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723248000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.79,
    10000,
    261,
    5.81,
    4.92,
    299.31,
    1013,
    299.31,
    290.94,
    40,
    1723248000,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.79, visibility = 10000,
        wind_deg = 261, wind_gust = 5.81,
        wind_speed = 4.92, temp = 299.31,
        pressure = 1013,
        feels_like = 299.31, dew_point = 290.94,
        clouds = 40, dt = 1723248000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723248000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:40|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:40|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:40|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:40|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:40|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:40|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:40|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:40|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:40|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:40|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:40|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:40|   1.8|  0.0|INFORM|wind_gust
2024-08-12 12:23:40|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:40|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723244400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.02,
    10000,
    260,
    6.26,
    4.92,
    298.73,
    1013,
    298.99,
    291.17,
    40,
    1723244400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.02, visibility = 10000,
        wind_deg = 260, wind_gust = 6.26,
        wind_speed = 4.92, temp = 298.73,
        pressure = 1013,
        feels_like = 298.99, dew_point = 291.17,
        clouds = 40, dt = 1723244400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723244400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:41|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723244400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.02,
    10000,
    260,
    6.26,
    4.92,
    298.73,
    1013,
    298.99,
    291.17,
    40,
    1723244400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.02, visibility = 10000,
        wind_deg = 260, wind_gust = 6.26,
        wind_speed = 4.92, temp = 298.73,
        pressure = 1013,
        feels_like = 298.99, dew_point = 291.17,
        clouds = 40, dt = 1723244400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723244400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:41|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:41|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:41|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:41|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:41|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:41|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:41|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:41|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:41|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:41|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:41|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_gust
2024-08-12 12:23:41|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:41|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723240800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.26,
    10000,
    259,
    6.71,
    5.81,
    298.86,
    1014,
    299.16,
    291.54,
    40,
    1723240800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.26, visibility = 10000,
        wind_deg = 259, wind_gust = 6.71,
        wind_speed = 5.81, temp = 298.86,
        pressure = 1014,
        feels_like = 299.16, dew_point = 291.54,
        clouds = 40, dt = 1723240800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723240800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:41|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723240800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.26,
    10000,
    259,
    6.71,
    5.81,
    298.86,
    1014,
    299.16,
    291.54,
    40,
    1723240800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.26, visibility = 10000,
        wind_deg = 259, wind_gust = 6.71,
        wind_speed = 5.81, temp = 298.86,
        pressure = 1014,
        feels_like = 299.16, dew_point = 291.54,
        clouds = 40, dt = 1723240800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723240800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:41|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:41|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:41|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:41|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:41|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:41|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:41|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:41|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:41|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:41|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:41|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_gust
2024-08-12 12:23:41|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:41|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723237200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.02,
    10000,
    266,
    6.71,
    5.81,
    297.65,
    1014,
    297.93,
    291.36,
    40,
    1723237200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.02, visibility = 10000,
        wind_deg = 266, wind_gust = 6.71,
        wind_speed = 5.81, temp = 297.65,
        pressure = 1014,
        feels_like = 297.93, dew_point = 291.36,
        clouds = 40, dt = 1723237200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723237200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:41|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723237200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.02,
    10000,
    266,
    6.71,
    5.81,
    297.65,
    1014,
    297.93,
    291.36,
    40,
    1723237200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.02, visibility = 10000,
        wind_deg = 266, wind_gust = 6.71,
        wind_speed = 5.81, temp = 297.65,
        pressure = 1014,
        feels_like = 297.93, dew_point = 291.36,
        clouds = 40, dt = 1723237200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723237200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:41|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:41|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:41|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:41|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:41|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:41|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:41|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:41|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:41|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:41|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:41|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_gust
2024-08-12 12:23:41|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:41|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723233600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.2,
    10000,
    255,
    6.26,
    5.36,
    296.59,
    1015,
    296.95,
    291.91,
    20,
    1723233600,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.2, visibility = 10000,
        wind_deg = 255, wind_gust = 6.26,
        wind_speed = 5.36, temp = 296.59,
        pressure = 1015,
        feels_like = 296.95, dew_point = 291.91,
        clouds = 20, dt = 1723233600, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723233600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:41|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723233600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.2,
    10000,
    255,
    6.26,
    5.36,
    296.59,
    1015,
    296.95,
    291.91,
    20,
    1723233600,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.2, visibility = 10000,
        wind_deg = 255, wind_gust = 6.26,
        wind_speed = 5.36, temp = 296.59,
        pressure = 1015,
        feels_like = 296.95, dew_point = 291.91,
        clouds = 20, dt = 1723233600, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723233600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:41|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:41|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:41|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:41|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:41|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:41|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:41|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:41|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:41|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:41|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:41|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:41|   1.8|  0.0|INFORM|wind_gust
2024-08-12 12:23:41|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:41|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723230000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.71,
    10000,
    260,
    5.81,
    4.92,
    296.22,
    1015,
    296.57,
    291.76,
    20,
    1723230000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.71, visibility = 10000,
        wind_deg = 260, wind_gust = 5.81,
        wind_speed = 4.92, temp = 296.22,
        pressure = 1015,
        feels_like = 296.57, dew_point = 291.76,
        clouds = 20, dt = 1723230000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723230000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:42|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723230000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.71,
    10000,
    260,
    5.81,
    4.92,
    296.22,
    1015,
    296.57,
    291.76,
    20,
    1723230000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.71, visibility = 10000,
        wind_deg = 260, wind_gust = 5.81,
        wind_speed = 4.92, temp = 296.22,
        pressure = 1015,
        feels_like = 296.57, dew_point = 291.76,
        clouds = 20, dt = 1723230000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723230000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:42|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:42|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:42|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:42|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:42|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:42|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:42|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:42|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:42|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:42|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:42|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:42|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:42|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:42|   1.8|  0.0|INFORM|wind_gust
2024-08-12 12:23:42|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:42|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723226400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.65,
    10000,
    259,
    5.36,
    4.92,
    295.82,
    1015,
    296.05,
    290.73,
    20,
    1723226400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.65, visibility = 10000,
        wind_deg = 259, wind_gust = 5.36,
        wind_speed = 4.92, temp = 295.82,
        pressure = 1015,
        feels_like = 296.05, dew_point = 290.73,
        clouds = 20, dt = 1723226400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723226400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:42|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723226400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.65,
    10000,
    259,
    5.36,
    4.92,
    295.82,
    1015,
    296.05,
    290.73,
    20,
    1723226400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.65, visibility = 10000,
        wind_deg = 259, wind_gust = 5.36,
        wind_speed = 4.92, temp = 295.82,
        pressure = 1015,
        feels_like = 296.05, dew_point = 290.73,
        clouds = 20, dt = 1723226400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723226400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:42|   1.8|  0.0|INFORM|dt
2024-08-12 12:23:42|   1.8|  0.0|INFORM|sunrise
2024-08-12 12:23:42|   1.8|  0.0|INFORM|sunset
2024-08-12 12:23:42|   1.8|  0.0|INFORM|temp
2024-08-12 12:23:42|   1.8|  0.0|INFORM|feels_like
2024-08-12 12:23:42|   1.8|  0.0|INFORM|pressure
2024-08-12 12:23:42|   1.8|  0.0|INFORM|humidity
2024-08-12 12:23:42|   1.8|  0.0|INFORM|dew_point
2024-08-12 12:23:42|   1.8|  0.0|INFORM|uvi
2024-08-12 12:23:42|   1.8|  0.0|INFORM|clouds
2024-08-12 12:23:42|   1.8|  0.0|INFORM|visibility
2024-08-12 12:23:42|   1.8|  0.0|INFORM|wind_speed
2024-08-12 12:23:42|   1.8|  0.0|INFORM|wind_deg
2024-08-12 12:23:42|   1.8|  0.0|INFORM|weather
2024-08-12 12:23:42|   1.8|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723222800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.42,
    10000,
    240,
    0,
    3.09,
    295.28,
    1015,
    295.51,
    290.64,
    20,
    1723222800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.42, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 3.09, temp = 295.28,
        pressure = 1015,
        feels_like = 295.51, dew_point = 290.64,
        clouds = 20, dt = 1723222800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723222800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:42|   1.8|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723222800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.42,
    10000,
    240,
    0,
    3.09,
    295.28,
    1015,
    295.51,
    290.64,
    20,
    1723222800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.42, visibility = 10000,
        wind_deg = 240, wind_gust = 0,
        wind_speed = 3.09, temp = 295.28,
        pressure = 1015,
        feels_like = 295.51, dew_point = 290.64,
        clouds = 20, dt = 1723222800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723222800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:42|   2.0|  0.2|INFORM|CallCurrentWeather (HTTPFactory): [83]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 391 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [83]: HTTP Download: received 391 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [83]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 391 bytes, DNS lookup time: 0 ms, total transfer time: 179 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [79]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 379 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [79]: HTTP Download: received 379 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [79]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 379 bytes, DNS lookup time: 0 ms, total transfer time: 186 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [81]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [81]: HTTP Download: received 385 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [81]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 187 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [89]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 376 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [89]: HTTP Download: received 376 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [89]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 376 bytes, DNS lookup time: 0 ms, total transfer time: 188 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [101]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 379 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [101]: HTTP Download: received 379 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [101]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 379 bytes, DNS lookup time: 0 ms, total transfer time: 190 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [85]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [85]: HTTP Download: received 385 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [85]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 193 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [93]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 411 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [93]: HTTP Download: received 411 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [93]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 411 bytes, DNS lookup time: 0 ms, total transfer time: 200 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [80]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 377 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [80]: HTTP Download: received 377 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [80]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 377 bytes, DNS lookup time: 0 ms, total transfer time: 203 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [97]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 405 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [97]: HTTP Download: received 405 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [97]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 405 bytes, DNS lookup time: 0 ms, total transfer time: 201 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [88]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [88]: HTTP Download: received 384 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [98]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 405 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [98]: HTTP Download: received 405 bytes
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [88]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 202 ms
2024-08-12 12:23:42|   2.0|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [98]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 405 bytes, DNS lookup time: 0 ms, total transfer time: 201 ms
2024-08-12 12:23:42|   2.1|  0.1|INFORM|CallCurrentWeather (HTTPFactory): [78]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 388 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [78]: HTTP Download: received 388 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [78]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 388 bytes, DNS lookup time: 0 ms, total transfer time: 220 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [87]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [87]: HTTP Download: received 385 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [87]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 222 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [95]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 411 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [95]: HTTP Download: received 411 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [95]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 411 bytes, DNS lookup time: 0 ms, total transfer time: 228 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [77]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 377 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [77]: HTTP Download: received 377 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [77]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 377 bytes, DNS lookup time: 5 ms, total transfer time: 322 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:42|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:42|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:42|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:42|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:42|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:42|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:42|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:42|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:42|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:42|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:42|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:42|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:42|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [82]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 385 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [82]: HTTP Download: received 385 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [82]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 385 bytes, DNS lookup time: 0 ms, total transfer time: 323 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [92]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 411 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [92]: HTTP Download: received 411 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [92]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 411 bytes, DNS lookup time: 0 ms, total transfer time: 328 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [84]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [84]: HTTP Download: received 384 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [84]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 331 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [86]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 384 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [86]: HTTP Download: received 384 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [86]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 384 bytes, DNS lookup time: 0 ms, total transfer time: 331 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [94]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 411 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [94]: HTTP Download: received 411 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [94]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 411 bytes, DNS lookup time: 0 ms, total transfer time: 335 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [90]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 377 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [90]: HTTP Download: received 377 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [90]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 377 bytes, DNS lookup time: 0 ms, total transfer time: 339 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [99]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 403 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [99]: HTTP Download: received 403 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [99]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 403 bytes, DNS lookup time: 0 ms, total transfer time: 340 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [91]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 405 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [91]: HTTP Download: received 405 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [91]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 405 bytes, DNS lookup time: 0 ms, total transfer time: 356 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [100]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 377 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [100]: HTTP Download: received 377 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [100]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 377 bytes, DNS lookup time: 0 ms, total transfer time: 364 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [96]: Starting HTTP download from 'api.openweathermap.org'. Expected transfer size: 403 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [96]: HTTP Download: received 403 bytes
2024-08-12 12:23:42|   2.1|  0.0|INFORM|CallCurrentWeather (HTTPFactory): [96]: HTTP transfer summary (api.openweathermap.org): status code: 200, download size: 403 bytes, DNS lookup time: 0 ms, total transfer time: 368 ms
2024-08-12 12:23:42|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723219200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.32,
    10000,
    0,
    0,
    1.03,
    294.3,
    1015,
    294.59,
    290.91,
    20,
    1723219200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.32, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 1.03, temp = 294.3,
        pressure = 1015,
        feels_like = 294.59, dew_point = 290.91,
        clouds = 20, dt = 1723219200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723219200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:42|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723219200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.32,
    10000,
    0,
    0,
    1.03,
    294.3,
    1015,
    294.59,
    290.91,
    20,
    1723219200,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.32, visibility = 10000,
        wind_deg = 0, wind_gust = 0,
        wind_speed = 1.03, temp = 294.3,
        pressure = 1015,
        feels_like = 294.59, dew_point = 290.91,
        clouds = 20, dt = 1723219200, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723219200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:42|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:42|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:42|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:42|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:42|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:42|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:42|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:42|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:42|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:42|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:42|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:42|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:42|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:42|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:43|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723215600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.61,
    10000,
    110,
    0,
    3.09,
    293.22,
    1014,
    293.45,
    290.24,
    20,
    1723215600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.61, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 3.09, temp = 293.22,
        pressure = 1014,
        feels_like = 293.45, dew_point = 290.24,
        clouds = 20, dt = 1723215600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723215600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:43|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723215600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.61,
    10000,
    110,
    0,
    3.09,
    293.22,
    1014,
    293.45,
    290.24,
    20,
    1723215600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.61, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 3.09, temp = 293.22,
        pressure = 1014,
        feels_like = 293.45, dew_point = 290.24,
        clouds = 20, dt = 1723215600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723215600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:43|   2.1|  0.0|INFORM|PutActualWeather (QueryFactory): 77 input initiators processed
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:43|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:43|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:43|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:43|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:43|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:43|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:43|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:43|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:43|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723212000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.18,
    10000,
    90,
    0,
    1.03,
    290.72,
    1014,
    290.88,
    289.06,
    20,
    1723212000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.18, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 1.03, temp = 290.72,
        pressure = 1014,
        feels_like = 290.88, dew_point = 289.06,
        clouds = 20, dt = 1723212000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723212000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:43|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723212000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.18,
    10000,
    90,
    0,
    1.03,
    290.72,
    1014,
    290.88,
    289.06,
    20,
    1723212000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.18, visibility = 10000,
        wind_deg = 90, wind_gust = 0,
        wind_speed = 1.03, temp = 290.72,
        pressure = 1014,
        feels_like = 290.88, dew_point = 289.06,
        clouds = 20, dt = 1723212000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723212000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:43|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:43|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:43|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:43|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:43|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:43|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:43|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:43|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:43|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723208400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    2.06,
    290.17,
    1014,
    290.28,
    288.52,
    20,
    1723208400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 2.06, temp = 290.17,
        pressure = 1014,
        feels_like = 290.28, dew_point = 288.52,
        clouds = 20, dt = 1723208400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723208400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:43|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723208400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    2.06,
    290.17,
    1014,
    290.28,
    288.52,
    20,
    1723208400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 2.06, temp = 290.17,
        pressure = 1014,
        feels_like = 290.28, dew_point = 288.52,
        clouds = 20, dt = 1723208400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723208400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:43|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:43|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:43|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:43|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:43|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:43|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:43|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:43|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:43|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723204800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    3.09,
    290.41,
    1014,
    290.52,
    288.58,
    20,
    1723204800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 3.09, temp = 290.41,
        pressure = 1014,
        feels_like = 290.52, dew_point = 288.58,
        clouds = 20, dt = 1723204800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723204800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:43|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723204800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    130,
    0,
    3.09,
    290.41,
    1014,
    290.52,
    288.58,
    20,
    1723204800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 130, wind_gust = 0,
        wind_speed = 3.09, temp = 290.41,
        pressure = 1014,
        feels_like = 290.52, dew_point = 288.58,
        clouds = 20, dt = 1723204800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723204800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:43|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:43|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:43|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:43|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:43|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:43|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:43|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:43|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:43|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723201200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    2.06,
    290.48,
    1013,
    290.59,
    288.65,
    20,
    1723201200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 2.06, temp = 290.48,
        pressure = 1013,
        feels_like = 290.59, dew_point = 288.65,
        clouds = 20, dt = 1723201200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723201200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:43|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723201200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    2.06,
    290.48,
    1013,
    290.59,
    288.65,
    20,
    1723201200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 2.06, temp = 290.48,
        pressure = 1013,
        feels_like = 290.59, dew_point = 288.65,
        clouds = 20, dt = 1723201200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723201200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:43|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:43|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:43|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:43|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:43|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:43|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:43|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:43|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:43|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:43|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:43|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:44|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723197600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    3.09,
    290.74,
    1013,
    290.96,
    289.43,
    40,
    1723197600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 3.09, temp = 290.74,
        pressure = 1013,
        feels_like = 290.96, dew_point = 289.43,
        clouds = 40, dt = 1723197600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723197600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:44|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723197600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    3.09,
    290.74,
    1013,
    290.96,
    289.43,
    40,
    1723197600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 3.09, temp = 290.74,
        pressure = 1013,
        feels_like = 290.96, dew_point = 289.43,
        clouds = 40, dt = 1723197600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723197600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:44|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:44|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:44|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:44|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:44|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:44|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:44|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:44|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:44|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723194000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    3.6,
    292.07,
    1014,
    292.29,
    289.86,
    20,
    1723194000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 3.6, temp = 292.07,
        pressure = 1014,
        feels_like = 292.29, dew_point = 289.86,
        clouds = 20, dt = 1723194000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723194000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:44|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723194000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    110,
    0,
    3.6,
    292.07,
    1014,
    292.29,
    289.86,
    20,
    1723194000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 110, wind_gust = 0,
        wind_speed = 3.6, temp = 292.07,
        pressure = 1014,
        feels_like = 292.29, dew_point = 289.86,
        clouds = 20, dt = 1723194000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723194000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:44|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:44|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:44|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:44|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:44|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:44|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:44|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:44|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:44|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723190400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    1.54,
    292.19,
    1013,
    292.47,
    290.34,
    20,
    1723190400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 1.54, temp = 292.19,
        pressure = 1013,
        feels_like = 292.47, dew_point = 290.34,
        clouds = 20, dt = 1723190400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723190400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:44|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723190400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    0,
    1.54,
    292.19,
    1013,
    292.47,
    290.34,
    20,
    1723190400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 0,
        wind_speed = 1.54, temp = 292.19,
        pressure = 1013,
        feels_like = 292.47, dew_point = 290.34,
        clouds = 20, dt = 1723190400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723190400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:44|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:44|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:44|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:44|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:44|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:44|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:44|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:44|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:44|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723186800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    1.54,
    292.9,
    1013,
    293.07,
    289.74,
    20,
    1723186800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 1.54, temp = 292.9,
        pressure = 1013,
        feels_like = 293.07, dew_point = 289.74,
        clouds = 20, dt = 1723186800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723186800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:44|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723186800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    1.54,
    292.9,
    1013,
    293.07,
    289.74,
    20,
    1723186800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 1.54, temp = 292.9,
        pressure = 1013,
        feels_like = 293.07, dew_point = 289.74,
        clouds = 20, dt = 1723186800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723186800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:44|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:44|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:44|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:44|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:44|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:44|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:44|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:44|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:44|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723183200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    1.54,
    293.07,
    1013,
    293.26,
    289.91,
    20,
    1723183200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 1.54, temp = 293.07,
        pressure = 1013,
        feels_like = 293.26, dew_point = 289.91,
        clouds = 20, dt = 1723183200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723183200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:44|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723183200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    1.54,
    293.07,
    1013,
    293.26,
    289.91,
    20,
    1723183200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 1.54, temp = 293.07,
        pressure = 1013,
        feels_like = 293.26, dew_point = 289.91,
        clouds = 20, dt = 1723183200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723183200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:44|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:44|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:44|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:44|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:44|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:44|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:44|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:44|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:44|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:44|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:44|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:45|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723179600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    3.09,
    293.59,
    1012,
    293.8,
    290.22,
    20,
    1723179600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 3.09, temp = 293.59,
        pressure = 1012,
        feels_like = 293.8, dew_point = 290.22,
        clouds = 20, dt = 1723179600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723179600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:45|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723179600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    250,
    0,
    3.09,
    293.59,
    1012,
    293.8,
    290.22,
    20,
    1723179600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 250, wind_gust = 0,
        wind_speed = 3.09, temp = 293.59,
        pressure = 1012,
        feels_like = 293.8, dew_point = 290.22,
        clouds = 20, dt = 1723179600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723179600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:45|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:45|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:45|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:45|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:45|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:45|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:45|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:45|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:45|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723176000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    3.09,
    294.81,
    1012,
    295.02,
    290.4,
    20,
    1723176000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 3.09, temp = 294.81,
        pressure = 1012,
        feels_like = 295.02, dew_point = 290.4,
        clouds = 20, dt = 1723176000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723176000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:45|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723176000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    3.09,
    294.81,
    1012,
    295.02,
    290.4,
    20,
    1723176000,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 3.09, temp = 294.81,
        pressure = 1012,
        feels_like = 295.02, dew_point = 290.4,
        clouds = 20, dt = 1723176000, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723176000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:45|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:45|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:45|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:45|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:45|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:45|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:45|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:45|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:45|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723172400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    3.09,
    296.52,
    1012,
    296.79,
    291.19,
    20,
    1723172400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 3.09, temp = 296.52,
        pressure = 1012,
        feels_like = 296.79, dew_point = 291.19,
        clouds = 20, dt = 1723172400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723172400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:45|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723172400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    270,
    0,
    3.09,
    296.52,
    1012,
    296.79,
    291.19,
    20,
    1723172400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0, visibility = 10000,
        wind_deg = 270, wind_gust = 0,
        wind_speed = 3.09, temp = 296.52,
        pressure = 1012,
        feels_like = 296.79, dew_point = 291.19,
        clouds = 20, dt = 1723172400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723172400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:45|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:45|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:45|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:45|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:45|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:45|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:45|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:45|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:45|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723168800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.34,
    10000,
    247,
    4.92,
    4.02,
    297.22,
    1012,
    297.59,
    292.08,
    20,
    1723168800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.34, visibility = 10000,
        wind_deg = 247, wind_gust = 4.92,
        wind_speed = 4.02, temp = 297.22,
        pressure = 1012,
        feels_like = 297.59, dew_point = 292.08,
        clouds = 20, dt = 1723168800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723168800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:45|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723168800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.34,
    10000,
    247,
    4.92,
    4.02,
    297.22,
    1012,
    297.59,
    292.08,
    20,
    1723168800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.34, visibility = 10000,
        wind_deg = 247, wind_gust = 4.92,
        wind_speed = 4.02, temp = 297.22,
        pressure = 1012,
        feels_like = 297.59, dew_point = 292.08,
        clouds = 20, dt = 1723168800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723168800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:45|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:45|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:45|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:45|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:45|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:45|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:45|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:45|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:45|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723165200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.96,
    10000,
    262,
    5.81,
    4.92,
    297.44,
    1012,
    297.78,
    291.85,
    40,
    1723165200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.96, visibility = 10000,
        wind_deg = 262, wind_gust = 5.81,
        wind_speed = 4.92, temp = 297.44,
        pressure = 1012,
        feels_like = 297.78, dew_point = 291.85,
        clouds = 40, dt = 1723165200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723165200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:45|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723165200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.96,
    10000,
    262,
    5.81,
    4.92,
    297.44,
    1012,
    297.78,
    291.85,
    40,
    1723165200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 0.96, visibility = 10000,
        wind_deg = 262, wind_gust = 5.81,
        wind_speed = 4.92, temp = 297.44,
        pressure = 1012,
        feels_like = 297.78, dew_point = 291.85,
        clouds = 40, dt = 1723165200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723165200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:45|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:45|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:45|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:45|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:45|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:45|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:45|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:45|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:45|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:45|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:45|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:46|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723161600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.94,
    10000,
    258,
    6.26,
    5.36,
    297.68,
    1013,
    298.02,
    291.85,
    40,
    1723161600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.94, visibility = 10000,
        wind_deg = 258, wind_gust = 6.26,
        wind_speed = 5.36, temp = 297.68,
        pressure = 1013,
        feels_like = 298.02, dew_point = 291.85,
        clouds = 40, dt = 1723161600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723161600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:46|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723161600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.94,
    10000,
    258,
    6.26,
    5.36,
    297.68,
    1013,
    298.02,
    291.85,
    40,
    1723161600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.94, visibility = 10000,
        wind_deg = 258, wind_gust = 6.26,
        wind_speed = 5.36, temp = 297.68,
        pressure = 1013,
        feels_like = 298.02, dew_point = 291.85,
        clouds = 40, dt = 1723161600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723161600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:46|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:46|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:46|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:46|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:46|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:46|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:46|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:46|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:46|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:46|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:46|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:46|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:46|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723158000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.29,
    10000,
    258,
    5.81,
    5.36,
    298.38,
    1014,
    298.68,
    291.58,
    40,
    1723158000,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.29, visibility = 10000,
        wind_deg = 258, wind_gust = 5.81,
        wind_speed = 5.36, temp = 298.38,
        pressure = 1014,
        feels_like = 298.68, dew_point = 291.58,
        clouds = 40, dt = 1723158000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723158000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:46|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723158000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.29,
    10000,
    258,
    5.81,
    5.36,
    298.38,
    1014,
    298.68,
    291.58,
    40,
    1723158000,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 3.29, visibility = 10000,
        wind_deg = 258, wind_gust = 5.81,
        wind_speed = 5.36, temp = 298.38,
        pressure = 1014,
        feels_like = 298.68, dew_point = 291.58,
        clouds = 40, dt = 1723158000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723158000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:46|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:46|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:46|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:46|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:46|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:46|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:46|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:46|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:46|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:46|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:46|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:46|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:46|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723154400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.58,
    10000,
    259,
    6.71,
    5.81,
    298.05,
    1014,
    298.37,
    291.74,
    40,
    1723154400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.58, visibility = 10000,
        wind_deg = 259, wind_gust = 6.71,
        wind_speed = 5.81, temp = 298.05,
        pressure = 1014,
        feels_like = 298.37, dew_point = 291.74,
        clouds = 40, dt = 1723154400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723154400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:46|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723154400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.58,
    10000,
    259,
    6.71,
    5.81,
    298.05,
    1014,
    298.37,
    291.74,
    40,
    1723154400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.58, visibility = 10000,
        wind_deg = 259, wind_gust = 6.71,
        wind_speed = 5.81, temp = 298.05,
        pressure = 1014,
        feels_like = 298.37, dew_point = 291.74,
        clouds = 40, dt = 1723154400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723154400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:46|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:46|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:46|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:46|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:46|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:46|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:46|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:46|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:46|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:46|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:46|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:46|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:46|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723150800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.4,
    10000,
    274,
    4.92,
    4.02,
    297.45,
    1015,
    297.74,
    291.4,
    20,
    1723150800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.4, visibility = 10000,
        wind_deg = 274, wind_gust = 4.92,
        wind_speed = 4.02, temp = 297.45,
        pressure = 1015,
        feels_like = 297.74, dew_point = 291.4,
        clouds = 20, dt = 1723150800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723150800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:46|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723150800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.4,
    10000,
    274,
    4.92,
    4.02,
    297.45,
    1015,
    297.74,
    291.4,
    20,
    1723150800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.4, visibility = 10000,
        wind_deg = 274, wind_gust = 4.92,
        wind_speed = 4.02, temp = 297.45,
        pressure = 1015,
        feels_like = 297.74, dew_point = 291.4,
        clouds = 20, dt = 1723150800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723150800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:46|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:46|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:46|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:46|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:46|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:46|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:46|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:46|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:46|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:46|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:46|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:46|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:46|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:46|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723147200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.49,
    10000,
    262,
    4.92,
    4.47,
    296.72,
    1016,
    296.99,
    291.16,
    20,
    1723147200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.49, visibility = 10000,
        wind_deg = 262, wind_gust = 4.92,
        wind_speed = 4.47, temp = 296.72,
        pressure = 1016,
        feels_like = 296.99, dew_point = 291.16,
        clouds = 20, dt = 1723147200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723147200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:47|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723147200)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.49,
    10000,
    262,
    4.92,
    4.47,
    296.72,
    1016,
    296.99,
    291.16,
    20,
    1723147200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.49, visibility = 10000,
        wind_deg = 262, wind_gust = 4.92,
        wind_speed = 4.47, temp = 296.72,
        pressure = 1016,
        feels_like = 296.99, dew_point = 291.16,
        clouds = 20, dt = 1723147200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723147200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:47|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:47|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:47|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:47|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:47|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:47|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:47|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:47|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:47|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:47|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:47|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:47|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:47|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723143600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.06,
    10000,
    261,
    6.71,
    5.81,
    296.36,
    1016,
    296.67,
    291.47,
    20,
    1723143600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.06, visibility = 10000,
        wind_deg = 261, wind_gust = 6.71,
        wind_speed = 5.81, temp = 296.36,
        pressure = 1016,
        feels_like = 296.67, dew_point = 291.47,
        clouds = 20, dt = 1723143600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723143600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:47|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723143600)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (5.06,
    10000,
    261,
    6.71,
    5.81,
    296.36,
    1016,
    296.67,
    291.47,
    20,
    1723143600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 5.06, visibility = 10000,
        wind_deg = 261, wind_gust = 6.71,
        wind_speed = 5.81, temp = 296.36,
        pressure = 1016,
        feels_like = 296.67, dew_point = 291.47,
        clouds = 20, dt = 1723143600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723143600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:47|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:47|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:47|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:47|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:47|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:47|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:47|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:47|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:47|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:47|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:47|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_gust
2024-08-12 12:23:47|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:47|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723140000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.45,
    10000,
    272,
    5.81,
    4.92,
    295.5,
    1016,
    295.8,
    291.27,
    20,
    1723140000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.45, visibility = 10000,
        wind_deg = 272, wind_gust = 5.81,
        wind_speed = 4.92, temp = 295.5,
        pressure = 1016,
        feels_like = 295.8, dew_point = 291.27,
        clouds = 20, dt = 1723140000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723140000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:47|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723140000)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (4.45,
    10000,
    272,
    5.81,
    4.92,
    295.5,
    1016,
    295.8,
    291.27,
    20,
    1723140000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 4.45, visibility = 10000,
        wind_deg = 272, wind_gust = 5.81,
        wind_speed = 4.92, temp = 295.5,
        pressure = 1016,
        feels_like = 295.8, dew_point = 291.27,
        clouds = 20, dt = 1723140000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723140000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:47|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:47|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:47|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:47|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:47|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:47|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:47|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:47|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:47|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:47|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:47|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:47|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:47|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723136400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.97,
    10000,
    330,
    0,
    3.6,
    294.4,
    1016,
    294.7,
    291.01,
    20,
    1723136400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.97, visibility = 10000,
        wind_deg = 330, wind_gust = 0,
        wind_speed = 3.6, temp = 294.4,
        pressure = 1016,
        feels_like = 294.7, dew_point = 291.01,
        clouds = 20, dt = 1723136400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723136400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:47|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723136400)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.97,
    10000,
    330,
    0,
    3.6,
    294.4,
    1016,
    294.7,
    291.01,
    20,
    1723136400,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 2.97, visibility = 10000,
        wind_deg = 330, wind_gust = 0,
        wind_speed = 3.6, temp = 294.4,
        pressure = 1016,
        feels_like = 294.7, dew_point = 291.01,
        clouds = 20, dt = 1723136400, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723136400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:47|   2.1|  0.0|INFORM|dt
2024-08-12 12:23:47|   2.1|  0.0|INFORM|sunrise
2024-08-12 12:23:47|   2.1|  0.0|INFORM|sunset
2024-08-12 12:23:47|   2.1|  0.0|INFORM|temp
2024-08-12 12:23:47|   2.1|  0.0|INFORM|feels_like
2024-08-12 12:23:47|   2.1|  0.0|INFORM|pressure
2024-08-12 12:23:47|   2.1|  0.0|INFORM|humidity
2024-08-12 12:23:47|   2.1|  0.0|INFORM|dew_point
2024-08-12 12:23:47|   2.1|  0.0|INFORM|uvi
2024-08-12 12:23:47|   2.1|  0.0|INFORM|clouds
2024-08-12 12:23:47|   2.1|  0.0|INFORM|visibility
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_speed
2024-08-12 12:23:47|   2.1|  0.0|INFORM|wind_deg
2024-08-12 12:23:47|   2.1|  0.0|INFORM|weather
2024-08-12 12:23:47|   2.1|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723132800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.64,
    10000,
    230,
    0,
    1.54,
    293.1,
    1016,
    293.32,
    290.13,
    20,
    1723132800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.64, visibility = 10000,
        wind_deg = 230, wind_gust = 0,
        wind_speed = 1.54, temp = 293.1,
        pressure = 1016,
        feels_like = 293.32, dew_point = 290.13,
        clouds = 20, dt = 1723132800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723132800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:47|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.actual_weather WHERE dt = 1723132800)
BEGIN
    INSERT INTO dbo.actual_weather (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.64,
    10000,
    230,
    0,
    1.54,
    293.1,
    1016,
    293.32,
    290.13,
    20,
    1723132800,
    0,
    0,
    'Haze',
    'haze'
    );
END
ELSE
BEGIN
    UPDATE dbo.actual_weather
    SET uvi = 1.64, visibility = 10000,
        wind_deg = 230, wind_gust = 0,
        wind_speed = 1.54, temp = 293.1,
        pressure = 1016,
        feels_like = 293.32, dew_point = 290.13,
        clouds = 20, dt = 1723132800, snow = 0,
        rain = 0, weather_main = 'Haze', weather_desc = 'haze'
    WHERE dt = 1723132800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:47|   2.1|  0.0|INFORM|Getting schema from query 'IF EXISTS (SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC)
    SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC
ELSE
    SELECT 0 AS dt'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:48|   2.1|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF EXISTS (SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC)
    SELECT TOP(1) dt FROM actual_weather ORDER BY dt DESC
ELSE
    SELECT 0 AS dt' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:48|   2.2|  0.1|STATS |Creator_XML_Creator (CreationFactory): Created 1 features
2024-08-12 12:23:48|   2.2|  0.0|STATS |Creator_Cloner (TeeFactory): Cloned 1 input feature(s) into 1 output feature(s)
2024-08-12 12:23:48|   2.2|  0.0|STATS |Creator CREATED Splitter (TeeFactory): Cloned 1 input feature(s) into 2 output feature(s)
2024-08-12 12:23:48|   2.2|  0.0|STATS |Creator_CREATED_0_GJAgmIF9G6c= Brancher -1 10 (BranchingFactory): Branched 1 input feature -- 1 feature routed to the target factory, and 0 features routed to the fallback factory.
2024-08-12 12:23:48|   2.2|  0.0|STATS |Creator_CREATED_1_Exx7idfjvCA= Brancher -1 15 (BranchingFactory): Branched 1 input feature -- 1 feature routed to the target factory, and 0 features routed to the fallback factory.
2024-08-12 12:23:48|   2.2|  0.0|STATS |_CREATOR_BRANCH_TARGET (TeeFactory): Cloned 2 input feature(s) into 2 output feature(s)
2024-08-12 12:23:48|   2.2|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `Parking' . Read operation complete
2024-08-12 12:23:48|   2.3|  0.1|INFORM|FME Configuration: Using connection values from 'ServerTestDB' for R_5
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Creating reader for format: Microsoft SQL Server Non-Spatial
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Trying to find a DYNAMIC plugin for reader named `MSSQL_ADO'
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Performing query against MSSQL_ADO dataset `ServerTestDB'
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Opening `Parking' for read operation
2024-08-12 12:23:48|   2.3|  0.0|INFORM|MSSQL_ADO reader: Creating bulk features from individual features
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723489200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.1,
    10000,
    119,
    6.09,
    5.79,
    290.55,
    1014,
    0,
    290.43,
    287.07,
    100,
    1723489200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.1, visibility = 10000,
        wind_deg = 119, wind_gust = 6.09,
        wind_speed = 5.79, temp = 290.55,
        pressure = 1014, pop = 0,
        feels_like = 290.43, dew_point = 287.07,
        clouds = 100, dt = 1723489200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723489200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:48|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723489200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.1,
    10000,
    119,
    6.09,
    5.79,
    290.55,
    1014,
    0,
    290.43,
    287.07,
    100,
    1723489200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.1, visibility = 10000,
        wind_deg = 119, wind_gust = 6.09,
        wind_speed = 5.79, temp = 290.55,
        pressure = 1014, pop = 0,
        feels_like = 290.43, dew_point = 287.07,
        clouds = 100, dt = 1723489200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723489200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723492800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.21,
    10000,
    119,
    6.2,
    5.69,
    290.34,
    1014,
    0,
    290.23,
    287.05,
    100,
    1723492800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.21, visibility = 10000,
        wind_deg = 119, wind_gust = 6.2,
        wind_speed = 5.69, temp = 290.34,
        pressure = 1014, pop = 0,
        feels_like = 290.23, dew_point = 287.05,
        clouds = 100, dt = 1723492800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723492800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:48|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723492800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.21,
    10000,
    119,
    6.2,
    5.69,
    290.34,
    1014,
    0,
    290.23,
    287.05,
    100,
    1723492800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.21, visibility = 10000,
        wind_deg = 119, wind_gust = 6.2,
        wind_speed = 5.69, temp = 290.34,
        pressure = 1014, pop = 0,
        feels_like = 290.23, dew_point = 287.05,
        clouds = 100, dt = 1723492800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723492800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Database read complete.  Retrieved 0 feature(s)
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Logging limit reached for the preceding message. Further instances of this message will not be logged
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723496400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.33,
    10000,
    120,
    6.21,
    5.5,
    290.37,
    1014,
    0,
    290.18,
    286.5,
    100,
    1723496400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.33, visibility = 10000,
        wind_deg = 120, wind_gust = 6.21,
        wind_speed = 5.5, temp = 290.37,
        pressure = 1014, pop = 0,
        feels_like = 290.18, dew_point = 286.5,
        clouds = 100, dt = 1723496400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723496400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:48|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723496400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.33,
    10000,
    120,
    6.21,
    5.5,
    290.37,
    1014,
    0,
    290.18,
    286.5,
    100,
    1723496400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.33, visibility = 10000,
        wind_deg = 120, wind_gust = 6.21,
        wind_speed = 5.5, temp = 290.37,
        pressure = 1014, pop = 0,
        feels_like = 290.18, dew_point = 286.5,
        clouds = 100, dt = 1723496400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723496400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:48|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723500000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.38,
    10000,
    123,
    5.59,
    4.84,
    290.67,
    1014,
    0,
    290.44,
    286.19,
    100,
    1723500000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.38, visibility = 10000,
        wind_deg = 123, wind_gust = 5.59,
        wind_speed = 4.84, temp = 290.67,
        pressure = 1014, pop = 0,
        feels_like = 290.44, dew_point = 286.19,
        clouds = 100, dt = 1723500000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723500000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:49|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723500000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.38,
    10000,
    123,
    5.59,
    4.84,
    290.67,
    1014,
    0,
    290.44,
    286.19,
    100,
    1723500000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.38, visibility = 10000,
        wind_deg = 123, wind_gust = 5.59,
        wind_speed = 4.84, temp = 290.67,
        pressure = 1014, pop = 0,
        feels_like = 290.44, dew_point = 286.19,
        clouds = 100, dt = 1723500000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723500000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:49|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723503600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.22,
    10000,
    137,
    4.66,
    3.75,
    290.96,
    1013,
    0,
    290.68,
    285.85,
    100,
    1723503600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.22, visibility = 10000,
        wind_deg = 137, wind_gust = 4.66,
        wind_speed = 3.75, temp = 290.96,
        pressure = 1013, pop = 0,
        feels_like = 290.68, dew_point = 285.85,
        clouds = 100, dt = 1723503600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723503600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:49|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723503600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.22,
    10000,
    137,
    4.66,
    3.75,
    290.96,
    1013,
    0,
    290.68,
    285.85,
    100,
    1723503600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.22, visibility = 10000,
        wind_deg = 137, wind_gust = 4.66,
        wind_speed = 3.75, temp = 290.96,
        pressure = 1013, pop = 0,
        feels_like = 290.68, dew_point = 285.85,
        clouds = 100, dt = 1723503600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723503600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:49|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723507200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.96,
    10000,
    152,
    3.93,
    3.08,
    291.02,
    1013,
    0,
    290.74,
    285.63,
    100,
    1723507200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.96, visibility = 10000,
        wind_deg = 152, wind_gust = 3.93,
        wind_speed = 3.08, temp = 291.02,
        pressure = 1013, pop = 0,
        feels_like = 290.74, dew_point = 285.63,
        clouds = 100, dt = 1723507200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723507200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:49|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723507200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.96,
    10000,
    152,
    3.93,
    3.08,
    291.02,
    1013,
    0,
    290.74,
    285.63,
    100,
    1723507200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.96, visibility = 10000,
        wind_deg = 152, wind_gust = 3.93,
        wind_speed = 3.08, temp = 291.02,
        pressure = 1013, pop = 0,
        feels_like = 290.74, dew_point = 285.63,
        clouds = 100, dt = 1723507200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723507200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:49|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723510800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.43,
    10000,
    153,
    4.02,
    3,
    290.91,
    1013,
    0,
    290.65,
    285.83,
    100,
    1723510800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.43, visibility = 10000,
        wind_deg = 153, wind_gust = 4.02,
        wind_speed = 3, temp = 290.91,
        pressure = 1013, pop = 0,
        feels_like = 290.65, dew_point = 285.83,
        clouds = 100, dt = 1723510800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723510800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:49|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723510800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.43,
    10000,
    153,
    4.02,
    3,
    290.91,
    1013,
    0,
    290.65,
    285.83,
    100,
    1723510800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.43, visibility = 10000,
        wind_deg = 153, wind_gust = 4.02,
        wind_speed = 3, temp = 290.91,
        pressure = 1013, pop = 0,
        feels_like = 290.65, dew_point = 285.83,
        clouds = 100, dt = 1723510800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723510800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:49|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723514400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.16,
    10000,
    156,
    3.01,
    2.22,
    290.72,
    1013,
    0,
    290.46,
    285.92,
    100,
    1723514400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.16, visibility = 10000,
        wind_deg = 156, wind_gust = 3.01,
        wind_speed = 2.22, temp = 290.72,
        pressure = 1013, pop = 0,
        feels_like = 290.46, dew_point = 285.92,
        clouds = 100, dt = 1723514400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723514400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:50|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723514400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.16,
    10000,
    156,
    3.01,
    2.22,
    290.72,
    1013,
    0,
    290.46,
    285.92,
    100,
    1723514400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.16, visibility = 10000,
        wind_deg = 156, wind_gust = 3.01,
        wind_speed = 2.22, temp = 290.72,
        pressure = 1013, pop = 0,
        feels_like = 290.46, dew_point = 285.92,
        clouds = 100, dt = 1723514400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723514400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:50|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723518000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    142,
    1.69,
    1.36,
    290.76,
    1013,
    0,
    290.51,
    285.9,
    100,
    1723518000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 142, wind_gust = 1.69,
        wind_speed = 1.36, temp = 290.76,
        pressure = 1013, pop = 0,
        feels_like = 290.51, dew_point = 285.9,
        clouds = 100, dt = 1723518000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723518000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:50|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723518000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    142,
    1.69,
    1.36,
    290.76,
    1013,
    0,
    290.51,
    285.9,
    100,
    1723518000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 142, wind_gust = 1.69,
        wind_speed = 1.36, temp = 290.76,
        pressure = 1013, pop = 0,
        feels_like = 290.51, dew_point = 285.9,
        clouds = 100, dt = 1723518000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723518000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:50|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723521600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    127,
    1.79,
    1.39,
    291.08,
    1013,
    0,
    290.81,
    285.8,
    100,
    1723521600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 127, wind_gust = 1.79,
        wind_speed = 1.39, temp = 291.08,
        pressure = 1013, pop = 0,
        feels_like = 290.81, dew_point = 285.8,
        clouds = 100, dt = 1723521600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723521600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:50|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723521600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    127,
    1.79,
    1.39,
    291.08,
    1013,
    0,
    290.81,
    285.8,
    100,
    1723521600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 127, wind_gust = 1.79,
        wind_speed = 1.39, temp = 291.08,
        pressure = 1013, pop = 0,
        feels_like = 290.81, dew_point = 285.8,
        clouds = 100, dt = 1723521600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723521600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:50|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723525200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    113,
    2.96,
    2.23,
    291.3,
    1013,
    0,
    291.02,
    285.9,
    100,
    1723525200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 113, wind_gust = 2.96,
        wind_speed = 2.23, temp = 291.3,
        pressure = 1013, pop = 0,
        feels_like = 291.02, dew_point = 285.9,
        clouds = 100, dt = 1723525200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723525200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:50|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723525200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    113,
    2.96,
    2.23,
    291.3,
    1013,
    0,
    291.02,
    285.9,
    100,
    1723525200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 113, wind_gust = 2.96,
        wind_speed = 2.23, temp = 291.3,
        pressure = 1013, pop = 0,
        feels_like = 291.02, dew_point = 285.9,
        clouds = 100, dt = 1723525200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723525200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:50|   2.3|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723528800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    115,
    3.9,
    3.11,
    291.13,
    1013,
    0,
    290.89,
    286,
    100,
    1723528800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 115, wind_gust = 3.9,
        wind_speed = 3.11, temp = 291.13,
        pressure = 1013, pop = 0,
        feels_like = 290.89, dew_point = 286,
        clouds = 100, dt = 1723528800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723528800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:51|   2.3|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723528800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    115,
    3.9,
    3.11,
    291.13,
    1013,
    0,
    290.89,
    286,
    100,
    1723528800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 115, wind_gust = 3.9,
        wind_speed = 3.11, temp = 291.13,
        pressure = 1013, pop = 0,
        feels_like = 290.89, dew_point = 286,
        clouds = 100, dt = 1723528800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723528800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:51|   2.4|  0.1|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723532400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    118,
    4.2,
    3.42,
    290.59,
    1014,
    0,
    290.35,
    286.02,
    100,
    1723532400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 118, wind_gust = 4.2,
        wind_speed = 3.42, temp = 290.59,
        pressure = 1014, pop = 0,
        feels_like = 290.35, dew_point = 286.02,
        clouds = 100, dt = 1723532400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723532400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:51|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723532400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    118,
    4.2,
    3.42,
    290.59,
    1014,
    0,
    290.35,
    286.02,
    100,
    1723532400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 118, wind_gust = 4.2,
        wind_speed = 3.42, temp = 290.59,
        pressure = 1014, pop = 0,
        feels_like = 290.35, dew_point = 286.02,
        clouds = 100, dt = 1723532400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723532400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:51|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723536000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    117,
    4.54,
    3.73,
    290.28,
    1013,
    0,
    290.03,
    285.92,
    100,
    1723536000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 117, wind_gust = 4.54,
        wind_speed = 3.73, temp = 290.28,
        pressure = 1013, pop = 0,
        feels_like = 290.03, dew_point = 285.92,
        clouds = 100, dt = 1723536000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723536000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:51|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723536000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    117,
    4.54,
    3.73,
    290.28,
    1013,
    0,
    290.03,
    285.92,
    100,
    1723536000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 117, wind_gust = 4.54,
        wind_speed = 3.73, temp = 290.28,
        pressure = 1013, pop = 0,
        feels_like = 290.03, dew_point = 285.92,
        clouds = 100, dt = 1723536000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723536000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:51|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723539600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    125,
    4.52,
    3.86,
    290.2,
    1013,
    0,
    289.97,
    285.95,
    100,
    1723539600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 125, wind_gust = 4.52,
        wind_speed = 3.86, temp = 290.2,
        pressure = 1013, pop = 0,
        feels_like = 289.97, dew_point = 285.95,
        clouds = 100, dt = 1723539600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723539600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:51|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723539600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    125,
    4.52,
    3.86,
    290.2,
    1013,
    0,
    289.97,
    285.95,
    100,
    1723539600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 125, wind_gust = 4.52,
        wind_speed = 3.86, temp = 290.2,
        pressure = 1013, pop = 0,
        feels_like = 289.97, dew_point = 285.95,
        clouds = 100, dt = 1723539600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723539600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:51|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723543200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    127,
    4.91,
    4.25,
    289.88,
    1013,
    0,
    289.67,
    286.01,
    100,
    1723543200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 127, wind_gust = 4.91,
        wind_speed = 4.25, temp = 289.88,
        pressure = 1013, pop = 0,
        feels_like = 289.67, dew_point = 286.01,
        clouds = 100, dt = 1723543200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723543200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:51|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723543200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    127,
    4.91,
    4.25,
    289.88,
    1013,
    0,
    289.67,
    286.01,
    100,
    1723543200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 127, wind_gust = 4.91,
        wind_speed = 4.25, temp = 289.88,
        pressure = 1013, pop = 0,
        feels_like = 289.67, dew_point = 286.01,
        clouds = 100, dt = 1723543200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723543200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:52|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723546800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    122,
    5.21,
    4.41,
    289.73,
    1014,
    0,
    289.53,
    285.99,
    100,
    1723546800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 122, wind_gust = 5.21,
        wind_speed = 4.41, temp = 289.73,
        pressure = 1014, pop = 0,
        feels_like = 289.53, dew_point = 285.99,
        clouds = 100, dt = 1723546800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723546800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:52|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723546800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    122,
    5.21,
    4.41,
    289.73,
    1014,
    0,
    289.53,
    285.99,
    100,
    1723546800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 122, wind_gust = 5.21,
        wind_speed = 4.41, temp = 289.73,
        pressure = 1014, pop = 0,
        feels_like = 289.53, dew_point = 285.99,
        clouds = 100, dt = 1723546800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723546800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:52|   2.4|  0.0|INFORM|PutForecasts (QueryFactory): 17 input initiators processed
2024-08-12 12:23:52|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723550400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    113,
    5.67,
    4.64,
    289.58,
    1014,
    0,
    289.37,
    286.02,
    100,
    1723550400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 113, wind_gust = 5.67,
        wind_speed = 4.64, temp = 289.58,
        pressure = 1014, pop = 0,
        feels_like = 289.37, dew_point = 286.02,
        clouds = 100, dt = 1723550400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723550400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:52|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723550400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    113,
    5.67,
    4.64,
    289.58,
    1014,
    0,
    289.37,
    286.02,
    100,
    1723550400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 113, wind_gust = 5.67,
        wind_speed = 4.64, temp = 289.58,
        pressure = 1014, pop = 0,
        feels_like = 289.37, dew_point = 286.02,
        clouds = 100, dt = 1723550400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723550400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:52|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723554000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    107,
    6.08,
    4.95,
    289.38,
    1014,
    0,
    289.17,
    286.05,
    100,
    1723554000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 107, wind_gust = 6.08,
        wind_speed = 4.95, temp = 289.38,
        pressure = 1014, pop = 0,
        feels_like = 289.17, dew_point = 286.05,
        clouds = 100, dt = 1723554000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723554000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:52|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723554000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    107,
    6.08,
    4.95,
    289.38,
    1014,
    0,
    289.17,
    286.05,
    100,
    1723554000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 107, wind_gust = 6.08,
        wind_speed = 4.95, temp = 289.38,
        pressure = 1014, pop = 0,
        feels_like = 289.17, dew_point = 286.05,
        clouds = 100, dt = 1723554000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723554000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:52|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723557600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.08,
    10000,
    107,
    6.36,
    5.39,
    289.24,
    1015,
    0,
    289.05,
    286.02,
    100,
    1723557600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.08, visibility = 10000,
        wind_deg = 107, wind_gust = 6.36,
        wind_speed = 5.39, temp = 289.24,
        pressure = 1015, pop = 0,
        feels_like = 289.05, dew_point = 286.02,
        clouds = 100, dt = 1723557600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723557600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:52|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723557600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.08,
    10000,
    107,
    6.36,
    5.39,
    289.24,
    1015,
    0,
    289.05,
    286.02,
    100,
    1723557600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.08, visibility = 10000,
        wind_deg = 107, wind_gust = 6.36,
        wind_speed = 5.39, temp = 289.24,
        pressure = 1015, pop = 0,
        feels_like = 289.05, dew_point = 286.02,
        clouds = 100, dt = 1723557600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723557600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:52|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723561200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.25,
    10000,
    109,
    6.91,
    6.04,
    289.08,
    1016,
    0,
    288.9,
    286.04,
    100,
    1723561200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.25, visibility = 10000,
        wind_deg = 109, wind_gust = 6.91,
        wind_speed = 6.04, temp = 289.08,
        pressure = 1016, pop = 0,
        feels_like = 288.9, dew_point = 286.04,
        clouds = 100, dt = 1723561200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723561200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:53|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723561200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.25,
    10000,
    109,
    6.91,
    6.04,
    289.08,
    1016,
    0,
    288.9,
    286.04,
    100,
    1723561200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.25, visibility = 10000,
        wind_deg = 109, wind_gust = 6.91,
        wind_speed = 6.04, temp = 289.08,
        pressure = 1016, pop = 0,
        feels_like = 288.9, dew_point = 286.04,
        clouds = 100, dt = 1723561200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723561200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:53|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723564800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.69,
    10000,
    114,
    6.53,
    6.04,
    289.12,
    1016,
    0,
    288.97,
    286.17,
    100,
    1723564800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.69, visibility = 10000,
        wind_deg = 114, wind_gust = 6.53,
        wind_speed = 6.04, temp = 289.12,
        pressure = 1016, pop = 0,
        feels_like = 288.97, dew_point = 286.17,
        clouds = 100, dt = 1723564800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723564800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:53|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723564800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.69,
    10000,
    114,
    6.53,
    6.04,
    289.12,
    1016,
    0,
    288.97,
    286.17,
    100,
    1723564800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.69, visibility = 10000,
        wind_deg = 114, wind_gust = 6.53,
        wind_speed = 6.04, temp = 289.12,
        pressure = 1016, pop = 0,
        feels_like = 288.97, dew_point = 286.17,
        clouds = 100, dt = 1723564800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723564800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:53|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723568400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.36,
    10000,
    121,
    6.4,
    5.94,
    288.95,
    1016,
    0,
    288.78,
    286.18,
    100,
    1723568400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.36, visibility = 10000,
        wind_deg = 121, wind_gust = 6.4,
        wind_speed = 5.94, temp = 288.95,
        pressure = 1016, pop = 0,
        feels_like = 288.78, dew_point = 286.18,
        clouds = 100, dt = 1723568400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723568400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:53|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723568400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.36,
    10000,
    121,
    6.4,
    5.94,
    288.95,
    1016,
    0,
    288.78,
    286.18,
    100,
    1723568400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.36, visibility = 10000,
        wind_deg = 121, wind_gust = 6.4,
        wind_speed = 5.94, temp = 288.95,
        pressure = 1016, pop = 0,
        feels_like = 288.78, dew_point = 286.18,
        clouds = 100, dt = 1723568400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723568400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:53|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723572000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.64,
    10000,
    121,
    6.12,
    5.57,
    289.09,
    1017,
    0,
    288.91,
    285.95,
    100,
    1723572000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.64, visibility = 10000,
        wind_deg = 121, wind_gust = 6.12,
        wind_speed = 5.57, temp = 289.09,
        pressure = 1017, pop = 0,
        feels_like = 288.91, dew_point = 285.95,
        clouds = 100, dt = 1723572000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723572000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:53|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723572000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.64,
    10000,
    121,
    6.12,
    5.57,
    289.09,
    1017,
    0,
    288.91,
    285.95,
    100,
    1723572000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.64, visibility = 10000,
        wind_deg = 121, wind_gust = 6.12,
        wind_speed = 5.57, temp = 289.09,
        pressure = 1017, pop = 0,
        feels_like = 288.91, dew_point = 285.95,
        clouds = 100, dt = 1723572000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723572000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:53|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723575600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.99,
    10000,
    122,
    6.01,
    5.56,
    289.26,
    1017,
    0,
    289.02,
    285.59,
    100,
    1723575600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.99, visibility = 10000,
        wind_deg = 122, wind_gust = 6.01,
        wind_speed = 5.56, temp = 289.26,
        pressure = 1017, pop = 0,
        feels_like = 289.02, dew_point = 285.59,
        clouds = 100, dt = 1723575600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723575600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:54|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723575600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.99,
    10000,
    122,
    6.01,
    5.56,
    289.26,
    1017,
    0,
    289.02,
    285.59,
    100,
    1723575600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.99, visibility = 10000,
        wind_deg = 122, wind_gust = 6.01,
        wind_speed = 5.56, temp = 289.26,
        pressure = 1017, pop = 0,
        feels_like = 289.02, dew_point = 285.59,
        clouds = 100, dt = 1723575600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723575600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:54|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723579200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.14,
    10000,
    128,
    5.39,
    5.07,
    289.77,
    1017,
    0,
    289.47,
    285.34,
    100,
    1723579200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.14, visibility = 10000,
        wind_deg = 128, wind_gust = 5.39,
        wind_speed = 5.07, temp = 289.77,
        pressure = 1017, pop = 0,
        feels_like = 289.47, dew_point = 285.34,
        clouds = 100, dt = 1723579200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723579200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:54|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723579200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.14,
    10000,
    128,
    5.39,
    5.07,
    289.77,
    1017,
    0,
    289.47,
    285.34,
    100,
    1723579200,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.14, visibility = 10000,
        wind_deg = 128, wind_gust = 5.39,
        wind_speed = 5.07, temp = 289.77,
        pressure = 1017, pop = 0,
        feels_like = 289.47, dew_point = 285.34,
        clouds = 100, dt = 1723579200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723579200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:54|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723582800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.15,
    10000,
    138,
    4.68,
    4.31,
    290.46,
    1017,
    0,
    290.13,
    285.33,
    100,
    1723582800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.15, visibility = 10000,
        wind_deg = 138, wind_gust = 4.68,
        wind_speed = 4.31, temp = 290.46,
        pressure = 1017, pop = 0,
        feels_like = 290.13, dew_point = 285.33,
        clouds = 100, dt = 1723582800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723582800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:54|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723582800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.15,
    10000,
    138,
    4.68,
    4.31,
    290.46,
    1017,
    0,
    290.13,
    285.33,
    100,
    1723582800,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.15, visibility = 10000,
        wind_deg = 138, wind_gust = 4.68,
        wind_speed = 4.31, temp = 290.46,
        pressure = 1017, pop = 0,
        feels_like = 290.13, dew_point = 285.33,
        clouds = 100, dt = 1723582800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723582800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:54|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723586400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.57,
    10000,
    157,
    3.87,
    3.62,
    290.85,
    1017,
    0,
    290.53,
    285.36,
    100,
    1723586400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.57, visibility = 10000,
        wind_deg = 157, wind_gust = 3.87,
        wind_speed = 3.62, temp = 290.85,
        pressure = 1017, pop = 0,
        feels_like = 290.53, dew_point = 285.36,
        clouds = 100, dt = 1723586400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723586400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:54|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723586400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.57,
    10000,
    157,
    3.87,
    3.62,
    290.85,
    1017,
    0,
    290.53,
    285.36,
    100,
    1723586400,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.57, visibility = 10000,
        wind_deg = 157, wind_gust = 3.87,
        wind_speed = 3.62, temp = 290.85,
        pressure = 1017, pop = 0,
        feels_like = 290.53, dew_point = 285.36,
        clouds = 100, dt = 1723586400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723586400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:54|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723590000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.42,
    10000,
    179,
    2.95,
    3.19,
    290.65,
    1017,
    0,
    290.36,
    285.54,
    94,
    1723590000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.42, visibility = 10000,
        wind_deg = 179, wind_gust = 2.95,
        wind_speed = 3.19, temp = 290.65,
        pressure = 1017, pop = 0,
        feels_like = 290.36, dew_point = 285.54,
        clouds = 94, dt = 1723590000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723590000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:54|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723590000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.42,
    10000,
    179,
    2.95,
    3.19,
    290.65,
    1017,
    0,
    290.36,
    285.54,
    94,
    1723590000,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.42, visibility = 10000,
        wind_deg = 179, wind_gust = 2.95,
        wind_speed = 3.19, temp = 290.65,
        pressure = 1017, pop = 0,
        feels_like = 290.36, dew_point = 285.54,
        clouds = 94, dt = 1723590000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723590000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:54|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723593600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.4,
    10000,
    188,
    2.53,
    2.79,
    290.45,
    1017,
    0,
    290.17,
    285.5,
    94,
    1723593600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.4, visibility = 10000,
        wind_deg = 188, wind_gust = 2.53,
        wind_speed = 2.79, temp = 290.45,
        pressure = 1017, pop = 0,
        feels_like = 290.17, dew_point = 285.5,
        clouds = 94, dt = 1723593600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723593600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723593600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.4,
    10000,
    188,
    2.53,
    2.79,
    290.45,
    1017,
    0,
    290.17,
    285.5,
    94,
    1723593600,
    0,
    0,
    'Clouds',
    'overcast clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.4, visibility = 10000,
        wind_deg = 188, wind_gust = 2.53,
        wind_speed = 2.79, temp = 290.45,
        pressure = 1017, pop = 0,
        feels_like = 290.17, dew_point = 285.5,
        clouds = 94, dt = 1723593600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'overcast clouds'
    WHERE dt = 1723593600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723597200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.56,
    10000,
    188,
    2.06,
    2.22,
    290.43,
    1017,
    0,
    290.15,
    285.46,
    63,
    1723597200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.56, visibility = 10000,
        wind_deg = 188, wind_gust = 2.06,
        wind_speed = 2.22, temp = 290.43,
        pressure = 1017, pop = 0,
        feels_like = 290.15, dew_point = 285.46,
        clouds = 63, dt = 1723597200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723597200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723597200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.56,
    10000,
    188,
    2.06,
    2.22,
    290.43,
    1017,
    0,
    290.15,
    285.46,
    63,
    1723597200,
    0,
    0,
    'Clouds',
    'broken clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.56, visibility = 10000,
        wind_deg = 188, wind_gust = 2.06,
        wind_speed = 2.22, temp = 290.43,
        pressure = 1017, pop = 0,
        feels_like = 290.15, dew_point = 285.46,
        clouds = 63, dt = 1723597200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'broken clouds'
    WHERE dt = 1723597200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723600800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.19,
    10000,
    181,
    1.68,
    1.64,
    290.44,
    1017,
    0,
    290.13,
    285.45,
    39,
    1723600800,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.19, visibility = 10000,
        wind_deg = 181, wind_gust = 1.68,
        wind_speed = 1.64, temp = 290.44,
        pressure = 1017, pop = 0,
        feels_like = 290.13, dew_point = 285.45,
        clouds = 39, dt = 1723600800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723600800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723600800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.19,
    10000,
    181,
    1.68,
    1.64,
    290.44,
    1017,
    0,
    290.13,
    285.45,
    39,
    1723600800,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.19, visibility = 10000,
        wind_deg = 181, wind_gust = 1.68,
        wind_speed = 1.64, temp = 290.44,
        pressure = 1017, pop = 0,
        feels_like = 290.13, dew_point = 285.45,
        clouds = 39, dt = 1723600800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723600800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723604400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    182,
    1.13,
    0.93,
    290.37,
    1017,
    0,
    290.05,
    285.48,
    34,
    1723604400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 182, wind_gust = 1.13,
        wind_speed = 0.93, temp = 290.37,
        pressure = 1017, pop = 0,
        feels_like = 290.05, dew_point = 285.48,
        clouds = 34, dt = 1723604400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723604400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723604400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    182,
    1.13,
    0.93,
    290.37,
    1017,
    0,
    290.05,
    285.48,
    34,
    1723604400,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 182, wind_gust = 1.13,
        wind_speed = 0.93, temp = 290.37,
        pressure = 1017, pop = 0,
        feels_like = 290.05, dew_point = 285.48,
        clouds = 34, dt = 1723604400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723604400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:55|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723608000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0.65,
    0.45,
    290.57,
    1017,
    0,
    290.27,
    285.39,
    32,
    1723608000,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0.65,
        wind_speed = 0.45, temp = 290.57,
        pressure = 1017, pop = 0,
        feels_like = 290.27, dew_point = 285.39,
        clouds = 32, dt = 1723608000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723608000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:55|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723608000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    140,
    0.65,
    0.45,
    290.57,
    1017,
    0,
    290.27,
    285.39,
    32,
    1723608000,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 140, wind_gust = 0.65,
        wind_speed = 0.45, temp = 290.57,
        pressure = 1017, pop = 0,
        feels_like = 290.27, dew_point = 285.39,
        clouds = 32, dt = 1723608000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723608000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723611600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    118,
    1.43,
    1.19,
    290.87,
    1017,
    0,
    290.58,
    285.5,
    30,
    1723611600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 118, wind_gust = 1.43,
        wind_speed = 1.19, temp = 290.87,
        pressure = 1017, pop = 0,
        feels_like = 290.58, dew_point = 285.5,
        clouds = 30, dt = 1723611600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723611600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723611600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    118,
    1.43,
    1.19,
    290.87,
    1017,
    0,
    290.58,
    285.5,
    30,
    1723611600,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 118, wind_gust = 1.43,
        wind_speed = 1.19, temp = 290.87,
        pressure = 1017, pop = 0,
        feels_like = 290.58, dew_point = 285.5,
        clouds = 30, dt = 1723611600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723611600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723615200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    117,
    1.84,
    1.61,
    290.92,
    1017,
    0,
    290.61,
    285.52,
    29,
    1723615200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 117, wind_gust = 1.84,
        wind_speed = 1.61, temp = 290.92,
        pressure = 1017, pop = 0,
        feels_like = 290.61, dew_point = 285.52,
        clouds = 29, dt = 1723615200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723615200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723615200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    117,
    1.84,
    1.61,
    290.92,
    1017,
    0,
    290.61,
    285.52,
    29,
    1723615200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 117, wind_gust = 1.84,
        wind_speed = 1.61, temp = 290.92,
        pressure = 1017, pop = 0,
        feels_like = 290.61, dew_point = 285.52,
        clouds = 29, dt = 1723615200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723615200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723618800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    1.91,
    1.78,
    290.89,
    1017,
    0,
    290.6,
    285.6,
    22,
    1723618800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 1.91,
        wind_speed = 1.78, temp = 290.89,
        pressure = 1017, pop = 0,
        feels_like = 290.6, dew_point = 285.6,
        clouds = 22, dt = 1723618800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723618800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723618800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    120,
    1.91,
    1.78,
    290.89,
    1017,
    0,
    290.6,
    285.6,
    22,
    1723618800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 120, wind_gust = 1.91,
        wind_speed = 1.78, temp = 290.89,
        pressure = 1017, pop = 0,
        feels_like = 290.6, dew_point = 285.6,
        clouds = 22, dt = 1723618800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723618800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723622400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    124,
    1.84,
    1.85,
    290.68,
    1018,
    0,
    290.39,
    285.61,
    22,
    1723622400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 124, wind_gust = 1.84,
        wind_speed = 1.85, temp = 290.68,
        pressure = 1018, pop = 0,
        feels_like = 290.39, dew_point = 285.61,
        clouds = 22, dt = 1723622400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723622400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:56|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723622400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    124,
    1.84,
    1.85,
    290.68,
    1018,
    0,
    290.39,
    285.61,
    22,
    1723622400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 124, wind_gust = 1.84,
        wind_speed = 1.85, temp = 290.68,
        pressure = 1018, pop = 0,
        feels_like = 290.39, dew_point = 285.61,
        clouds = 22, dt = 1723622400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723622400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:56|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723626000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    126,
    1.93,
    1.98,
    290.42,
    1018,
    0,
    290.11,
    285.52,
    23,
    1723626000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 126, wind_gust = 1.93,
        wind_speed = 1.98, temp = 290.42,
        pressure = 1018, pop = 0,
        feels_like = 290.11, dew_point = 285.52,
        clouds = 23, dt = 1723626000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723626000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:57|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723626000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    126,
    1.93,
    1.98,
    290.42,
    1018,
    0,
    290.11,
    285.52,
    23,
    1723626000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 126, wind_gust = 1.93,
        wind_speed = 1.98, temp = 290.42,
        pressure = 1018, pop = 0,
        feels_like = 290.11, dew_point = 285.52,
        clouds = 23, dt = 1723626000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723626000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:57|   2.4|  0.0|INFORM|PutForecasts (QueryFactory): 39 input initiators processed
2024-08-12 12:23:57|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723629600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    132,
    2.02,
    2.15,
    290.35,
    1018,
    0,
    290.06,
    285.46,
    24,
    1723629600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 132, wind_gust = 2.02,
        wind_speed = 2.15, temp = 290.35,
        pressure = 1018, pop = 0,
        feels_like = 290.06, dew_point = 285.46,
        clouds = 24, dt = 1723629600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723629600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:57|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723629600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    132,
    2.02,
    2.15,
    290.35,
    1018,
    0,
    290.06,
    285.46,
    24,
    1723629600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 132, wind_gust = 2.02,
        wind_speed = 2.15, temp = 290.35,
        pressure = 1018, pop = 0,
        feels_like = 290.06, dew_point = 285.46,
        clouds = 24, dt = 1723629600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723629600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:57|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723633200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    134,
    2.12,
    2.33,
    290.13,
    1018,
    0,
    289.82,
    285.43,
    25,
    1723633200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 134, wind_gust = 2.12,
        wind_speed = 2.33, temp = 290.13,
        pressure = 1018, pop = 0,
        feels_like = 289.82, dew_point = 285.43,
        clouds = 25, dt = 1723633200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723633200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:57|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723633200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    134,
    2.12,
    2.33,
    290.13,
    1018,
    0,
    289.82,
    285.43,
    25,
    1723633200,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 134, wind_gust = 2.12,
        wind_speed = 2.33, temp = 290.13,
        pressure = 1018, pop = 0,
        feels_like = 289.82, dew_point = 285.43,
        clouds = 25, dt = 1723633200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723633200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:57|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723636800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    136,
    2.34,
    2.52,
    289.85,
    1018,
    0,
    289.56,
    285.46,
    25,
    1723636800,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 136, wind_gust = 2.34,
        wind_speed = 2.52, temp = 289.85,
        pressure = 1018, pop = 0,
        feels_like = 289.56, dew_point = 285.46,
        clouds = 25, dt = 1723636800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723636800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:57|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723636800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    136,
    2.34,
    2.52,
    289.85,
    1018,
    0,
    289.56,
    285.46,
    25,
    1723636800,
    0,
    0,
    'Clouds',
    'scattered clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 136, wind_gust = 2.34,
        wind_speed = 2.52, temp = 289.85,
        pressure = 1018, pop = 0,
        feels_like = 289.56, dew_point = 285.46,
        clouds = 25, dt = 1723636800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'scattered clouds'
    WHERE dt = 1723636800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:57|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723640400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    134,
    1.95,
    2.21,
    289.59,
    1018,
    0,
    289.3,
    285.33,
    24,
    1723640400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 134, wind_gust = 1.95,
        wind_speed = 2.21, temp = 289.59,
        pressure = 1018, pop = 0,
        feels_like = 289.3, dew_point = 285.33,
        clouds = 24, dt = 1723640400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723640400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:58|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723640400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0,
    10000,
    134,
    1.95,
    2.21,
    289.59,
    1018,
    0,
    289.3,
    285.33,
    24,
    1723640400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0, visibility = 10000,
        wind_deg = 134, wind_gust = 1.95,
        wind_speed = 2.21, temp = 289.59,
        pressure = 1018, pop = 0,
        feels_like = 289.3, dew_point = 285.33,
        clouds = 24, dt = 1723640400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723640400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:58|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723644000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.19,
    10000,
    128,
    1.83,
    2.11,
    289.52,
    1018,
    0,
    289.22,
    285.3,
    22,
    1723644000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.19, visibility = 10000,
        wind_deg = 128, wind_gust = 1.83,
        wind_speed = 2.11, temp = 289.52,
        pressure = 1018, pop = 0,
        feels_like = 289.22, dew_point = 285.3,
        clouds = 22, dt = 1723644000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723644000
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:58|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723644000)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.19,
    10000,
    128,
    1.83,
    2.11,
    289.52,
    1018,
    0,
    289.22,
    285.3,
    22,
    1723644000,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.19, visibility = 10000,
        wind_deg = 128, wind_gust = 1.83,
        wind_speed = 2.11, temp = 289.52,
        pressure = 1018, pop = 0,
        feels_like = 289.22, dew_point = 285.3,
        clouds = 22, dt = 1723644000, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723644000
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:58|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723647600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.69,
    10000,
    133,
    2.05,
    2.25,
    289.79,
    1019,
    0,
    289.49,
    285.33,
    18,
    1723647600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.69, visibility = 10000,
        wind_deg = 133, wind_gust = 2.05,
        wind_speed = 2.25, temp = 289.79,
        pressure = 1019, pop = 0,
        feels_like = 289.49, dew_point = 285.33,
        clouds = 18, dt = 1723647600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723647600
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:58|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723647600)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (0.69,
    10000,
    133,
    2.05,
    2.25,
    289.79,
    1019,
    0,
    289.49,
    285.33,
    18,
    1723647600,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 0.69, visibility = 10000,
        wind_deg = 133, wind_gust = 2.05,
        wind_speed = 2.25, temp = 289.79,
        pressure = 1019, pop = 0,
        feels_like = 289.49, dew_point = 285.33,
        clouds = 18, dt = 1723647600, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723647600
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:58|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723651200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.57,
    10000,
    146,
    1.95,
    2.34,
    290.24,
    1019,
    0,
    289.94,
    285.43,
    18,
    1723651200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.57, visibility = 10000,
        wind_deg = 146, wind_gust = 1.95,
        wind_speed = 2.34, temp = 290.24,
        pressure = 1019, pop = 0,
        feels_like = 289.94, dew_point = 285.43,
        clouds = 18, dt = 1723651200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723651200
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:58|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723651200)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (1.57,
    10000,
    146,
    1.95,
    2.34,
    290.24,
    1019,
    0,
    289.94,
    285.43,
    18,
    1723651200,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 1.57, visibility = 10000,
        wind_deg = 146, wind_gust = 1.95,
        wind_speed = 2.34, temp = 290.24,
        pressure = 1019, pop = 0,
        feels_like = 289.94, dew_point = 285.43,
        clouds = 18, dt = 1723651200, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723651200
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:58|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723654800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.64,
    10000,
    170,
    1.74,
    2.38,
    290.65,
    1019,
    0,
    290.34,
    285.4,
    17,
    1723654800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.64, visibility = 10000,
        wind_deg = 170, wind_gust = 1.74,
        wind_speed = 2.38, temp = 290.65,
        pressure = 1019, pop = 0,
        feels_like = 290.34, dew_point = 285.4,
        clouds = 17, dt = 1723654800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723654800
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:59|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723654800)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (2.64,
    10000,
    170,
    1.74,
    2.38,
    290.65,
    1019,
    0,
    290.34,
    285.4,
    17,
    1723654800,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 2.64, visibility = 10000,
        wind_deg = 170, wind_gust = 1.74,
        wind_speed = 2.38, temp = 290.65,
        pressure = 1019, pop = 0,
        feels_like = 290.34, dew_point = 285.4,
        clouds = 17, dt = 1723654800, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723654800
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:59|   2.4|  0.0|INFORM|Getting schema from query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723658400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.05,
    10000,
    199,
    1.35,
    2.35,
    290.78,
    1019,
    0,
    290.5,
    285.6,
    16,
    1723658400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.05, visibility = 10000,
        wind_deg = 199, wind_gust = 1.35,
        wind_speed = 2.35, temp = 290.78,
        pressure = 1019, pop = 0,
        feels_like = 290.5, dew_point = 285.6,
        clouds = 16, dt = 1723658400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723658400
END'. If query has no schema, there may be warnings in the log below that can be safely ignored
2024-08-12 12:23:59|   2.4|  0.0|WARN  |Microsoft SQL Server Non-Spatial Reader: Getting Custom SQL schema failed. Custom SQL query 'IF NOT EXISTS (SELECT * FROM dbo.forecasted WHERE dt = 1723658400)
BEGIN
    INSERT INTO dbo.forecasted (uvi,
    visibility,
    wind_deg,
    wind_gust,
    wind_speed,
    temp,
    pressure,
    pop,
    feels_like,
    dew_point,
    clouds,
    dt,
    snow,
    rain,
    weather_main,
    weather_desc
    ) VALUES (3.05,
    10000,
    199,
    1.35,
    2.35,
    290.78,
    1019,
    0,
    290.5,
    285.6,
    16,
    1723658400,
    0,
    0,
    'Clouds',
    'few clouds'
    );
END
ELSE
BEGIN
    UPDATE dbo.forecasted
    SET uvi = 3.05, visibility = 10000,
        wind_deg = 199, wind_gust = 1.35,
        wind_speed = 2.35, temp = 290.78,
        pressure = 1019, pop = 0,
        feels_like = 290.5, dew_point = 285.6,
        clouds = 16, dt = 1723658400, snow = 0,
        rain = 0, weather_main = 'Clouds', weather_desc = 'few clouds'
    WHERE dt = 1723658400
END' may execute in an unexpected manner. Make sure all columns are named (any ambiguous columns, e.g. GEOM.STBuffer(1), must have an AS clause). If there is an ORDER BY clause, either remove it or add a TOP clause
2024-08-12 12:23:59|   2.4|  0.0|INFORM|Optional `process_group' method not present; not called
2024-08-12 12:23:59|   2.4|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `Parking' . Read operation complete
2024-08-12 12:23:59|   2.4|  0.0|INFORM|... Last line repeated 2 times ...
2024-08-12 12:23:59|   2.4|  0.0|INFORM|Optional `process_group' method not present; not called
2024-08-12 12:23:59|   2.5|  0.1|INFORM|Optional `process_group' method not present; not called
2024-08-12 12:23:59|   2.5|  0.0|INFORM|Microsoft SQL Server Non-Spatial Reader: Closing `Parking' . Read operation complete
2024-08-12 12:23:59|   2.5|  0.0|STATS |Destination Feature Type Routing Correlator (RoutingFactory): Tested 0 input feature(s), wrote 0 output feature(s): 0 matched merge filters, 0 were routed to output, 0 could not be routed.
2024-08-12 12:23:59|   2.5|  0.0|STATS |Final Output Nuker (TeeFactory): Cloned 0 input feature(s) into 0 output feature(s)
2024-08-12 12:23:59|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-08-12 12:23:59|   2.5|  0.0|STATS |                            Features Read Summary
2024-08-12 12:23:59|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-08-12 12:23:59|   2.5|  0.0|STATS |==============================================================================
2024-08-12 12:23:59|   2.5|  0.0|STATS |Total Features Read                                                          0
2024-08-12 12:23:59|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-08-12 12:23:59|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-08-12 12:23:59|   2.5|  0.0|STATS |                           Features Written Summary
2024-08-12 12:23:59|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-08-12 12:23:59|   2.5|  0.0|STATS |==============================================================================
2024-08-12 12:23:59|   2.5|  0.0|STATS |Total Features Written                                                       0
2024-08-12 12:23:59|   2.5|  0.0|STATS |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2024-08-12 12:23:59|   2.5|  0.0|WARN  |-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
2024-08-12 12:23:59|   2.5|  0.0|WARN  |-~                                                                             ~-
2024-08-12 12:23:59|   2.5|  0.0|WARN  |-~    Feature caches have been recorded at every stage of the translation.     ~-
2024-08-12 12:23:59|   2.5|  0.0|WARN  |-~                      To inspect the recorded features,                      ~-
2024-08-12 12:23:59|   2.5|  0.0|WARN  |-~              click the feature cache icons next to the ports.               ~-
2024-08-12 12:23:59|   2.5|  0.0|WARN  |-~                                                                             ~-
2024-08-12 12:23:59|   2.5|  0.0|WARN  |-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
2024-08-12 12:23:59|   2.5|  0.0|INFORM|Translation was SUCCESSFUL with 160 warning(s) (0 feature(s) output)
2024-08-12 12:23:59|   2.5|  0.0|INFORM|FME Session Duration: 37 seconds. (CPU: 1.2s user, 1.3s system)
2024-08-12 12:23:59|   2.5|  0.0|INFORM|END - ProcessID: 20880, peak process memory usage: 98244 kB, current process memory usage: 85028 kB
